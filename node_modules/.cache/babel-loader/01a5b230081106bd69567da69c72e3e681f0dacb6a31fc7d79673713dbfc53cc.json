{"ast":null,"code":"import { slicedToArray as e } from \"../../../../_virtual/_rollupPluginBabelHelpers.js\";\nimport { jsx as t } from \"react/jsx-runtime\";\nimport r, { forwardRef as i, useRef as a, useState as o, useEffect as s, useCallback as n } from \"react\";\nimport l from \"../../../hooks/useMergeRef.js\";\nimport m from \"../../../hooks/usePrevious/index.js\";\nimport { getTestId as c, ComponentDefaultTestId as d } from \"../../../tests/testIds.js\";\nvar u = i(function (i, u) {\n  var f = i.className,\n    p = i.id,\n    v = i.activeTabId,\n    T = void 0 === v ? 0 : v,\n    b = i.children,\n    h = i[\"data-testid\"],\n    j = a(null),\n    g = l(u, j),\n    I = o(T),\n    x = e(I, 2),\n    y = x[0],\n    C = x[1],\n    E = o(T),\n    N = e(E, 2),\n    P = N[0],\n    _ = N[1],\n    k = m(T);\n  s(function () {\n    T !== k && T !== P && (C(P), _(T));\n  }, [T, k, P, C, _]);\n  var A = n(function (e) {\n    C(P), _(e);\n  }, [C, P, _]);\n  return t(\"div\", Object.assign({\n    ref: g,\n    className: f,\n    id: p,\n    \"data-testid\": h || c(d.TABS_CONTEXT, p)\n  }, {\n    children: r.Children.map(b, function (e) {\n      return e.type.isTabList ? r.cloneElement(e, {\n        activeTabId: P,\n        onTabChange: A\n      }) : e.type.isTabPanels ? r.cloneElement(e, {\n        activeTabId: P,\n        animationDirection: P > y ? \"ltr\" : \"rtl\"\n      }) : e;\n    })\n  }));\n});\nexport { u as default };","map":{"version":3,"names":["u","i","f","className","p","id","v","activeTabId","T","b","children","h","j","a","g","l","I","o","x","e","y","C","E","N","P","_","k","m","s","A","n","t","Object","assign","ref","c","d","TABS_CONTEXT","r","Children","map","type","isTabList","cloneElement","onTabChange","isTabPanels","animationDirection","default"],"sources":["/Users/huynhmannguyen/Documents/GitHub/Huy_app/node_modules/monday-ui-react-core/src/components/Tabs/TabsContext/TabsContext.tsx"],"sourcesContent":["import React, { FC, forwardRef, ReactElement, useCallback, useEffect, useRef, useState } from \"react\";\nimport useMergeRef from \"../../../hooks/useMergeRef\";\nimport usePrevious from \"../../../hooks/usePrevious\";\nimport VibeComponentProps from \"../../../types/VibeComponentProps\";\nimport { ComponentDefaultTestId, getTestId } from \"../../../tests/test-ids-utils\";\n\nexport interface TabsContextProps extends VibeComponentProps {\n  activeTabId?: number;\n  children?: ReactElement | ReactElement[];\n}\n\ntype TabsChild = ReactElement & {\n  type: Record<string, unknown>;\n};\n\nconst TabsContext: FC<TabsContextProps> = forwardRef(\n  ({ className, id, activeTabId = 0, children, \"data-testid\": dataTestId }, ref) => {\n    const componentRef = useRef(null);\n    const mergedRef = useMergeRef(ref, componentRef);\n\n    const [previousActiveTabIdState, setPreviousActiveTabIdState] = useState(activeTabId);\n    const [activeTabIdState, setActiveTabIdState] = useState(activeTabId);\n    const prevActiveTabIdProp = usePrevious(activeTabId);\n\n    useEffect(() => {\n      // Update active tab if changed from props\n      if (activeTabId !== prevActiveTabIdProp && activeTabId !== activeTabIdState) {\n        setPreviousActiveTabIdState(activeTabIdState);\n        setActiveTabIdState(activeTabId);\n      }\n    }, [activeTabId, prevActiveTabIdProp, activeTabIdState, setPreviousActiveTabIdState, setActiveTabIdState]);\n\n    const onTabClick = useCallback(\n      (tabId: number) => {\n        setPreviousActiveTabIdState(activeTabIdState);\n        setActiveTabIdState(tabId);\n      },\n      [setPreviousActiveTabIdState, activeTabIdState, setActiveTabIdState]\n    );\n\n    return (\n      <div\n        ref={mergedRef}\n        className={className}\n        id={id}\n        data-testid={dataTestId || getTestId(ComponentDefaultTestId.TABS_CONTEXT, id)}\n      >\n        {React.Children.map(children, (child: TabsChild) => {\n          if (child.type.isTabList) {\n            return React.cloneElement(child, { activeTabId: activeTabIdState, onTabChange: onTabClick });\n          }\n          if (child.type.isTabPanels) {\n            const animationDirection = previousActiveTabIdState < activeTabIdState ? \"ltr\" : \"rtl\";\n            return React.cloneElement(child, { activeTabId: activeTabIdState, animationDirection });\n          }\n          return child;\n        })}\n      </div>\n    );\n  }\n);\n\nexport default TabsContext;\n"],"mappings":";;;;;;AAeA,IA+CAA,CAAA,GA/C0CC,CAAA,CACxC,UAAAA,CAAA,EAA0ED,CAAA;EAAO,IAA9EE,CAAA,GAASD,CAAA,CAATE,SAAA;IAAWC,CAAA,GAAEH,CAAA,CAAFI,EAAA;IAAEC,CAAA,GAAAL,CAAA,CAAEM,WAAA;IAAAC,CAAA,QAAc,MAAHF,CAAA,GAAG,IAACA,CAAA;IAAEG,CAAA,GAAQR,CAAA,CAARS,QAAA;IAAyBC,CAAA,GAAUV,CAAA,CAAzB;IACrCW,CAAA,GAAeC,CAAA,CAAO;IACtBC,CAAA,GAAYC,CAAA,CAAYf,CAAA,EAAKY,CAAA;IAEnCI,CAAA,GAAgEC,CAAA,CAAST,CAAA;IAAYU,CAAA,GAAAC,CAAA,CAAAH,CAAA;IAA9EI,CAAA,GAAwBF,CAAA;IAAEG,CAAA,GAA2BH,CAAA;IAC5DI,CAAA,GAAgDL,CAAA,CAAST,CAAA;IAAYe,CAAA,GAAAJ,CAAA,CAAAG,CAAA;IAA9DE,CAAA,GAAgBD,CAAA;IAAEE,CAAA,GAAmBF,CAAA;IACtCG,CAAA,GAAsBC,CAAA,CAAYnB,CAAA;EAExCoB,CAAA,CAAU;IAEJpB,CAAA,KAAgBkB,CAAA,IAAuBlB,CAAA,KAAgBgB,CAAA,KACzDH,CAAA,CAA4BG,CAAA,GAC5BC,CAAA,CAAoBjB,CAAA,EAExB;EAAA,GAAG,CAACA,CAAA,EAAakB,CAAA,EAAqBF,CAAA,EAAkBH,CAAA,EAA6BI,CAAA;EAErF,IAAMI,CAAA,GAAaC,CAAA,CACjB,UAACX,CAAA;IACCE,CAAA,CAA4BG,CAAA,GAC5BC,CAAA,CAAoBN,CAAA,CACrB;EAAA,GACD,CAACE,CAAA,EAA6BG,CAAA,EAAkBC,CAAA;EAGlD,OACEM,CAAA,CACE,OAAAC,MAAA,CAAAC,MAAA;IAAAC,GAAA,EAAKpB,CAAA;IACLX,SAAA,EAAWD,CAAA;IACXG,EAAA,EAAID,CAAA;IACS,eAAAO,CAAA,IAAcwB,CAAA,CAAUC,CAAA,CAAuBC,YAAA,EAAcjC,CAAA;EAAA,GAAG;IAAAM,QAAA,EAE5E4B,CAAA,CAAMC,QAAA,CAASC,GAAA,CAAI/B,CAAA,EAAU,UAACU,CAAA;MAC7B,OAAIA,CAAA,CAAMsB,IAAA,CAAKC,SAAA,GACNJ,CAAA,CAAMK,YAAA,CAAaxB,CAAA,EAAO;QAAEZ,WAAA,EAAaiB,CAAA;QAAkBoB,WAAA,EAAaf;MAAA,KAE7EV,CAAA,CAAMsB,IAAA,CAAKI,WAAA,GAENP,CAAA,CAAMK,YAAA,CAAaxB,CAAA,EAAO;QAAEZ,WAAA,EAAaiB,CAAA;QAAkBsB,kBAAA,EADZtB,CAAA,GAA3BJ,CAAA,GAA8C,QAAQ;MAAA,KAG5ED,CAAA;IAAA;EAAA,GAIf;AAAA;AAAA,SAAAnB,CAAA,IAAA+C,OAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}