{"ast":null,"code":"import { __rest as o } from \"../../../_virtual/_tslib.js\";\nimport { jsx as t } from \"react/jsx-runtime\";\nimport s, { forwardRef as r, useContext as i, useRef as e } from \"react\";\nimport a from \"classnames\";\nimport l from \"../../hooks/useMergeRef.js\";\nimport { getTestId as m } from \"../../tests/testIds.js\";\nimport { ComponentDefaultTestId as p } from \"../../tests/constants.js\";\nimport { TypographyColor as n, TypographyAlign as d } from \"./TypographyConstants.js\";\nimport { useTooltipProps as c, useEllipsisClass as f } from \"./TypographyHooks.js\";\nimport T from \"../Tooltip/Tooltip.js\";\nimport { TypographyContext as j } from \"./utils/TypographyContext.js\";\nimport h from \"./Typography.module.scss.js\";\nvar u = r(function (r, u) {\n  var v = r.className,\n    g = r.id,\n    y = r.children,\n    x = r.tooltipProps,\n    R = r[\"data-testid\"],\n    b = void 0 === R ? m(p.TEXT, g) : R,\n    w = r.element,\n    N = void 0 === w ? \"span\" : w,\n    P = r.color,\n    k = void 0 === P ? n.PRIMARY : P,\n    A = r.align,\n    C = void 0 === A ? d.START : A,\n    E = r.ellipsis,\n    I = void 0 === E || E,\n    L = r.maxLines,\n    M = void 0 === L ? 1 : L,\n    O = r.withoutTooltip,\n    _ = void 0 !== O && O,\n    H = r.role,\n    S = o(r, [\"className\", \"id\", \"children\", \"tooltipProps\", \"data-testid\", \"element\", \"color\", \"align\", \"ellipsis\", \"maxLines\", \"withoutTooltip\", \"role\"]),\n    X = i(j).overflowTolerance,\n    Y = e(null),\n    q = l(u, Y),\n    z = 1 === M,\n    B = f(q, I, M),\n    D = B.ref,\n    F = B.class,\n    G = c(Y, _, I, x, y, z, X);\n  return t(T, Object.assign({}, G, {\n    children: s.createElement(N, Object.assign({\n      id: g,\n      \"data-testid\": b,\n      className: a(h.typography, h[k], h[C], F, v),\n      ref: D,\n      role: H\n    }, S), y)\n  }));\n});\nexport { u as default };","map":{"version":3,"names":["u","r","v","className","g","id","y","children","x","tooltipProps","R","b","m","p","TEXT","w","element","N","P","color","k","n","PRIMARY","A","align","C","d","START","E","ellipsis","I","L","maxLines","M","O","withoutTooltip","_","H","role","S","o","X","i","j","overflowTolerance","Y","e","q","l","z","B","f","D","ref","F","class","G","c","t","T","Object","assign","s","createElement","a","h","typography","default"],"sources":["/Users/huynhmannguyen/Documents/GitHub/Huy_app/node_modules/monday-ui-react-core/src/components/Typography/Typography.tsx"],"sourcesContent":["import React, { forwardRef, useRef, HTMLAttributes, useContext } from \"react\";\nimport cx from \"classnames\";\nimport useMergeRef from \"../../hooks/useMergeRef\";\nimport VibeComponentProps from \"../../types/VibeComponentProps\";\nimport VibeComponent from \"../../types/VibeComponent\";\nimport { getTestId } from \"../../tests/test-ids-utils\";\nimport { ComponentDefaultTestId } from \"../../tests/constants\";\nimport { ElementContent } from \"../../types\";\nimport { TypographyColor, TypographyAlign } from \"./TypographyConstants\";\nimport { useEllipsisClass, useTooltipProps } from \"./TypographyHooks\";\nimport Tooltip, { TooltipProps } from \"../Tooltip/Tooltip\";\nimport { TypographyContext } from \"./utils/TypographyContext\";\nimport styles from \"./Typography.module.scss\";\n\nexport interface TypographyProps extends VibeComponentProps, HTMLAttributes<HTMLElement> {\n  /**\n   * The element tag of the text component\n   */\n  element?: string;\n  /**\n   * The textual content\n   */\n  children: ElementContent;\n  color?: TypographyColor;\n  align?: TypographyAlign;\n  /**\n   * When the text is too long, cut the end of the text and display instead of it three dots (...)\n   */\n  ellipsis?: boolean;\n  /**\n   * Use this prop combined with the boolean ellipsis prop for truncate the text and add an ellipsis after a certain number of lines\n   */\n  maxLines?: number;\n  /**\n   * All props are passed to the tooltip displayed when hovering over the text. By default, the tooltip will display when text contains an ellipsis and will show the full text\n   */\n  tooltipProps?: TooltipProps;\n  /**\n   * Hide tooltip when hovering the text, by default the tooltip swill display when text contains an ellipsis\n   */\n  withoutTooltip?: boolean;\n}\n\nconst Typography: VibeComponent<TypographyProps, HTMLElement> = forwardRef(\n  (\n    {\n      className,\n      id,\n      children,\n      tooltipProps,\n      \"data-testid\": dataTestId = getTestId(ComponentDefaultTestId.TEXT, id),\n      element = \"span\",\n      color = TypographyColor.PRIMARY,\n      align = TypographyAlign.START,\n      ellipsis = true,\n      maxLines = 1,\n      withoutTooltip = false,\n      role,\n      ...htmlAttributes\n    },\n    ref\n  ) => {\n    const { overflowTolerance } = useContext(TypographyContext);\n    const componentRef = useRef(null);\n    const mergedRef = useMergeRef(ref, componentRef);\n    const ignoreHeightOverflow = maxLines === 1;\n    const { ref: overrideRef, class: ellipsisClass } = useEllipsisClass(mergedRef, ellipsis, maxLines);\n    const overrideTooltipProps = useTooltipProps(\n      componentRef,\n      withoutTooltip,\n      ellipsis,\n      tooltipProps,\n      children,\n      ignoreHeightOverflow,\n      overflowTolerance\n    ) as TooltipProps;\n\n    return (\n      <Tooltip {...overrideTooltipProps}>\n        {React.createElement(\n          element,\n          {\n            id,\n            \"data-testid\": dataTestId,\n            className: cx(styles.typography, styles[color], styles[align], ellipsisClass, className),\n            ref: overrideRef,\n            role,\n            ...htmlAttributes\n          },\n          children\n        )}\n      </Tooltip>\n    );\n  }\n);\n\nexport default Typography;\n"],"mappings":";;;;;;;;;;;;AA2CM,IAAAA,CAAA,GAA0DC,CAAA,CAC9D,UACEA,CAAA,EAeAD,CAAA;EAAA,IAdEE,CAAA,GAWID,CAAA,CAXJE,SAAA;IACAC,CAAA,GAUIH,CAAA,CAVJI,EAAA;IACAC,CAAA,GASIL,CAAA,CATJM,QAAA;IACAC,CAAA,GAQIP,CAAA,CARJQ,YAAA;IAAYC,CAAA,GAQRT,CAAA,CAPJ;IAAeU,CAAA,QAAa,MAAHD,CAAA,GAAGE,CAAA,CAAUC,CAAA,CAAuBC,IAAA,EAAMV,CAAA,IAAGM,CAAA;IAAAK,CAAA,GAOlEd,CAAA,CANJe,OAAA;IAAAC,CAAA,QAAU,MAAHF,CAAA,GAAG,SAAMA,CAAA;IAAAG,CAAA,GAMZjB,CAAA,CALJkB,KAAA;IAAAC,CAAA,QAAK,MAAAF,CAAA,GAAGG,CAAA,CAAgBC,OAAA,GAAOJ,CAAA;IAAAK,CAAA,GAK3BtB,CAAA,CAJJuB,KAAA;IAAAC,CAAA,QAAK,MAAAF,CAAA,GAAGG,CAAA,CAAgBC,KAAA,GAAKJ,CAAA;IAAAK,CAAA,GAIzB3B,CAAA,CAHJ4B,QAAA;IAAAC,CAAA,QAAW,MAAHF,CAAA,IAAOA,CAAA;IAAAG,CAAA,GAGX9B,CAAA,CAFJ+B,QAAA;IAAAC,CAAA,QAAW,MAAHF,CAAA,GAAG,IAACA,CAAA;IAAAG,CAAA,GAERjC,CAAA,CADJkC,cAAA;IAAAC,CAAA,QAAiB,MAAHF,CAAA,IAAQA,CAAA;IACtBG,CAAA,GAAIpC,CAAA,CAAJqC,IAAA;IACGC,CAAA,GAbLC,CAAA,CAAAvC,CAAA;IAiBQwC,CAAA,GAAsBC,CAAA,CAAWC,CAAA,EAAjCC,iBAAA;IACFC,CAAA,GAAeC,CAAA,CAAO;IACtBC,CAAA,GAAYC,CAAA,CAAYhD,CAAA,EAAK6C,CAAA;IAC7BI,CAAA,GAAoC,MAAbhB,CAAA;IAC7BiB,CAAA,GAAmDC,CAAA,CAAiBJ,CAAA,EAAWjB,CAAA,EAAUG,CAAA;IAA5EmB,CAAA,GAAWF,CAAA,CAAhBG,GAAA;IAAyBC,CAAA,GAAaJ,CAAA,CAApBK,KAAA;IACpBC,CAAA,GAAuBC,CAAA,CAC3BZ,CAAA,EACAT,CAAA,EACAN,CAAA,EACAtB,CAAA,EACAF,CAAA,EACA2C,CAAA,EACAR,CAAA;EAGF,OACEiB,CAAA,CAACC,CAAA,EAAYC,MAAA,CAAAC,MAAA,KAAAL,CAAA;IAAAjD,QAAA,EACVuD,CAAA,CAAMC,aAAA,CACL9C,CAAA,EAAO2C,MAAA,CAAAC,MAAA;MAELxD,EAAA,EAAAD,CAAA;MACA,eAAeO,CAAA;MACfR,SAAA,EAAW6D,CAAA,CAAGC,CAAA,CAAOC,UAAA,EAAYD,CAAA,CAAO7C,CAAA,GAAQ6C,CAAA,CAAOxC,CAAA,GAAQ6B,CAAA,EAAepD,CAAA;MAC9EmD,GAAA,EAAKD,CAAA;MACLd,IAAA,EAAAD;IAAA,GACGE,CAAA,GAELjC,CAAA;EAAA,GAIR;AAAA;AAAA,SAAAN,CAAA,IAAAmE,OAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}