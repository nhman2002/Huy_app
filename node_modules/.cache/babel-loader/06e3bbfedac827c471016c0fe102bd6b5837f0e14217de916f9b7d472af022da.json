{"ast":null,"code":"import { jsx as e } from \"react/jsx-runtime\";\nimport { forwardRef as t, useRef as o, useMemo as s, Fragment as i } from \"react\";\nimport r from \"classnames\";\nimport { noop as n } from \"lodash-es\";\nimport a from \"../../hooks/useMergeRef.js\";\nimport c from \"../Tooltip/Tooltip.js\";\nimport d from \"../Icon/Icon.js\";\nimport l from \"../Icon/Icons/components/AddSmall.js\";\nimport { getWidthHeight as m } from \"./services/IconButton-helpers.js\";\nimport { withStaticProps as p } from \"../../types/withStaticProps.js\";\nimport { getTestId as u } from \"../../tests/testIds.js\";\nimport { ComponentDefaultTestId as f } from \"../../tests/constants.js\";\nimport { backwardCompatibilityForProperties as j } from \"../../helpers/backwardCompatibilityForProperties.js\";\nimport v from \"../Button/Button.js\";\nimport { BUTTON_ICON_SIZE as b } from \"../Button/ButtonConstants.js\";\nimport I from \"./IconButton.module.scss.js\";\nvar g = t(function (t, p) {\n    var h = t.className,\n      k = t.wrapperClassName,\n      z = t.iconClassName,\n      C = t.id,\n      N = t.icon,\n      S = void 0 === N ? l : N,\n      T = t.size,\n      y = void 0 === T ? g.sizes.MEDIUM : T,\n      B = t.tooltipProps,\n      O = void 0 === B ? {} : B,\n      x = t.tooltipContent,\n      E = t.ariaLabel,\n      M = t.ariaExpanded,\n      w = t.hideTooltip,\n      L = void 0 !== w && w,\n      R = t.kind,\n      A = void 0 === R ? g.kinds.TERTIARY : R,\n      F = t.active,\n      P = t.disabled,\n      U = void 0 !== P && P,\n      X = t.disabledReason,\n      D = t.onClick,\n      G = void 0 === D ? n : D,\n      W = t.color,\n      V = t.dataTestId,\n      Y = t[\"data-testid\"],\n      _ = t.insetFocus,\n      q = void 0 !== _ && _,\n      H = t.tabIndex,\n      J = o(null),\n      K = a(p, J),\n      Q = j([Y, V]),\n      Z = s(function () {\n        return (null == O ? void 0 : O.content) || x;\n      }, [null == O ? void 0 : O.content, x]),\n      $ = s(function () {\n        return E || (\"string\" == typeof Z ? Z : void 0);\n      }, [E, Z]),\n      ee = s(function () {\n        switch (y) {\n          case g.sizes.XXS:\n          case g.sizes.XS:\n            return 16;\n          case g.sizes.SMALL:\n          case g.sizes.MEDIUM:\n          case g.sizes.LARGE:\n            return b;\n          default:\n            return 24;\n        }\n      }, [y]),\n      te = s(function () {\n        var e = {\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          padding: 0\n        };\n        return y && (e = Object.assign(Object.assign({}, e), m(y))), e;\n      }, [y]),\n      oe = s(function () {\n        return L ? null : U && X ? X : Z || E;\n      }, [L, U, X, Z, E]),\n      se = k ? \"div\" : i,\n      ie = s(function () {\n        return k ? {\n          className: r(k, I.wrapper)\n        } : {};\n      }, [k]);\n    return e(se, Object.assign({}, ie, {\n      children: e(c, Object.assign({}, O, {\n        content: oe,\n        referenceWrapperClassName: I.referenceWrapper\n      }, {\n        children: e(v, Object.assign({\n          onClick: G,\n          disabled: U,\n          color: W,\n          kind: A,\n          ariaLabel: $,\n          ariaExpanded: M,\n          ref: K,\n          id: C,\n          \"data-testid\": Q || u(f.ICON_BUTTON, C),\n          noSidePadding: !0,\n          active: F,\n          className: h,\n          style: te,\n          insetFocus: q,\n          tabIndex: H\n        }, {\n          children: e(d, {\n            icon: S,\n            iconType: d.type.SVG,\n            iconSize: ee,\n            ignoreFocusStyle: !0,\n            className: z,\n            clickable: !1\n          })\n        }))\n      }))\n    }));\n  }),\n  h = p(g, {\n    sizes: v.sizes,\n    kinds: v.kinds,\n    colors: v.colors\n  });\nexport { h as default };","map":{"version":3,"names":["g","t","p","h","className","k","wrapperClassName","z","iconClassName","C","id","N","icon","S","l","T","size","y","sizes","MEDIUM","B","tooltipProps","O","x","tooltipContent","E","ariaLabel","M","ariaExpanded","w","hideTooltip","L","R","kind","A","kinds","TERTIARY","F","active","P","disabled","U","X","disabledReason","D","onClick","G","n","W","color","V","dataTestId","Y","_","insetFocus","q","H","tabIndex","J","o","K","a","Q","j","Z","s","content","$","ee","XXS","XS","SMALL","LARGE","b","te","e","justifyContent","alignItems","padding","Object","assign","m","oe","se","i","ie","r","I","wrapper","children","c","referenceWrapperClassName","referenceWrapper","v","ref","u","f","ICON_BUTTON","noSidePadding","style","d","iconType","type","SVG","iconSize","ignoreFocusStyle","clickable","colors","default"],"sources":["/Users/huynhmannguyen/Documents/GitHub/Huy_app/node_modules/monday-ui-react-core/src/components/IconButton/IconButton.tsx"],"sourcesContent":["import React, { forwardRef, Fragment, useMemo, useRef } from \"react\";\nimport cx from \"classnames\";\nimport { noop as NOOP } from \"lodash-es\";\nimport useMergeRef from \"../../hooks/useMergeRef\";\nimport Tooltip, { TooltipProps } from \"../Tooltip/Tooltip\";\nimport Icon from \"../Icon/Icon\";\nimport AddSmall from \"../Icon/Icons/components/AddSmall\";\nimport { getWidthHeight, Size } from \"./services/IconButton-helpers\";\nimport { SubIcon, VibeComponent, VibeComponentProps, withStaticProps } from \"../../types\";\nimport { getTestId } from \"../../tests/test-ids-utils\";\nimport { ComponentDefaultTestId } from \"../../tests/constants\";\nimport { backwardCompatibilityForProperties } from \"../../helpers/backwardCompatibilityForProperties\";\nimport Button from \"../Button/Button\";\nimport { BUTTON_ICON_SIZE, ButtonColor, ButtonType } from \"../Button/ButtonConstants\";\nimport styles from \"./IconButton.module.scss\";\n\nexport interface IconButtonProps extends VibeComponentProps {\n  /**\n   * id to be added to the element\n   */\n  id?: string;\n  /**\n   * callback function when clicking the icon button\n   */\n  onClick?: (event: React.MouseEvent) => void;\n  /**\n   * the class name of the button wrapper\n   */\n  wrapperClassName?: string;\n  /**\n   * the class name of the button icon\n   */\n  iconClassName?: string;\n  /**\n   * Icon to be rendered\n   */\n  icon?: SubIcon;\n  /**\n   * a11y property to be added, used for screen reader to know what kind of button it is\n   */\n  ariaLabel?: string;\n  /**\n   * a11y property to be added, used for screen reader to know if the button is expanded\n   */\n  ariaExpanded?: boolean;\n  /**\n   * Size of the icon\n   */\n  size?: Size;\n  /**\n   * Whether the tooltip should be displayed or not\n   */\n  hideTooltip?: boolean;\n  /**\n   * Props for Tooltip component\n   */\n  tooltipProps?: Partial<TooltipProps>;\n  /**\n   * Tooltip wraps the button icon, it will display in the tooltip, if not present the aria label will be shown\n   */\n  tooltipContent?: string;\n  /**\n   * Kind of button - like <Button />\n   */\n  kind?: ButtonType;\n  active?: boolean;\n  /** The button's color  */\n  color?: ButtonColor;\n  /**\n   * disabled state\n   */\n  disabled?: boolean;\n  /**\n   * if disabled - this will be shown in the tooltip\n   */\n  disabledReason?: string;\n  /**\n   * @deprecated - use \"data-testid\" instead\n   */\n  dataTestId?: string;\n  /** Change the focus indicator from around the button to within it */\n  insetFocus?: boolean;\n  /** Specifies the tab order of an element */\n  tabIndex?: number;\n}\n\nconst IconButton: VibeComponent<IconButtonProps> & {\n  sizes?: typeof Button.sizes;\n  kinds?: typeof Button.kinds;\n  colors?: typeof Button.colors;\n} = forwardRef(\n  (\n    {\n      className,\n      wrapperClassName,\n      iconClassName,\n      id,\n      icon = AddSmall,\n      size = IconButton.sizes.MEDIUM,\n      tooltipProps = {} as TooltipProps,\n      tooltipContent,\n      ariaLabel,\n      ariaExpanded,\n      hideTooltip = false,\n      kind = IconButton.kinds.TERTIARY,\n      active,\n      disabled = false,\n      disabledReason,\n      onClick = NOOP,\n      color,\n      dataTestId: backwardCompatabilityDataTestId,\n      \"data-testid\": dataTestId,\n      insetFocus = false,\n      tabIndex\n    },\n    ref\n  ) => {\n    const componentRef = useRef(null);\n    const mergedRef = useMergeRef(ref, componentRef);\n\n    const overrideDataTestId = backwardCompatibilityForProperties([dataTestId, backwardCompatabilityDataTestId]);\n    const overrideTooltipContent = useMemo(\n      () => tooltipProps?.content || tooltipContent,\n      [tooltipProps?.content, tooltipContent]\n    );\n\n    const buttonAriaLabel = useMemo(() => {\n      if (ariaLabel) return ariaLabel;\n      if (typeof overrideTooltipContent === \"string\") return overrideTooltipContent;\n      return undefined;\n    }, [ariaLabel, overrideTooltipContent]);\n\n    const iconSize = useMemo(() => {\n      switch (size) {\n        case IconButton.sizes.XXS:\n        case IconButton.sizes.XS:\n          return 16;\n        case IconButton.sizes.SMALL:\n        case IconButton.sizes.MEDIUM:\n        case IconButton.sizes.LARGE:\n          return BUTTON_ICON_SIZE;\n        default:\n          return 24;\n      }\n    }, [size]);\n\n    const overrideStyle = useMemo(() => {\n      let style = {\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        padding: 0\n      } as React.CSSProperties;\n\n      if (size) {\n        style = { ...style, ...getWidthHeight(size) };\n      }\n      return style;\n    }, [size]);\n\n    const calculatedTooltipContent = useMemo(() => {\n      if (hideTooltip) return null;\n      if (disabled && disabledReason) return disabledReason;\n      if (overrideTooltipContent) return overrideTooltipContent as never;\n      return ariaLabel;\n    }, [hideTooltip, disabled, disabledReason, overrideTooltipContent, ariaLabel]);\n\n    const IconButtonWrapper = wrapperClassName ? \"div\" : Fragment;\n    const iconButtonWrapperProps = useMemo(() => {\n      return wrapperClassName ? { className: cx(wrapperClassName, styles.wrapper) } : {};\n    }, [wrapperClassName]);\n\n    return (\n      <IconButtonWrapper {...iconButtonWrapperProps}>\n        <Tooltip\n          {...tooltipProps}\n          content={calculatedTooltipContent}\n          referenceWrapperClassName={styles.referenceWrapper}\n        >\n          <Button\n            onClick={onClick}\n            disabled={disabled}\n            color={color}\n            kind={kind}\n            ariaLabel={buttonAriaLabel}\n            ariaExpanded={ariaExpanded}\n            ref={mergedRef}\n            id={id}\n            data-testid={overrideDataTestId || getTestId(ComponentDefaultTestId.ICON_BUTTON, id)}\n            noSidePadding\n            active={active}\n            className={className}\n            style={overrideStyle}\n            insetFocus={insetFocus}\n            tabIndex={tabIndex}\n          >\n            <Icon\n              icon={icon}\n              iconType={Icon.type.SVG}\n              iconSize={iconSize}\n              ignoreFocusStyle\n              className={iconClassName}\n              clickable={false}\n            />\n          </Button>\n        </Tooltip>\n      </IconButtonWrapper>\n    );\n  }\n);\n\nexport default withStaticProps(IconButton, {\n  sizes: Button.sizes,\n  kinds: Button.kinds,\n  colors: Button.colors\n});\n"],"mappings":";;;;;;;;;;;;;;;;AAsFA,IAAMA,CAAA,GAIFC,CAAA,CACF,UAAAA,CAAA,EAwBEC,CAAA;IACE,IAvBAC,CAAA,GAASF,CAAA,CAATG,SAAA;MACAC,CAAA,GAAgBJ,CAAA,CAAhBK,gBAAA;MACAC,CAAA,GAAaN,CAAA,CAAbO,aAAA;MACAC,CAAA,GAAER,CAAA,CAAFS,EAAA;MAAEC,CAAA,GAAAV,CAAA,CACFW,IAAA;MAAAC,CAAA,QAAO,MAAHF,CAAA,GAAGG,CAAA,GAAQH,CAAA;MAAAI,CAAA,GAAAd,CAAA,CACfe,IAAA;MAAAC,CAAA,QAAO,MAAHF,CAAA,GAAGf,CAAA,CAAWkB,KAAA,CAAMC,MAAA,GAAMJ,CAAA;MAAAK,CAAA,GAAAnB,CAAA,CAC9BoB,YAAA;MAAAC,CAAA,QAAY,MAAAF,CAAA,GAAG,CAAkB,IAAAA,CAAA;MACjCG,CAAA,GAActB,CAAA,CAAduB,cAAA;MACAC,CAAA,GAASxB,CAAA,CAATyB,SAAA;MACAC,CAAA,GAAY1B,CAAA,CAAZ2B,YAAA;MAAYC,CAAA,GAAA5B,CAAA,CACZ6B,WAAA;MAAAC,CAAA,QAAc,MAAHF,CAAA,IAAQA,CAAA;MAAAG,CAAA,GAAA/B,CAAA,CACnBgC,IAAA;MAAAC,CAAA,QAAO,MAAHF,CAAA,GAAGhC,CAAA,CAAWmC,KAAA,CAAMC,QAAA,GAAQJ,CAAA;MAChCK,CAAA,GAAMpC,CAAA,CAANqC,MAAA;MAAMC,CAAA,GAAAtC,CAAA,CACNuC,QAAA;MAAAC,CAAA,QAAW,MAAHF,CAAA,IAAQA,CAAA;MAChBG,CAAA,GAAczC,CAAA,CAAd0C,cAAA;MAAcC,CAAA,GAAA3C,CAAA,CACd4C,OAAA;MAAAC,CAAA,QAAU,MAAHF,CAAA,GAAGG,CAAA,GAAIH,CAAA;MACdI,CAAA,GAAK/C,CAAA,CAALgD,KAAA;MACYC,CAAA,GAA+BjD,CAAA,CAA3CkD,UAAA;MACeC,CAAA,GAAUnD,CAAA,CAAzB;MAAaoD,CAAA,GAAApD,CAAA,CACbqD,UAAA;MAAAC,CAAA,QAAa,MAAHF,CAAA,IAAQA,CAAA;MAClBG,CAAA,GAAQvD,CAAA,CAARwD,QAAA;MAIIC,CAAA,GAAeC,CAAA,CAAO;MACtBC,CAAA,GAAYC,CAAA,CAAY3D,CAAA,EAAKwD,CAAA;MAE7BI,CAAA,GAAqBC,CAAA,CAAmC,CAACX,CAAA,EAAYF,CAAA;MACrEc,CAAA,GAAyBC,CAAA,CAC7B;QAAA,QAAM,QAAA3C,CAAA,QAAY,IAAZA,CAAA,CAAc4C,OAAA,KAAW3C,CAAc;MAAA,GAC7C,CAAC,QAAAD,CAAA,QAAY,IAAZA,CAAA,CAAc4C,OAAA,EAAS3C,CAAA;MAGpB4C,CAAA,GAAkBF,CAAA,CAAQ;QAC9B,OAAIxC,CAAA,KACkC,mBAA3BuC,CAAA,GAA4CA,CAAA,QAAvD,EAEF;MAAA,GAAG,CAACvC,CAAA,EAAWuC,CAAA;MAETI,EAAA,GAAWH,CAAA,CAAQ;QACvB,QAAQhD,CAAA;UACN,KAAKjB,CAAA,CAAWkB,KAAA,CAAMmD,GAAA;UACtB,KAAKrE,CAAA,CAAWkB,KAAA,CAAMoD,EAAA;YACpB,OAAO;UACT,KAAKtE,CAAA,CAAWkB,KAAA,CAAMqD,KAAA;UACtB,KAAKvE,CAAA,CAAWkB,KAAA,CAAMC,MAAA;UACtB,KAAKnB,CAAA,CAAWkB,KAAA,CAAMsD,KAAA;YACpB,OAAOC,CAAA;UACT;YACE,OAAO;QAAA;MAEb,GAAG,CAACxD,CAAA;MAEEyD,EAAA,GAAgBT,CAAA,CAAQ;QAC5B,IAAIU,CAAA,GAAQ;UACVC,cAAA,EAAgB;UAChBC,UAAA,EAAY;UACZC,OAAA,EAAS;QAAA;QAMX,OAHI7D,CAAA,KACF0D,CAAA,GAAKI,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,KAAQL,CAAA,GAAUM,CAAA,CAAehE,CAAA,KAEjC0D,CACT;MAAA,GAAG,CAAC1D,CAAA;MAEEiE,EAAA,GAA2BjB,CAAA,CAAQ;QACvC,OAAIlC,CAAA,GAAoB,OACpBU,CAAA,IAAYC,CAAA,GAAuBA,CAAA,GACnCsB,CAAA,IACGvC,CACT;MAAA,GAAG,CAACM,CAAA,EAAaU,CAAA,EAAUC,CAAA,EAAgBsB,CAAA,EAAwBvC,CAAA;MAE7D0D,EAAA,GAAoB9E,CAAA,GAAmB,QAAQ+E,CAAA;MAC/CC,EAAA,GAAyBpB,CAAA,CAAQ;QACrC,OAAO5D,CAAA,GAAmB;UAAED,SAAA,EAAWkF,CAAA,CAAGjF,CAAA,EAAkBkF,CAAA,CAAOC,OAAA;QAAA,IAAa,EAClF;MAAA,GAAG,CAACnF,CAAA;IAEJ,OACEsE,CAAA,CAACQ,EAAA,EAAsBJ,MAAA,CAAAC,MAAA,KAAAK,EAAA,EACrB;MAAAI,QAAA,EAAAd,CAAA,CAACe,CAAA,EAAOX,MAAA,CAAAC,MAAA,KACF1D,CAAA,EAAY;QAChB4C,OAAA,EAASgB,EAAA;QACTS,yBAAA,EAA2BJ,CAAA,CAAOK;MAAA,GAAgB;QAAAH,QAAA,EAElDd,CAAA,CAACkB,CAAA,EACCd,MAAA,CAAAC,MAAA;UAAAnC,OAAA,EAASC,CAAA;UACTN,QAAA,EAAUC,CAAA;UACVQ,KAAA,EAAOD,CAAA;UACPf,IAAA,EAAMC,CAAA;UACNR,SAAA,EAAWyC,CAAA;UACXvC,YAAA,EAAcD,CAAA;UACdmE,GAAA,EAAKlC,CAAA;UACLlD,EAAA,EAAID,CAAA;UACS,eAAAqD,CAAA,IAAsBiC,CAAA,CAAUC,CAAA,CAAuBC,WAAA,EAAaxF,CAAA;UACjFyF,aAAA,GACA;UAAA5D,MAAA,EAAQD,CAAA;UACRjC,SAAA,EAAWD,CAAA;UACXgG,KAAA,EAAOzB,EAAA;UACPpB,UAAA,EAAYC,CAAA;UACZE,QAAA,EAAUD;QAAA,GAEV;UAAAiC,QAAA,EAAAd,CAAA,CAACyB,CAAA,EAAI;YACHxF,IAAA,EAAMC,CAAA;YACNwF,QAAA,EAAUD,CAAA,CAAKE,IAAA,CAAKC,GAAA;YACpBC,QAAA,EAAUpC,EAAA;YACVqC,gBAAA,GAAgB;YAChBrG,SAAA,EAAWG,CAAA;YACXmG,SAAA,GAAW;UAAA;QAAA;MAAA;IAAA,GAMvB;EAAA;EAGavG,CAAA,GAAAD,CAAA,CAAgBF,CAAA,EAAY;IACzCkB,KAAA,EAAO2E,CAAA,CAAO3E,KAAA;IACdiB,KAAA,EAAO0D,CAAA,CAAO1D,KAAA;IACdwE,MAAA,EAAQd,CAAA,CAAOc;EAAA;AAAA,SAAAxG,CAAA,IAAAyG,OAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}