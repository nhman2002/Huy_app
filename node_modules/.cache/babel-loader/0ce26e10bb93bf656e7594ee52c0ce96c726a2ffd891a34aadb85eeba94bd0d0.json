{"ast":null,"code":"import { jsx as o } from \"react/jsx-runtime\";\nimport r from \"classnames\";\nimport { forwardRef as e, useRef as t, useCallback as i } from \"react\";\nimport s from \"../../hooks/useMergeRef.js\";\nimport l from \"../DialogContentContainer/DialogContentContainer.js\";\nimport { ColorStyle as c } from \"../../utils/colors-vars-map.js\";\nimport n from \"../Icon/Icons/components/NoColor.js\";\nimport a from \"./components/ColorPickerContent/ColorPickerContent.js\";\nimport { ColorShapes as m, DEFAULT_NUMBER_OF_COLORS_IN_LINE as d } from \"./ColorPickerConstants.js\";\nimport { calculateColorPickerDialogWidth as C } from \"./services/ColorPickerStyleService.js\";\nimport { withStaticProps as u } from \"../../types/withStaticProps.js\";\nimport { NOOP as f } from \"../../utils/function-utils.js\";\nimport { getTestId as p, ComponentDefaultTestId as I } from \"../../tests/testIds.js\";\nimport S from \"./ColorPicker.module.scss.js\";\nimport { BaseSizes as v } from \"../../constants/sizes.js\";\nvar h = u(e(function (e, u) {\n  var h = e.className,\n    j = e.onSave,\n    k = void 0 === j ? f : j,\n    L = e.value,\n    P = void 0 === L ? \"\" : L,\n    R = e.noColorText,\n    g = e.colorStyle,\n    M = void 0 === g ? c.REGULAR : g,\n    O = e.ColorIndicatorIcon,\n    y = e.SelectedIndicatorIcon,\n    b = e.shouldRenderIndicatorWithoutBackground,\n    N = e.NoColorIcon,\n    w = void 0 === N ? n : N,\n    D = e.isBlackListMode,\n    z = void 0 === D || D,\n    E = e.colorsList,\n    T = void 0 === E ? [] : E,\n    U = e.isMultiselect,\n    x = e.colorSize,\n    B = void 0 === x ? v.MEDIUM : x,\n    A = e.numberOfColorsInLine,\n    W = void 0 === A ? d : A,\n    _ = e.focusOnMount,\n    G = e.colorShape,\n    K = void 0 === G ? m.SQUARE : G,\n    Q = e.forceUseRawColorList,\n    V = e.showColorNameTooltip,\n    Y = e.id,\n    q = e[\"data-testid\"],\n    F = t(null),\n    H = s(u, F),\n    J = i(k, [k]),\n    X = C(B, W);\n  return o(l, Object.assign({\n    ref: H,\n    className: r(S.colorPicker, S.colorPickerDialogContent, h),\n    ariaLabelledby: \"Color Picker Dialog\",\n    ariaDescribedby: \"Pick color\",\n    style: {\n      width: X\n    }\n  }, {\n    children: o(a, {\n      onValueChange: J,\n      value: P,\n      noColorText: R,\n      shouldRenderIndicatorWithoutBackground: O && b,\n      colorStyle: M,\n      ColorIndicatorIcon: O,\n      SelectedIndicatorIcon: y,\n      NoColorIcon: w,\n      colorsList: T,\n      isBlackListMode: z,\n      isMultiselect: U,\n      colorSize: B,\n      numberOfColorsInLine: W,\n      focusOnMount: _,\n      colorShape: K,\n      forceUseRawColorList: Q,\n      showColorNameTooltip: V,\n      id: Y,\n      \"data-testid\": q || p(I.COLOR_PICKER, Y)\n    })\n  }));\n}), {\n  COLOR_STYLES: c,\n  sizes: v,\n  colorStyles: c,\n  colorSizes: v,\n  colorShapes: m\n});\nexport { h as default };","map":{"version":3,"names":["h","u","e","className","j","onSave","k","f","L","value","P","R","noColorText","g","colorStyle","M","c","REGULAR","O","ColorIndicatorIcon","y","SelectedIndicatorIcon","b","shouldRenderIndicatorWithoutBackground","N","NoColorIcon","w","n","D","isBlackListMode","z","E","colorsList","T","U","isMultiselect","x","colorSize","B","v","MEDIUM","A","numberOfColorsInLine","W","d","_","focusOnMount","G","colorShape","K","m","SQUARE","Q","forceUseRawColorList","V","showColorNameTooltip","Y","id","q","F","t","H","s","J","i","X","C","o","l","Object","assign","ref","r","S","colorPicker","colorPickerDialogContent","ariaLabelledby","ariaDescribedby","style","width","children","a","onValueChange","p","I","COLOR_PICKER","COLOR_STYLES","sizes","colorStyles","colorSizes","colorShapes","default"],"sources":["/Users/huynhmannguyen/Documents/GitHub/Huy_app/node_modules/monday-ui-react-core/src/components/ColorPicker/ColorPicker.tsx"],"sourcesContent":["import cx from \"classnames\";\nimport React, { forwardRef, useCallback, useRef } from \"react\";\nimport { BaseSizes } from \"../../constants\";\nimport useMergeRef from \"../../hooks/useMergeRef\";\nimport DialogContentContainer from \"../DialogContentContainer/DialogContentContainer\";\nimport { ColorStyle } from \"../../utils/colors-vars-map\";\nimport NoColor from \"../Icon/Icons/components/NoColor\";\nimport ColorPickerContent from \"./components/ColorPickerContent/ColorPickerContent\";\nimport {\n  ColorShapes,\n  DEFAULT_NUMBER_OF_COLORS_IN_LINE,\n  ColorPickerValue,\n  ColorPickerArrayValueOnly\n} from \"./ColorPickerConstants\";\nimport { calculateColorPickerDialogWidth } from \"./services/ColorPickerStyleService\";\nimport { VibeComponentProps, VibeComponent, SubIcon, withStaticProps } from \"../../types\";\nimport { NOOP } from \"../../utils/function-utils\";\nimport { ComponentDefaultTestId, getTestId } from \"../../tests/test-ids-utils\";\nimport styles from \"./ColorPicker.module.scss\";\n\nexport interface ColorPickerProps extends VibeComponentProps {\n  value?: ColorPickerValue;\n  onSave?: (value: ColorPickerArrayValueOnly) => void;\n  ColorIndicatorIcon?: SubIcon;\n  SelectedIndicatorIcon?: SubIcon;\n  /**\n   * Hide color icon\n   */\n  NoColorIcon?: SubIcon;\n  colorStyle?: ColorStyle;\n  noColorText?: string;\n  shouldRenderIndicatorWithoutBackground?: boolean;\n  isBlackListMode?: boolean;\n  colorsList?: ColorPickerArrayValueOnly;\n  isMultiselect?: boolean;\n  colorSize?: BaseSizes;\n  numberOfColorsInLine?: number;\n  focusOnMount?: boolean;\n  colorShape?: ColorShapes;\n  /**\n   * Used to force the component render the colorList prop as is. Usually, this flag should not be used. It's intended only for edge cases.\n   * Usually, only \"monday colors\" will be rendered (unless blacklist mode is used). This flag will override this behavior.\n   */\n  forceUseRawColorList?: boolean;\n  /**\n   * Used to enable color name tooltip on each color in the component. it's incompatible with forceUseRawColorList flag.\n   * When \"tooltipContentByColor\" is supplied, it will override the color name tooltip.\n   *\n   */\n  showColorNameTooltip?: boolean;\n}\n\nconst ColorPicker: VibeComponent<ColorPickerProps> & {\n  // Backward compatibility for enum naming\n  COLOR_STYLES?: typeof ColorStyle;\n  sizes?: typeof BaseSizes;\n  colorStyles?: typeof ColorStyle;\n  colorSizes?: typeof BaseSizes;\n  colorShapes?: typeof ColorShapes;\n} = forwardRef(\n  (\n    {\n      className,\n      onSave = NOOP,\n      value = \"\",\n      noColorText,\n      colorStyle = ColorStyle.REGULAR,\n      ColorIndicatorIcon,\n      SelectedIndicatorIcon,\n      shouldRenderIndicatorWithoutBackground,\n      NoColorIcon = NoColor,\n      isBlackListMode = true,\n      colorsList = [],\n      isMultiselect,\n      colorSize = BaseSizes.MEDIUM,\n      numberOfColorsInLine = DEFAULT_NUMBER_OF_COLORS_IN_LINE,\n      focusOnMount,\n      colorShape = ColorShapes.SQUARE,\n      forceUseRawColorList,\n      showColorNameTooltip,\n      id,\n      \"data-testid\": dataTestId\n    },\n    ref\n  ) => {\n    const componentRef = useRef(null);\n    const mergedRef = useMergeRef(ref, componentRef);\n\n    const onChange = useCallback(onSave, [onSave]);\n\n    const width = calculateColorPickerDialogWidth(colorSize, numberOfColorsInLine);\n\n    return (\n      <DialogContentContainer\n        ref={mergedRef}\n        className={cx(styles.colorPicker, styles.colorPickerDialogContent, className)}\n        ariaLabelledby=\"Color Picker Dialog\"\n        ariaDescribedby=\"Pick color\"\n        style={{ width }}\n      >\n        <ColorPickerContent\n          onValueChange={onChange}\n          value={value}\n          noColorText={noColorText}\n          shouldRenderIndicatorWithoutBackground={ColorIndicatorIcon && shouldRenderIndicatorWithoutBackground}\n          colorStyle={colorStyle}\n          ColorIndicatorIcon={ColorIndicatorIcon}\n          SelectedIndicatorIcon={SelectedIndicatorIcon}\n          NoColorIcon={NoColorIcon}\n          colorsList={colorsList}\n          isBlackListMode={isBlackListMode}\n          isMultiselect={isMultiselect}\n          colorSize={colorSize}\n          numberOfColorsInLine={numberOfColorsInLine}\n          focusOnMount={focusOnMount}\n          colorShape={colorShape}\n          forceUseRawColorList={forceUseRawColorList}\n          showColorNameTooltip={showColorNameTooltip}\n          id={id}\n          data-testid={dataTestId || getTestId(ComponentDefaultTestId.COLOR_PICKER, id)}\n        />\n      </DialogContentContainer>\n    );\n  }\n);\n\nexport default withStaticProps(ColorPicker, {\n  // Backward compatibility for enum naming\n  COLOR_STYLES: ColorStyle,\n  sizes: BaseSizes,\n  colorStyles: ColorStyle,\n  colorSizes: BaseSizes,\n  colorShapes: ColorShapes\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}