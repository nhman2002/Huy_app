{"ast":null,"code":"import { defineProperty as e } from \"../../../_virtual/_rollupPluginBabelHelpers.js\";\nimport { jsxs as s, Fragment as r, jsx as t } from \"react/jsx-runtime\";\nimport l from \"./ToggleText.js\";\nimport i from \"classnames\";\nimport a from \"./MockToggle.module.scss.js\";\nimport { getTestId as d } from \"../../tests/testIds.js\";\nimport { ComponentDefaultTestId as o } from \"../../tests/constants.js\";\nvar m = function (m) {\n  var n = m.areLabelsHidden,\n    c = m.checked,\n    f = m.onOverrideText,\n    p = m.className,\n    u = m.selectedClassName,\n    g = m.disabled;\n  return s(r, {\n    children: [n ? null : t(l, Object.assign({\n      disabled: g\n    }, {\n      children: m.offOverrideText\n    })), t(\"div\", {\n      className: i(a.toggle, p, e(e(e({}, i(a.selected, u), c), a.notSelected, !c), a.disabled, g)),\n      \"aria-hidden\": \"true\",\n      \"data-testid\": d(o.TOGGLE)\n    }), n ? null : t(l, Object.assign({\n      disabled: g\n    }, {\n      children: f\n    }))]\n  });\n};\nexport { m as MockToggle };","map":{"version":3,"names":["m","MockToggle","n","areLabelsHidden","c","checked","f","onOverrideText","p","className","u","selectedClassName","g","disabled","s","r","children","t","l","Object","assign","offOverrideText","i","a","toggle","e","selected","notSelected","d","o","TOGGLE"],"sources":["/Users/huynhmannguyen/Documents/GitHub/Huy_app/node_modules/monday-ui-react-core/src/components/Toggle/MockToggle.tsx"],"sourcesContent":["import ToggleText from \"./ToggleText\";\nimport cx from \"classnames\";\nimport React, { FC } from \"react\";\nimport VibeComponentProps from \"../../types/VibeComponentProps\";\nimport styles from \"./MockToggle.module.scss\";\nimport { getTestId } from \"../../tests/test-ids-utils\";\nimport { ComponentDefaultTestId } from \"../../tests/constants\";\n\nexport interface MockToggleProps extends VibeComponentProps {\n  areLabelsHidden?: boolean;\n  checked?: boolean;\n  offOverrideText?: string;\n  onOverrideText?: string;\n  selectedClassName?: string;\n  disabled: boolean;\n}\n\nexport const MockToggle: FC<MockToggleProps> = ({\n  areLabelsHidden,\n  checked,\n  offOverrideText,\n  onOverrideText,\n  className,\n  selectedClassName,\n  disabled\n}) => (\n  <>\n    {areLabelsHidden ? null : <ToggleText disabled={disabled}>{offOverrideText}</ToggleText>}\n    <div\n      className={cx(styles.toggle, className, {\n        [cx(styles.selected, selectedClassName)]: checked,\n        [styles.notSelected]: !checked,\n        [styles.disabled]: disabled\n      })}\n      aria-hidden=\"true\"\n      data-testid={getTestId(ComponentDefaultTestId.TOGGLE)}\n    />\n    {areLabelsHidden ? null : <ToggleText disabled={disabled}>{onOverrideText}</ToggleText>}\n  </>\n);\n"],"mappings":";;;;;;;IAiBaA,CAAA,GAAkC,SAAAC,CAAxBD,CAAA;EAAA,IACrBE,CAAA,GAAeF,CAAA,CAAfG,eAAA;IACAC,CAAA,GAAOJ,CAAA,CAAPK,OAAA;IAEAC,CAAA,GAAcN,CAAA,CAAdO,cAAA;IACAC,CAAA,GAASR,CAAA,CAATS,SAAA;IACAC,CAAA,GAAiBV,CAAA,CAAjBW,iBAAA;IACAC,CAAA,GAAQZ,CAAA,CAARa,QAAA;EAAQ,OAERC,CAAA,CACGC,CAAA;IAAAC,QAAA,GAAAd,CAAA,GAAkB,OAAOe,CAAA,CAACC,CAAA,EAAUC,MAAA,CAAAC,MAAA;MAACP,QAAA,EAAUD;IAAA,GAAQ;MAAAI,QAAA,EAP3ChB,CAAA,CAAfqB;IAAA,KAQEJ,CAAA,CACE;MAAAR,SAAA,EAAWa,CAAA,CAAGC,CAAA,CAAOC,MAAA,EAAQhB,CAAA,EAASiB,CAAA,CAAAA,CAAA,CAAAA,CAAA,CACnC,IAAAH,CAAA,CAAGC,CAAA,CAAOG,QAAA,EAAUhB,CAAA,GAAqBN,CAAA,GACzCmB,CAAA,CAAOI,WAAA,GAAevB,CAAA,GACtBmB,CAAA,CAAOV,QAAA,EAAWD,CAAA;MAET;MACC,eAAAgB,CAAA,CAAUC,CAAA,CAAuBC,MAAA;IAAA,IAE/C5B,CAAA,GAAkB,OAAOe,CAAA,CAACC,CAAA,EAAWC,MAAA,CAAAC,MAAA;MAAAP,QAAA,EAAUD;IAAA,GAAW;MAAAI,QAAA,EAAAV;IAAA;EAAA,EAC1D;AAAA;AAAA,SAAAN,CAAA,IAAAC,UAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}