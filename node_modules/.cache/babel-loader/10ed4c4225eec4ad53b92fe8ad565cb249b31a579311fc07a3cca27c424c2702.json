{"ast":null,"code":"import { slicedToArray as e } from \"../../../_virtual/_rollupPluginBabelHelpers.js\";\nimport r from \"classnames\";\nimport t, { useState as o, useMemo as n, useEffect as i } from \"react\";\nimport { SystemTheme as m, ThemeColor as s } from \"./ThemeProviderConstants.js\";\nimport { generateRandomAlphaString as l, shouldGenerateTheme as a, generateThemeCssOverride as c } from \"./ThemeProviderUtils.js\";\nimport { withStaticProps as d } from \"../../types/withStaticProps.js\";\nvar u = d(function (m) {\n  var s,\n    d = m.theme,\n    u = m.children,\n    p = m.themeClassSpecifier,\n    h = o(!1),\n    f = e(h, 2),\n    v = f[0],\n    y = f[1],\n    T = n(function () {\n      return p || l();\n    }, [p]);\n  return i(function () {\n    if (a(d)) {\n      if (!document.getElementById(d.name)) {\n        var e = document.createElement(\"style\");\n        e.type = \"text/css\", e.id = d.name;\n        var r = c(d, T);\n        try {\n          e.appendChild(document.createTextNode(r)), document.head.appendChild(e), y(!0);\n        } catch (e) {\n          console.error(\"vibe ThemeProvider: error inserting theme-generated css - \", e);\n        }\n        return function () {\n          document.head.removeChild(e);\n        };\n      }\n      y(!0);\n    }\n  }, [T, d]), !v && a(d) ? null : t.cloneElement(u, {\n    className: r(null == d ? void 0 : d.name, T, null === (s = null == u ? void 0 : u.props) || void 0 === s ? void 0 : s.className)\n  });\n}, {\n  systemThemes: m,\n  colors: s\n});\nexport { u as default };","map":{"version":3,"names":["u","d","m","s","theme","children","p","themeClassSpecifier","h","o","f","e","v","y","T","n","l","i","a","document","getElementById","name","createElement","type","id","r","c","appendChild","createTextNode","head","console","error","removeChild","t","cloneElement","className","props","systemThemes","colors","default"],"sources":["/Users/huynhmannguyen/Documents/GitHub/Huy_app/node_modules/monday-ui-react-core/src/components/ThemeProvider/ThemeProvider.tsx"],"sourcesContent":["import cx from \"classnames\";\nimport React, { FC, ReactElement, useEffect, useMemo, useState } from \"react\";\nimport { SystemTheme, Theme, ThemeColor } from \"./ThemeProviderConstants\";\nimport { generateRandomAlphaString, generateThemeCssOverride, shouldGenerateTheme } from \"./ThemeProviderUtils\";\nimport { withStaticProps } from \"../../types\";\n\nexport interface ThemeProviderProps {\n  /**\n   * The theme to apply, consists of name - name of css class that will be added to the children, which should be unique - and the object of colors overrides for each system theme.\n   */\n  theme?: Theme;\n  /**\n   * The children to render with the theme\n   */\n  children: ReactElement;\n  /**\n   * String which adds up to theme name selector to make it more specific (in case if theme.name is colliding with some other class name)\n   */\n  themeClassSpecifier?: string;\n}\n\nconst ThemeProvider: FC<ThemeProviderProps> & {\n  systemThemes?: typeof SystemTheme;\n  colors?: typeof ThemeColor;\n} = ({ theme, children, themeClassSpecifier: customThemeClassSpecifier }) => {\n  const [stylesLoaded, setStylesLoaded] = useState(false);\n  const themeClassSpecifier = useMemo(\n    () => customThemeClassSpecifier || generateRandomAlphaString(),\n    [customThemeClassSpecifier]\n  );\n\n  useEffect(() => {\n    if (!shouldGenerateTheme(theme)) {\n      return;\n    }\n    if (document.getElementById(theme.name)) {\n      setStylesLoaded(true);\n      return;\n    }\n\n    const styleElement = document.createElement(\"style\");\n    styleElement.type = \"text/css\";\n    styleElement.id = theme.name;\n    const themeCssOverride = generateThemeCssOverride(theme, themeClassSpecifier);\n\n    try {\n      styleElement.appendChild(document.createTextNode(themeCssOverride));\n      document.head.appendChild(styleElement);\n      setStylesLoaded(true);\n    } catch (error) {\n      console.error(\"vibe ThemeProvider: error inserting theme-generated css - \", error);\n    }\n\n    return () => {\n      document.head.removeChild(styleElement);\n    };\n  }, [themeClassSpecifier, theme]);\n\n  if (!stylesLoaded && shouldGenerateTheme(theme)) {\n    // Waiting for styles to load before children render\n    return null;\n  }\n\n  // Pass the theme name as a class to the children - to scope the effect of the theme\n  return React.cloneElement(children, {\n    className: cx(theme?.name, themeClassSpecifier, children?.props?.className)\n  });\n};\n\nexport default withStaticProps(ThemeProvider, {\n  systemThemes: SystemTheme,\n  colors: ThemeColor\n});\n"],"mappings":";;;;;;AAqBA,IAgDeA,CAAA,GAAAC,CAAA,CA7CX,UAHeC,CAAA;EAGyD,IAAAC,CAAA;IAArEF,CAAA,GAAKC,CAAA,CAALE,KAAA;IAAOJ,CAAA,GAAQE,CAAA,CAARG,QAAA;IAA+BC,CAAA,GAAyBJ,CAAA,CAA9CK,mBAAA;IACtBC,CAAA,GAAwCC,CAAA,EAAS;IAAMC,CAAA,GAAAC,CAAA,CAAAH,CAAA;IAAhDI,CAAA,GAAYF,CAAA;IAAEG,CAAA,GAAeH,CAAA;IAC9BI,CAAA,GAAsBC,CAAA,CAC1B;MAAA,OAAMT,CAAA,IAA6BU,CAAA;IAAA,GACnC,CAACV,CAAA;EA8BH,OA3BAW,CAAA,CAAU;IACR,IAAKC,CAAA,CAAoBjB,CAAA,GAAzB;MAGA,KAAIkB,QAAA,CAASC,cAAA,CAAenB,CAAA,CAAMoB,IAAA,GAAlC;QAKA,IAAMV,CAAA,GAAeQ,QAAA,CAASG,aAAA,CAAc;QAC5CX,CAAA,CAAaY,IAAA,GAAO,YACpBZ,CAAA,CAAaa,EAAA,GAAKvB,CAAA,CAAMoB,IAAA;QACxB,IAAMI,CAAA,GAAmBC,CAAA,CAAyBzB,CAAA,EAAOa,CAAA;QAEzD;UACEH,CAAA,CAAagB,WAAA,CAAYR,QAAA,CAASS,cAAA,CAAeH,CAAA,IACjDN,QAAA,CAASU,IAAA,CAAKF,WAAA,CAAYhB,CAAA,GAC1BE,CAAA,EAAgB,EAGjB;QAAA,CAFC,QAAOF,CAAA;UACPmB,OAAA,CAAQC,KAAA,CAAM,8DAA8DpB,CAAA,CAC7E;QAAA;QAED,OAAO;UACLQ,QAAA,CAASU,IAAA,CAAKG,WAAA,CAAYrB,CAAA;QAAA,CAhB3B;MAAA;MAFCE,CAAA,EAAgB,EAFjB;IAAA;EAsBH,GAAG,CAACC,CAAA,EAAqBb,CAAA,KAEpBW,CAAA,IAAgBM,CAAA,CAAoBjB,CAAA,IAEhC,OAIFgC,CAAA,CAAMC,YAAA,CAAalC,CAAA,EAAU;IAClCmC,SAAA,EAAWV,CAAA,CAAG,QAAAxB,CAAA,QAAK,IAALA,CAAA,CAAOoB,IAAA,EAAMP,CAAA,EAAsC,UAAjBX,CAAA,WAAAH,CAAA,QAAQ,IAARA,CAAA,CAAUoC,KAAA,UAAO,MAAAjC,CAAA,YAAAA,CAAA,CAAAgC,SAAA;EAAA,EAErE;AAAA,GAE8C;EAC5CE,YAAA,EAAcnC,CAAA;EACdoC,MAAA,EAAQnC;AAAA;AAAA,SAAAH,CAAA,IAAAuC,OAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}