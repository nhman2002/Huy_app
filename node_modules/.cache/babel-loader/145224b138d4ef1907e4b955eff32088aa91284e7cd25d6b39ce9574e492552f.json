{"ast":null,"code":"import { __rest as t } from \"../../../_virtual/_tslib.js\";\nimport { jsx as o, jsxs as e } from \"react/jsx-runtime\";\nimport { camelCase as i } from \"lodash-es\";\nimport { getTestId as n, ComponentDefaultTestId as s } from \"../../tests/testIds.js\";\nimport r from \"classnames\";\nimport { useMemo as a, useCallback as c, useRef as l, useEffect as m } from \"react\";\nimport { CSSTransition as u } from \"react-transition-group\";\nimport p from \"../Button/Button.js\";\nimport d from \"../Text/Text.js\";\nimport f from \"../Loader/Loader.js\";\nimport T from \"../Flex/Flex.js\";\nimport j from \"../Icon/Icons/components/CloseSmall.js\";\nimport v from \"./ToastLink/ToastLink.js\";\nimport N from \"./ToastButton/ToastButton.js\";\nimport { ToastType as O, ToastActionType as g } from \"./ToastConstants.js\";\nimport { getIcon as L } from \"./ToastHelpers.js\";\nimport { NOOP as h } from \"../../utils/function-utils.js\";\nimport { getStyle as I } from \"../../helpers/typesciptCssModulesHelper.js\";\nimport { withStaticProps as b } from \"../../types/withStaticProps.js\";\nimport y from \"./Toast.module.scss.js\";\nimport A from \"../IconButton/IconButton.js\";\nvar B = b(function (b) {\n  var B = b.open,\n    E = void 0 !== B && B,\n    x = b.loading,\n    C = void 0 !== x && x,\n    S = b.autoHideDuration,\n    _ = void 0 === S ? null : S,\n    k = b.type,\n    H = void 0 === k ? O.NORMAL : k,\n    M = b.icon,\n    R = b.hideIcon,\n    z = void 0 !== R && R,\n    D = b.action,\n    F = b.actions,\n    X = b.children,\n    G = b.closeable,\n    U = void 0 === G || G,\n    w = b.onClose,\n    K = void 0 === w ? h : w,\n    P = b.className,\n    Y = b.id,\n    q = b.closeButtonAriaLabel,\n    J = void 0 === q ? \"Close\" : q,\n    Q = b[\"data-testid\"],\n    V = a(function () {\n      return F ? F.filter(function (t) {\n        return t.type === g.LINK;\n      }).map(function (e) {\n        var i = t(e, [\"type\"]);\n        return o(v, Object.assign({\n          className: y.actionLink\n        }, i), i.href);\n      }) : null;\n    }, [F]),\n    W = a(function () {\n      return F ? F.filter(function (t) {\n        return t.type === g.BUTTON;\n      }).map(function (e, i) {\n        var n = e.content,\n          s = t(e, [\"type\", \"content\"]);\n        return o(N, Object.assign({\n          className: y.actionButton\n        }, s, {\n          children: n\n        }), \"alert-button-\".concat(i));\n      }) : null;\n    }, [F]),\n    Z = a(function () {\n      return r(y.toast, I(y, i(\"type-\" + H)), P);\n    }, [H, P]),\n    $ = c(function () {\n      K && K();\n    }, [K]),\n    tt = l(),\n    ot = c(function (t) {\n      K && null != t && (clearTimeout(tt.current), tt.current = setTimeout(function () {\n        $();\n      }, t));\n    }, [$, K]);\n  m(function () {\n    return E && _ > 0 && ot(_), function () {\n      clearTimeout(tt.current);\n    };\n  }, [E, _, ot]);\n  var et = !z && L(H, M);\n  return o(u, Object.assign({\n    in: E,\n    classNames: {\n      enterActive: y.enterActive,\n      exitActive: y.exitActive\n    },\n    timeout: 400,\n    unmountOnExit: !0\n  }, {\n    children: e(d, Object.assign({\n      id: Y,\n      \"data-testid\": Q || n(s.TOAST, Y),\n      type: d.types.TEXT2,\n      element: \"div\",\n      color: d.colors.FIXED_LIGHT,\n      className: Z,\n      role: \"alert\",\n      \"aria-live\": \"polite\"\n    }, {\n      children: [et && o(\"div\", Object.assign({\n        className: r(y.icon)\n      }, {\n        children: et\n      })), e(T, Object.assign({\n        align: T.align.CENTER,\n        gap: T.gaps.LARGE,\n        className: y.content\n      }, {\n        children: [e(T, Object.assign({\n          gap: T.gaps.MEDIUM,\n          \"data-testid\": n(s.TOAST_CONTENT),\n          className: y.textContent\n        }, {\n          children: [o(\"span\", {\n            children: X\n          }), V]\n        })), (W || D) && (W || D), C && o(f, {\n          size: f.sizes.XS\n        })]\n      })), U && o(A, {\n        className: r(y.closeButton),\n        onClick: $,\n        size: p.sizes.SMALL,\n        kind: p.kinds.TERTIARY,\n        color: p.colors.FIXED_LIGHT,\n        ariaLabel: J,\n        \"data-testid\": n(s.TOAST_CLOSE_BUTTON),\n        icon: j,\n        hideTooltip: !0\n      })]\n    }))\n  }));\n}, {\n  types: O,\n  actionTypes: g\n});\nexport { B as default };","map":{"version":3,"names":["B","b","open","E","x","loading","C","S","autoHideDuration","_","k","type","H","O","NORMAL","M","icon","R","hideIcon","z","D","action","F","actions","X","children","G","closeable","U","w","onClose","K","h","P","className","Y","id","q","closeButtonAriaLabel","J","Q","V","a","filter","t","g","LINK","map","e","i","o","v","Object","assign","y","actionLink","href","W","BUTTON","n","content","s","N","actionButton","concat","Z","r","toast","I","$","c","tt","l","ot","clearTimeout","current","setTimeout","m","et","L","u","in","classNames","enterActive","exitActive","timeout","unmountOnExit","d","TOAST","types","TEXT2","element","color","colors","FIXED_LIGHT","role","T","align","CENTER","gap","gaps","LARGE","MEDIUM","TOAST_CONTENT","textContent","f","size","sizes","XS","A","closeButton","onClick","p","SMALL","kind","kinds","TERTIARY","ariaLabel","TOAST_CLOSE_BUTTON","j","hideTooltip","actionTypes","default"],"sources":["/Users/huynhmannguyen/Documents/GitHub/Huy_app/node_modules/monday-ui-react-core/src/components/Toast/Toast.tsx"],"sourcesContent":["import { camelCase } from \"lodash-es\";\nimport { ComponentDefaultTestId, getTestId } from \"../../tests/test-ids-utils\";\nimport cx from \"classnames\";\nimport React, { FC, ReactElement, useCallback, useEffect, useMemo, useRef } from \"react\";\nimport { CSSTransition } from \"react-transition-group\";\nimport Button from \"../../components/Button/Button\";\nimport { IconSubComponentProps } from \"../Icon/Icon\";\nimport Text from \"../Text/Text\";\nimport Loader from \"../Loader/Loader\";\nimport Flex from \"../Flex/Flex\";\nimport CloseSmall from \"../Icon/Icons/components/CloseSmall\";\nimport ToastLink from \"./ToastLink/ToastLink\";\nimport ToastButton from \"./ToastButton/ToastButton\";\nimport { ToastAction, ToastActionType, ToastType } from \"./ToastConstants\";\nimport { getIcon } from \"./ToastHelpers\";\nimport { NOOP } from \"../../utils/function-utils\";\nimport { getStyle } from \"../../helpers/typesciptCssModulesHelper\";\nimport { withStaticProps, VibeComponentProps } from \"../../types\";\nimport styles from \"./Toast.module.scss\";\nimport IconButton from \"../IconButton/IconButton\";\n\ninterface ToastProps extends VibeComponentProps {\n  actions?: ToastAction[];\n  /** If true, Toast is open (visible) */\n  open?: boolean;\n  loading?: boolean;\n  type?: ToastType;\n  /** Possible to override the default icon */\n  icon?: string | React.FC<IconSubComponentProps> | null;\n  /** If true, won't show the icon */\n  hideIcon?: boolean;\n  /** The action to display */\n  action?: JSX.Element;\n  /** If false, won't show the close button */\n  closeable?: boolean;\n  onClose?: () => void;\n  /** The number of milliseconds to wait before\n   * automatically closing the Toast\n   * (0 or null cancels this behaviour) */\n  autoHideDuration?: number;\n  children?: ReactElement | ReactElement[] | string;\n  closeButtonAriaLabel?: string;\n}\n\nconst Toast: FC<ToastProps> & { types?: typeof ToastType; actionTypes?: typeof ToastActionType } = ({\n  open = false,\n  loading = false,\n  autoHideDuration = null,\n  type = ToastType.NORMAL,\n  icon,\n  hideIcon = false,\n  action: deprecatedAction,\n  actions,\n  children,\n  closeable = true,\n  onClose = NOOP,\n  className,\n  id,\n  closeButtonAriaLabel = \"Close\",\n  \"data-testid\": dataTestId\n}) => {\n  const toastLinks = useMemo(() => {\n    return actions\n      ? actions\n          .filter(action => action.type === ToastActionType.LINK)\n          .map(({ type: _type, ...otherProps }) => (\n            <ToastLink key={otherProps.href} className={styles.actionLink} {...otherProps} />\n          ))\n      : null;\n  }, [actions]);\n\n  const toastButtons: JSX.Element[] | null = useMemo(() => {\n    return actions\n      ? actions\n          .filter(action => action.type === ToastActionType.BUTTON)\n          .map(({ type: _type, content, ...otherProps }, index) => (\n            <ToastButton key={`alert-button-${index}`} className={styles.actionButton} {...otherProps}>\n              {content}\n            </ToastButton>\n          ))\n      : null;\n  }, [actions]);\n\n  const classNames = useMemo(\n    () => cx(styles.toast, getStyle(styles, camelCase(\"type-\" + type)), className),\n    [type, className]\n  );\n\n  const handleClose = useCallback(() => {\n    if (onClose) {\n      onClose();\n    }\n  }, [onClose]);\n\n  /* Timer */\n  const timerAutoHide = useRef<NodeJS.Timeout>();\n  const setAutoHideTimer = useCallback(\n    (duration: number) => {\n      if (!onClose || duration == null) {\n        return;\n      }\n\n      clearTimeout(timerAutoHide.current);\n      timerAutoHide.current = setTimeout(() => {\n        handleClose();\n      }, duration);\n    },\n    [handleClose, onClose]\n  );\n\n  useEffect(() => {\n    if (open && autoHideDuration > 0) {\n      setAutoHideTimer(autoHideDuration);\n    }\n\n    return () => {\n      clearTimeout(timerAutoHide.current);\n    };\n  }, [open, autoHideDuration, setAutoHideTimer]);\n\n  const iconElement = !hideIcon && getIcon(type, icon);\n\n  return (\n    <CSSTransition\n      in={open}\n      classNames={{ enterActive: styles.enterActive, exitActive: styles.exitActive }}\n      timeout={400}\n      unmountOnExit\n    >\n      <Text\n        id={id}\n        data-testid={dataTestId || getTestId(ComponentDefaultTestId.TOAST, id)}\n        type={Text.types.TEXT2}\n        element=\"div\"\n        color={Text.colors.FIXED_LIGHT}\n        className={classNames}\n        role=\"alert\"\n        aria-live=\"polite\"\n      >\n        {iconElement && <div className={cx(styles.icon)}>{iconElement}</div>}\n        <Flex align={Flex.align.CENTER} gap={Flex.gaps.LARGE} className={styles.content}>\n          <Flex\n            gap={Flex.gaps.MEDIUM}\n            data-testid={getTestId(ComponentDefaultTestId.TOAST_CONTENT)}\n            className={styles.textContent}\n          >\n            <span>{children}</span>\n            {toastLinks}\n          </Flex>\n          {(toastButtons || deprecatedAction) && (toastButtons || deprecatedAction)}\n          {loading && <Loader size={Loader.sizes.XS} />}\n        </Flex>\n        {closeable && (\n          <IconButton\n            className={cx(styles.closeButton)}\n            onClick={handleClose}\n            size={Button.sizes.SMALL}\n            kind={Button.kinds.TERTIARY}\n            color={Button.colors.FIXED_LIGHT}\n            ariaLabel={closeButtonAriaLabel}\n            data-testid={getTestId(ComponentDefaultTestId.TOAST_CLOSE_BUTTON)}\n            icon={CloseSmall}\n            hideTooltip\n          />\n        )}\n      </Text>\n    </CSSTransition>\n  );\n};\n\nexport default withStaticProps(Toast, {\n  types: ToastType,\n  actionTypes: ToastActionType\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}