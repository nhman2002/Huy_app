{"ast":null,"code":"import { defineProperty as e } from \"../../../../../_virtual/_rollupPluginBabelHelpers.js\";\nimport { jsx as o, jsxs as t } from \"react/jsx-runtime\";\nimport { camelCase as r } from \"lodash-es\";\nimport { getStyle as s } from \"../../../../helpers/typesciptCssModulesHelper.js\";\nimport n from \"classnames\";\nimport { forwardRef as i, useMemo as l, useRef as c, useCallback as a, useEffect as m } from \"react\";\nimport { ColorStyle as d, contentColors as u } from \"../../../../utils/colors-vars-map.js\";\nimport p from \"../../../../utils/colors-utils.js\";\nimport f from \"../../../Icon/Icon.js\";\nimport v from \"../../../Tooltip/Tooltip.js\";\nimport C from \"../../../Clickable/Clickable.js\";\nimport { ColorShapes as I } from \"../../ColorPickerConstants.js\";\nimport { getTestId as j } from \"../../../../tests/testIds.js\";\nimport { ComponentDefaultTestId as g } from \"../../../../tests/constants.js\";\nimport b from \"./ColorPickerItemComponent.module.scss.js\";\nvar E = i(function (i, E) {\n  var y = i.color,\n    k = i.onColorClicked,\n    h = i.colorStyle,\n    L = void 0 === h ? d.REGULAR : h,\n    R = i.shouldRenderIndicatorWithoutBackground,\n    S = i.ColorIndicatorIcon,\n    O = i.SelectedIndicatorIcon,\n    M = void 0 === O ? S : O,\n    A = i.isSelected,\n    N = i.colorSize,\n    P = i.tooltipContent,\n    T = i.isActive,\n    x = i.colorShape,\n    W = i[\"data-testid\"],\n    _ = l(function () {\n      return u.includes(y);\n    }, [y]),\n    D = _ ? p.getMondayColorAsStyle(y, L) : y,\n    H = c(null),\n    z = a(function () {\n      return k(y);\n    }, [k, y]);\n  m(function () {\n    if ((null == H ? void 0 : H.current) && !R && _) {\n      var e = H.current,\n        o = function (e) {\n          e.target.style.background = p.getMondayColorAsStyle(y, L === d.SELECTED ? d.REGULAR : d.HOVER);\n        },\n        t = function (e) {\n          e.target.style.background = D;\n        };\n      return e.addEventListener(\"mouseenter\", o, !1), e.addEventListener(\"mouseleave\", t, !1), function () {\n        e.removeEventListener(\"mouseenter\", o, !1), e.removeEventListener(\"mouseleave\", t, !1);\n      };\n    }\n  }, [y, D, L, _, H, R]);\n  var B = A || S,\n    G = R ? {\n      color: D\n    } : {};\n  return o(v, Object.assign({\n    content: P\n  }, {\n    children: t(\"li\", Object.assign({\n      className: n(b.itemWrapper, e(e(e({}, b.selectedColor, A), b.active, T), b.circle, x === I.CIRCLE)),\n      \"data-testid\": W || j(g.COLOR_PICKER_ITEM, y)\n    }, {\n      children: [o(\"div\", {\n        className: n(b.feedbackIndicator)\n      }), o(C, Object.assign({\n        ref: H,\n        ariaLabel: y,\n        className: n(b.colorItem, s(b, r(\"color-item-size-\" + N)), e({}, b.colorItemTextMode, R)),\n        style: {\n          background: R ? \"transparent\" : D\n        },\n        onClick: z,\n        tabIndex: \"-1\",\n        onMouseDown: function (e) {\n          return e.preventDefault();\n        }\n      }, {\n        children: o(\"div\", Object.assign({\n          className: n(b.colorIndicatorWrapper),\n          style: G\n        }, {\n          children: B && o(f, {\n            icon: A ? M : S,\n            className: n(e({}, b.colorIconWhite, !R)),\n            ignoreFocusStyle: !0\n          })\n        }))\n      }))]\n    }))\n  }));\n});\nexport { E as default };","map":{"version":3,"names":["E","i","y","color","k","onColorClicked","h","colorStyle","L","d","REGULAR","R","shouldRenderIndicatorWithoutBackground","S","ColorIndicatorIcon","O","SelectedIndicatorIcon","M","A","isSelected","N","colorSize","P","tooltipContent","T","isActive","x","colorShape","W","_","l","u","includes","D","p","getMondayColorAsStyle","H","c","z","a","m","current","e","o","setHoverColor","target","style","background","SELECTED","HOVER","t","restoreToOriginalColor","addEventListener","removeEventListener","B","G","v","Object","assign","content","children","className","n","b","itemWrapper","selectedColor","active","circle","I","CIRCLE","j","g","COLOR_PICKER_ITEM","feedbackIndicator","C","ref","ariaLabel","colorItem","s","r","colorItemTextMode","onClick","tabIndex","onMouseDown","preventDefault","colorIndicatorWrapper","f","icon","colorIconWhite","ignoreFocusStyle","default"],"sources":["/Users/huynhmannguyen/Documents/GitHub/Huy_app/node_modules/monday-ui-react-core/src/components/ColorPicker/components/ColorPickerItemComponent/ColorPickerItemComponent.tsx"],"sourcesContent":["import { camelCase } from \"lodash-es\";\nimport { getStyle } from \"../../../../helpers/typesciptCssModulesHelper\";\nimport cx from \"classnames\";\nimport React, { useRef, useCallback, useMemo, forwardRef, useEffect } from \"react\";\nimport { ColorStyle, contentColors } from \"../../../../utils/colors-vars-map\";\nimport ColorUtils from \"../../../../utils/colors-utils\";\nimport Icon from \"../../../Icon/Icon\";\nimport Tooltip from \"../../../Tooltip/Tooltip\";\nimport Clickable from \"../../../Clickable/Clickable\";\nimport { ColorShapes, ColorPickerValueOnly } from \"../../ColorPickerConstants\";\nimport { getTestId } from \"../../../../tests/test-ids-utils\";\nimport { ComponentDefaultTestId } from \"../../../../tests/constants\";\nimport { SubIcon, VibeComponent, VibeComponentProps, ElementContent } from \"../../../../types\";\nimport { BaseSizes } from \"../../../../constants\";\nimport styles from \"./ColorPickerItemComponent.module.scss\";\n\nexport interface ColorPickerItemComponentProps extends VibeComponentProps {\n  color: ColorPickerValueOnly;\n  onColorClicked: (color: ColorPickerValueOnly) => void;\n  colorStyle: ColorStyle;\n  shouldRenderIndicatorWithoutBackground: boolean;\n  ColorIndicatorIcon: SubIcon;\n  SelectedIndicatorIcon: SubIcon;\n  isSelected: boolean;\n  colorSize: BaseSizes;\n  tooltipContent: ElementContent;\n  isActive: boolean;\n  colorShape: ColorShapes;\n  [\"data-testid\"]?: string;\n}\n\nconst ColorPickerItemComponent: VibeComponent<ColorPickerItemComponentProps> = forwardRef(\n  (\n    {\n      color,\n      onColorClicked,\n      colorStyle = ColorStyle.REGULAR,\n      shouldRenderIndicatorWithoutBackground,\n      ColorIndicatorIcon,\n      SelectedIndicatorIcon = ColorIndicatorIcon,\n      isSelected,\n      colorSize,\n      tooltipContent,\n      isActive,\n      colorShape,\n      \"data-testid\": dataTestId\n    },\n    _ref\n  ) => {\n    const isMondayColor = useMemo(() => (contentColors as readonly string[]).includes(color), [color]); // casting to any since color can be one of the system content colors but can also be a custom one\n    const colorAsStyle = isMondayColor ? ColorUtils.getMondayColorAsStyle(color, colorStyle) : color;\n    const itemRef = useRef<HTMLDivElement>(null);\n\n    const onClick = useCallback(() => onColorClicked(color), [onColorClicked, color]);\n\n    useEffect(() => {\n      if (!itemRef?.current || shouldRenderIndicatorWithoutBackground || !isMondayColor) return;\n      const item = itemRef.current;\n      const setHoverColor = (e: MouseEvent) => {\n        if (colorStyle === ColorStyle.SELECTED) {\n          (e.target as HTMLDivElement).style.background = ColorUtils.getMondayColorAsStyle(color, ColorStyle.REGULAR);\n        } else {\n          (e.target as HTMLDivElement).style.background = ColorUtils.getMondayColorAsStyle(color, ColorStyle.HOVER);\n        }\n      };\n      const restoreToOriginalColor = (e: MouseEvent) => {\n        (e.target as HTMLDivElement).style.background = colorAsStyle;\n      };\n      item.addEventListener(\"mouseenter\", setHoverColor, false);\n      item.addEventListener(\"mouseleave\", restoreToOriginalColor, false);\n\n      return () => {\n        item.removeEventListener(\"mouseenter\", setHoverColor, false);\n        item.removeEventListener(\"mouseleave\", restoreToOriginalColor, false);\n      };\n    }, [color, colorAsStyle, colorStyle, isMondayColor, itemRef, shouldRenderIndicatorWithoutBackground]);\n\n    const shouldRenderIcon = isSelected || ColorIndicatorIcon;\n    const colorIndicatorWrapperStyle = shouldRenderIndicatorWithoutBackground ? { color: colorAsStyle } : {};\n    return (\n      <Tooltip content={tooltipContent}>\n        <li\n          className={cx(styles.itemWrapper, {\n            [styles.selectedColor]: isSelected,\n            [styles.active]: isActive,\n            [styles.circle]: colorShape === ColorShapes.CIRCLE\n          })}\n          data-testid={dataTestId || getTestId(ComponentDefaultTestId.COLOR_PICKER_ITEM, color)}\n        >\n          <div className={cx(styles.feedbackIndicator)} />\n          <Clickable\n            ref={itemRef}\n            ariaLabel={color}\n            className={cx(styles.colorItem, getStyle(styles, camelCase(\"color-item-size-\" + colorSize)), {\n              [styles.colorItemTextMode]: shouldRenderIndicatorWithoutBackground\n            })}\n            style={{ background: shouldRenderIndicatorWithoutBackground ? \"transparent\" : colorAsStyle }}\n            onClick={onClick}\n            tabIndex=\"-1\"\n            onMouseDown={e => e.preventDefault()} // this is for quill to not lose the selection\n          >\n            <div className={cx(styles.colorIndicatorWrapper)} style={colorIndicatorWrapperStyle}>\n              {shouldRenderIcon && (\n                <Icon\n                  icon={isSelected ? SelectedIndicatorIcon : ColorIndicatorIcon}\n                  className={cx({\n                    [styles.colorIconWhite]: !shouldRenderIndicatorWithoutBackground\n                  })}\n                  ignoreFocusStyle\n                />\n              )}\n            </div>\n          </Clickable>\n        </li>\n      </Tooltip>\n    );\n  }\n);\n\nexport default ColorPickerItemComponent;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}