{"ast":null,"code":"import { slicedToArray as t } from \"../../../_virtual/_rollupPluginBabelHelpers.js\";\nimport { jsx as i } from \"react/jsx-runtime\";\nimport r from \"classnames\";\nimport { forwardRef as e, useState as o, useMemo as n, useRef as l, useCallback as s, useEffect as a } from \"react\";\nimport { noop as c } from \"lodash-es\";\nimport { VariableSizeList as u } from \"react-window\";\nimport f from \"react-virtualized-auto-sizer\";\nimport m from \"../../hooks/usePrevious/index.js\";\nimport d from \"../../hooks/useThrottledCallback.js\";\nimport v from \"../../hooks/useMergeRef.js\";\nimport { getNormalizedItems as h, getMaxOffset as p, easeInOutQuint as I, getOnItemsRenderedData as g, isLayoutDirectionScrollbarVisible as S } from \"../../services/virtualized-service.js\";\nimport { getTestId as T } from \"../../tests/testIds.js\";\nimport { ComponentDefaultTestId as O } from \"../../tests/constants.js\";\nimport z from \"./VirtualizedList.module.scss.js\";\nvar b = e(function (e, b) {\n  var j = e.className,\n    y = e.id,\n    C = e.items,\n    R = void 0 === C ? [] : C,\n    w = e.itemRenderer,\n    x = void 0 === w ? function (t, i, r) {\n      return t;\n    } : w,\n    F = e.getItemHeight,\n    L = void 0 === F ? function (t, i) {\n      return t.height;\n    } : F,\n    V = e.getItemSize,\n    k = void 0 === V ? null : V,\n    A = e.layout,\n    D = void 0 === A ? \"vertical\" : A,\n    M = e.onScroll,\n    N = e.overscanCount,\n    U = void 0 === N ? 0 : N,\n    _ = e.getItemId,\n    q = void 0 === _ ? function (t, i) {\n      return t.id;\n    } : _,\n    H = e.scrollToId,\n    P = e.scrollDuration,\n    W = void 0 === P ? 200 : P,\n    B = e.onScrollToFinished,\n    E = void 0 === B ? c : B,\n    Z = e.onItemsRendered,\n    G = e.onItemsRenderedThrottleMs,\n    J = void 0 === G ? 200 : G,\n    K = e.onSizeUpdate,\n    Q = void 0 === K ? c : K,\n    X = e.onVerticalScrollbarVisiblityChange,\n    Y = void 0 === X ? null : X,\n    $ = e.onLayoutDirectionScrollbarVisibilityChange,\n    tt = void 0 === $ ? null : $,\n    it = e.virtualListRef,\n    rt = e.scrollableClassName,\n    et = e.role,\n    ot = e.style,\n    nt = e[\"data-testid\"],\n    lt = o(0),\n    st = t(lt, 2),\n    at = st[0],\n    ct = st[1],\n    ut = o(0),\n    ft = t(ut, 2),\n    mt = ft[0],\n    dt = ft[1],\n    vt = \"horizontal\" !== D,\n    ht = n(function () {\n      return vt ? at : mt;\n    }, [vt, at, mt]),\n    pt = m(H),\n    It = l(null),\n    gt = l(null),\n    St = l(null),\n    Tt = l(0),\n    Ot = l({\n      initialized: !1,\n      scrollOffsetInitial: 0,\n      scrollOffsetFinal: 0,\n      animationStartTime: 0\n    }),\n    zt = v(b, It),\n    bt = v(it, St),\n    jt = Ot.current;\n  jt.initialized || (jt.initialized = !0, jt.scrollOffsetInitial = 0, jt.scrollOffsetFinal = 0, jt.animationStartTime = 0);\n  var yt = s(function (t, i) {\n      var r = (k || L)(t, i);\n      return void 0 === r && console.error(\"Couldn't get height for item: \", t), r;\n    }, [L, k]),\n    Ct = s(function (t, i) {\n      var r = q(t, i);\n      return void 0 === r && console.error(\"Couldn't get id for item: \", t), r;\n    }, [q]),\n    Rt = n(function () {\n      return h(R, Ct, yt);\n    }, [R, Ct, yt]),\n    wt = n(function () {\n      return p(ht, Rt);\n    }, [ht, Rt]),\n    xt = s(function (t) {\n      var i = t.scrollDirection,\n        r = t.scrollOffset,\n        e = t.scrollUpdateWasRequested;\n      Tt.current = r, e || (jt.scrollOffsetInitial = r), M && M(i, r, e);\n    }, [M, Tt, jt]),\n    Ft = s(function () {\n      requestAnimationFrame(function () {\n        var t,\n          i = performance.now() - jt.animationStartTime,\n          r = jt.scrollOffsetFinal - jt.scrollOffsetInitial,\n          e = I(Math.min(1, i / W)),\n          o = Math.min(wt, jt.scrollOffsetInitial + r * e);\n        Tt.current = o, null === (t = St.current) || void 0 === t || t.scrollTo(o), W > i ? Ft() : (jt.animationStartTime = void 0, E && E());\n      });\n    }, [W, jt, St, wt, E]),\n    Lt = s(function (t) {\n      var i = t.offsetTop;\n      jt.animationStartTime ? jt.scrollOffsetFinal = i : jt.scrollOffsetInitial !== i ? (jt.scrollOffsetFinal = i, jt.animationStartTime = performance.now(), Ft()) : E && E();\n    }, [jt, Ft, E]),\n    Vt = s(function (t) {\n      var i = t.index;\n      return x(R[i], i, t.style);\n    }, [R, x]),\n    kt = s(function (t) {\n      return yt(R[t], t);\n    }, [R, yt]),\n    At = s(function (t, i) {\n      i === at && t === mt || setTimeout(function () {\n        ct(i), dt(t), Q(t, i);\n      }, 0);\n    }, [at, mt, Q]),\n    Dt = d(function (t) {\n      if (Z) {\n        var i = g(R, Rt, Ct, t.visibleStartIndex, t.visibleStopIndex, ht, Tt.current);\n        Z(i);\n      }\n    }, {\n      wait: J,\n      trailing: !0\n    }, [Z, R, Rt, Ct, ht]);\n  return a(function () {\n    if (H && pt !== H) {\n      var t = S(R, Rt, Ct, ht),\n        i = Rt[H];\n      t && i && Lt(i);\n    }\n  }, [pt, H, Lt, Rt, R, Ct, ht]), a(function () {\n    St.current && St.current.resetAfterIndex(0);\n  }, [Rt]), a(function () {\n    var t = tt || Y;\n    if (t) {\n      var i = S(R, Rt, Ct, ht);\n      gt.current !== i && (gt.current = i, t(i));\n    }\n  }, [tt, Y, R, Rt, ht, Ct]), i(\"div\", Object.assign({\n    ref: zt,\n    className: r(z.virtualizedListWrapper, j),\n    id: y,\n    role: et,\n    \"data-testid\": nt || T(O.VIRTUALIZED_LIST, y),\n    style: ot\n  }, {\n    children: i(f, {\n      children: function (t) {\n        var r = t.height,\n          e = t.width;\n        return At(e, r), i(u, Object.assign({\n          ref: bt,\n          height: r,\n          width: e,\n          itemCount: R.length,\n          itemSize: kt,\n          onScroll: xt,\n          layout: D,\n          overscanCount: U,\n          onItemsRendered: Dt,\n          className: rt\n        }, {\n          children: Vt\n        }));\n      }\n    })\n  }));\n});\nexport { b as default };","map":{"version":3,"names":["b","e","j","className","y","id","C","items","R","w","itemRenderer","x","t","i","r","F","getItemHeight","L","height","V","getItemSize","k","A","layout","D","M","onScroll","N","overscanCount","U","_","getItemId","q","H","scrollToId","P","scrollDuration","W","B","onScrollToFinished","E","c","Z","onItemsRendered","G","onItemsRenderedThrottleMs","J","K","onSizeUpdate","Q","X","onVerticalScrollbarVisiblityChange","Y","$","onLayoutDirectionScrollbarVisibilityChange","tt","it","virtualListRef","rt","scrollableClassName","et","role","ot","style","nt","lt","o","st","at","ct","ut","ft","mt","dt","vt","ht","n","pt","m","It","l","gt","St","Tt","Ot","initialized","scrollOffsetInitial","scrollOffsetFinal","animationStartTime","zt","v","bt","jt","current","yt","s","console","error","Ct","Rt","h","wt","p","xt","scrollDirection","scrollOffset","scrollUpdateWasRequested","Ft","requestAnimationFrame","performance","now","I","Math","min","scrollTo","Lt","offsetTop","Vt","index","kt","At","setTimeout","Dt","d","g","visibleStartIndex","visibleStopIndex","wait","trailing","a","S","resetAfterIndex","Object","assign","ref","z","virtualizedListWrapper","T","O","VIRTUALIZED_LIST","children","f","width","u","itemCount","length","itemSize","default"],"sources":["/Users/huynhmannguyen/Documents/GitHub/Huy_app/node_modules/monday-ui-react-core/src/components/VirtualizedList/VirtualizedList.tsx"],"sourcesContent":["import cx from \"classnames\";\nimport React, {\n  CSSProperties,\n  ForwardedRef,\n  forwardRef,\n  LegacyRef,\n  ReactElement,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState\n} from \"react\";\nimport { noop as NOOP } from \"lodash-es\";\nimport {\n  Layout,\n  ScrollDirection,\n  VariableSizeList as List,\n  ListOnItemsRenderedProps,\n  ListChildComponentProps,\n  VariableSizeList\n} from \"react-window\";\nimport AutoSizer from \"react-virtualized-auto-sizer\";\nimport usePrevious from \"../../hooks/usePrevious\";\nimport useThrottledCallback from \"../../hooks/useThrottledCallback\";\nimport useMergeRef from \"../../hooks/useMergeRef\";\nimport {\n  easeInOutQuint,\n  getMaxOffset,\n  getNormalizedItems,\n  getOnItemsRenderedData,\n  isLayoutDirectionScrollbarVisible\n} from \"../../services/virtualized-service\";\nimport { getTestId } from \"../../tests/test-ids-utils\";\nimport { ComponentDefaultTestId } from \"../../tests/constants\";\nimport VibeComponentProps from \"src/types/VibeComponentProps\";\nimport VibeComponent from \"../../types/VibeComponent\";\nimport styles from \"./VirtualizedList.module.scss\";\n\nexport type VirtualizedListItem = {\n  value?: string | Record<string, unknown>;\n  height?: number;\n  width?: number;\n  id?: string;\n  offsetTop?: number;\n};\n\ninterface VirtualizedListProps extends VibeComponentProps {\n  /**\n   * class name to add to the component scrollable container\n   */\n  scrollableClassName?: string;\n  /**\n   * Layout/orientation of the list.\n   * Acceptable values are:\n   * - \"vertical\" (default) - Up/down scrolling.\n   * - \"horizontal\" - Left/right scrolling.\n   */\n  layout?: Layout;\n  /**\n   * A list of items to be rendered\n   */\n  items: VirtualizedListItem[];\n  /**\n   * Will return the element which represent an item in the virtualized list.\n   * Returns `JSX.Element`\n   * @param item - item data\n   * @param _index - item index\n   * @param style - item style, must be injected to the item element wrapper for correct presentation of the item\n   */\n  itemRenderer: (item: VirtualizedListItem, index: number, style: CSSProperties) => ReactElement | JSX.Element;\n  /**\n   * Deprecated - use getItemSize\n   * in order to calculate the number of items to render, the component needs the height of the items\n   * return `number`\n   */\n  getItemHeight?: (item: VirtualizedListItem, index: number) => number;\n  /**\n   * in order to calculate the number of items to render, the component needs the width/height of the items (according to layout)\n   * return `number`\n   */\n  getItemSize?: (item: VirtualizedListItem, index: number) => number;\n  /**\n   * returns Id of an items\n   * returns `string`\n   */\n  getItemId?: (item: VirtualizedListItem, index: number) => string;\n  /**\n   * callback to be called when the scroll is finished\n   */\n  onScrollToFinished?: () => void;\n  /**\n   * number of items to render (below/above the fold)\n   */\n  overscanCount?: number;\n  /**\n   * the speed of the scroll (in ms)\n   */\n  scrollDuration?: number;\n  /**\n   * a callback that is being called when the items are rendered\n   */\n  onItemsRendered?: ({\n    firstItemId,\n    secondItemId,\n    lastItemId,\n    centerItemId,\n    firstItemOffsetEnd,\n    currentOffsetTop\n  }: {\n    firstItemId: string;\n    secondItemId: string;\n    lastItemId: string;\n    centerItemId: string;\n    firstItemOffsetEnd: number;\n    currentOffsetTop: number;\n  }) => void;\n  onItemsRenderedThrottleMs?: number;\n  /**\n   * when the list size changes - `=> (width, height)`\n   */\n  onSizeUpdate?: (width: number, height: number) => void;\n  /**\n   * Deprecated - use onLayoutDirectionScrollbarVisibilityChange\n   */\n  onVerticalScrollbarVisiblityChange?: (value: boolean) => void;\n  /**\n   * Callback - called when the vertical/horizontal (depends on layout) scrollbar visibility changed\n   */\n  onLayoutDirectionScrollbarVisibilityChange?: (value: boolean) => void;\n  role?: string;\n  /** Custom style to pass to the component */\n  style?: CSSProperties;\n  /**\n   * index of the item to scroll to\n   */\n  scrollToId?: string;\n  virtualListRef?: ForwardedRef<HTMLElement>;\n  onScroll?: (horizontalScrollDirection: ScrollDirection, scrollTop: number, scrollUpdateWasRequested: boolean) => void;\n}\n\nconst VirtualizedList: VibeComponent<VirtualizedListProps> = forwardRef(\n  (\n    {\n      className,\n      id,\n      items = [],\n      itemRenderer = (item: VirtualizedListItem, _index: number, _style: CSSProperties) => item,\n      getItemHeight = (item: VirtualizedListItem, _index: number) => item.height,\n      getItemSize = null, // must be null for backward compatibility\n      layout = \"vertical\",\n      onScroll,\n      overscanCount = 0,\n      getItemId = (item: VirtualizedListItem, _index: number) => item.id,\n      scrollToId,\n      scrollDuration = 200,\n      onScrollToFinished = NOOP,\n      onItemsRendered,\n      onItemsRenderedThrottleMs = 200,\n      onSizeUpdate = NOOP,\n      onVerticalScrollbarVisiblityChange = null,\n      onLayoutDirectionScrollbarVisibilityChange = null,\n      virtualListRef,\n      scrollableClassName,\n      role,\n      style,\n      \"data-testid\": dataTestId\n    },\n    ref\n  ) => {\n    // states\n    const [listHeight, setListHeight] = useState(0);\n    const [listWidth, setListWidth] = useState(0);\n\n    const isVerticalList = layout !== \"horizontal\";\n    const listSizeByLayout = useMemo(() => {\n      return isVerticalList ? listHeight : listWidth;\n    }, [isVerticalList, listHeight, listWidth]);\n\n    // prevs\n    const prevScrollToId = usePrevious(scrollToId);\n\n    // Refs\n    const componentRef = useRef(null);\n    const isVerticalScrollbarVisibleRef = useRef(null);\n    const listRef = useRef(null);\n    const scrollTopRef = useRef(0);\n    const animationDataRef = useRef({\n      initialized: false,\n      scrollOffsetInitial: 0,\n      scrollOffsetFinal: 0,\n      animationStartTime: 0\n    });\n    const mergedRef = useMergeRef(ref, componentRef);\n    const mergedListRef = useMergeRef(virtualListRef, listRef);\n\n    const animationData = animationDataRef.current;\n    if (!animationData.initialized) {\n      animationData.initialized = true;\n      animationData.scrollOffsetInitial = 0;\n      animationData.scrollOffsetFinal = 0;\n      animationData.animationStartTime = 0;\n    }\n\n    // Callbacks\n    const sizeGetter = useCallback(\n      (item: VirtualizedListItem, index: number) => {\n        const getSize = getItemSize || getItemHeight;\n        const height = getSize(item, index);\n        if (height === undefined) {\n          console.error(\"Couldn't get height for item: \", item);\n        }\n        return height;\n      },\n      [getItemHeight, getItemSize]\n    );\n\n    const idGetter = useCallback(\n      (item: VirtualizedListItem, index: number) => {\n        const itemId = getItemId(item, index);\n        if (itemId === undefined) {\n          console.error(\"Couldn't get id for item: \", item);\n        }\n        return itemId;\n      },\n      [getItemId]\n    );\n\n    // Memos\n    // Creates object of itemId => { item, index, size, offsetTop}\n    const normalizedItems = useMemo(() => {\n      return getNormalizedItems(items, idGetter, sizeGetter);\n    }, [items, idGetter, sizeGetter]);\n\n    const maxListOffset = useMemo(() => {\n      return getMaxOffset(listSizeByLayout, normalizedItems);\n    }, [listSizeByLayout, normalizedItems]);\n\n    // Callbacks\n    const onScrollCB = useCallback(\n      ({\n        scrollDirection,\n        scrollOffset,\n        scrollUpdateWasRequested\n      }: {\n        scrollDirection: ScrollDirection;\n        scrollOffset: number;\n        scrollUpdateWasRequested: boolean;\n      }) => {\n        scrollTopRef.current = scrollOffset;\n        if (!scrollUpdateWasRequested) {\n          animationData.scrollOffsetInitial = scrollOffset;\n        }\n        onScroll && onScroll(scrollDirection, scrollOffset, scrollUpdateWasRequested);\n      },\n      [onScroll, scrollTopRef, animationData]\n    );\n\n    const animateScroll = useCallback(() => {\n      requestAnimationFrame(() => {\n        const now = performance.now();\n        const ellapsed = now - animationData.animationStartTime;\n        const scrollDelta = animationData.scrollOffsetFinal - animationData.scrollOffsetInitial;\n        const easedTime = easeInOutQuint(Math.min(1, ellapsed / scrollDuration));\n        const scrollOffset = animationData.scrollOffsetInitial + scrollDelta * easedTime;\n        const finalOffsetValue = Math.min(maxListOffset, scrollOffset);\n        scrollTopRef.current = finalOffsetValue;\n        listRef.current?.scrollTo(finalOffsetValue);\n\n        if (ellapsed < scrollDuration) {\n          animateScroll();\n        } else {\n          animationData.animationStartTime = undefined;\n          onScrollToFinished && onScrollToFinished();\n        }\n      });\n    }, [scrollDuration, animationData, listRef, maxListOffset, onScrollToFinished]);\n\n    const startScrollAnimation = useCallback(\n      (item: VirtualizedListItem) => {\n        const { offsetTop } = item;\n        if (animationData.animationStartTime) {\n          // animation already in progress\n          animationData.scrollOffsetFinal = offsetTop;\n          return;\n        }\n        if (animationData.scrollOffsetInitial === offsetTop) {\n          // offset already equals to item offset\n          onScrollToFinished && onScrollToFinished();\n          return;\n        }\n\n        animationData.scrollOffsetFinal = offsetTop;\n        animationData.animationStartTime = performance.now();\n        animateScroll();\n      },\n      [animationData, animateScroll, onScrollToFinished]\n    );\n\n    const rowRenderer = useCallback(\n      ({ index, style }: { index: number; style: CSSProperties }) => {\n        const item = items[index];\n        return itemRenderer(item, index, style);\n      },\n      [items, itemRenderer]\n    );\n\n    const calcItemSize = useCallback(\n      (index: number) => {\n        const item = items[index];\n        return sizeGetter(item, index);\n      },\n      [items, sizeGetter]\n    );\n\n    const updateListSize = useCallback(\n      (width: number, height: number) => {\n        if (height !== listHeight || width !== listWidth) {\n          setTimeout(() => {\n            setListHeight(height);\n            setListWidth(width);\n            onSizeUpdate(width, height);\n          }, 0);\n        }\n      },\n      [listHeight, listWidth, onSizeUpdate]\n    );\n\n    const onItemsRenderedCB = useThrottledCallback(\n      ({ visibleStartIndex, visibleStopIndex }: ListOnItemsRenderedProps) => {\n        if (!onItemsRendered) return;\n        const data = getOnItemsRenderedData(\n          items,\n          normalizedItems,\n          idGetter,\n          visibleStartIndex,\n          visibleStopIndex,\n          listSizeByLayout,\n          scrollTopRef.current\n        );\n        onItemsRendered(data);\n      },\n      { wait: onItemsRenderedThrottleMs, trailing: true },\n      [onItemsRendered, items, normalizedItems, idGetter, listSizeByLayout]\n    );\n\n    // Effects\n    useEffect(() => {\n      // scroll to specific item\n      if (scrollToId && prevScrollToId !== scrollToId) {\n        const hasScrollbar = isLayoutDirectionScrollbarVisible(items, normalizedItems, idGetter, listSizeByLayout);\n        const item = normalizedItems[scrollToId as keyof typeof normalizedItems];\n        hasScrollbar && item && startScrollAnimation(item);\n      }\n    }, [prevScrollToId, scrollToId, startScrollAnimation, normalizedItems, items, idGetter, listSizeByLayout]);\n\n    useEffect(() => {\n      // recalculate row heights\n      if (listRef.current) {\n        listRef.current.resetAfterIndex(0);\n      }\n    }, [normalizedItems]);\n\n    useEffect(() => {\n      // update vertical scrollbar visibility\n      const callback = onLayoutDirectionScrollbarVisibilityChange || onVerticalScrollbarVisiblityChange;\n      if (callback) {\n        const isVisible = isLayoutDirectionScrollbarVisible(items, normalizedItems, idGetter, listSizeByLayout);\n        if (isVerticalScrollbarVisibleRef.current !== isVisible) {\n          isVerticalScrollbarVisibleRef.current = isVisible;\n          callback(isVisible);\n        }\n      }\n    }, [\n      onLayoutDirectionScrollbarVisibilityChange,\n      onVerticalScrollbarVisiblityChange,\n      items,\n      normalizedItems,\n      listSizeByLayout,\n      idGetter\n    ]);\n\n    return (\n      <div\n        ref={mergedRef}\n        className={cx(styles.virtualizedListWrapper, className)}\n        id={id}\n        role={role}\n        data-testid={dataTestId || getTestId(ComponentDefaultTestId.VIRTUALIZED_LIST, id)}\n        style={style}\n      >\n        <AutoSizer>\n          {({ height, width }: { height: number; width: number }) => {\n            updateListSize(width, height);\n            return (\n              <List\n                ref={mergedListRef as unknown as LegacyRef<VariableSizeList<unknown>>}\n                height={height}\n                width={width}\n                itemCount={items.length}\n                itemSize={calcItemSize}\n                onScroll={onScrollCB}\n                layout={layout}\n                overscanCount={overscanCount}\n                onItemsRendered={onItemsRenderedCB}\n                className={scrollableClassName}\n              >\n                {rowRenderer as VibeComponent<ListChildComponentProps>}\n              </List>\n            );\n          }}\n        </AutoSizer>\n      </div>\n    );\n  }\n);\n\nexport default VirtualizedList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}