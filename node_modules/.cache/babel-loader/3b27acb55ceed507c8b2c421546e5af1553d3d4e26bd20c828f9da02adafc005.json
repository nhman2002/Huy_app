{"ast":null,"code":"import { jsx as t } from \"react/jsx-runtime\";\nimport { useMemo as e } from \"react\";\nimport i from \"../VirtualizedList/VirtualizedList.js\";\nimport r from \"./AvatarGroupCounterTooltipContentVirtualizedList.module.scss.js\";\nvar n = Object.freeze({\n    maxItemsWithoutScroll: 10,\n    itemLineHeight: 34,\n    itemLineWidth: 150\n  }),\n  a = function (a) {\n    var o = a.avatarItems,\n      l = void 0 === o ? [] : o,\n      m = a.avatarRenderer,\n      s = a.type,\n      u = a.tooltipContainerAriaLabel,\n      d = a.tooltipContentContainerRef,\n      c = e(function () {\n        return l.map(function (t) {\n          return {\n            value: t,\n            height: n.itemLineHeight\n          };\n        });\n      }, [l]);\n    return t(\"div\", Object.assign({\n      className: r.virtualizedTooltipContainer,\n      \"aria-label\": u,\n      ref: d,\n      tabIndex: -1\n    }, {\n      children: t(i, {\n        items: c,\n        itemRenderer: function (t, e, i) {\n          return m(t.value, e, i, s, !1);\n        },\n        role: \"treegrid\",\n        scrollableClassName: r.scrollableContainer,\n        getItemId: function (t, e) {\n          return e + \"\";\n        },\n        style: {\n          height: n.itemLineHeight * Math.min(l.length, n.maxItemsWithoutScroll),\n          minWidth: n.itemLineWidth\n        }\n      })\n    }));\n  };\nexport { a as default };","map":{"version":3,"names":["n","Object","freeze","maxItemsWithoutScroll","itemLineHeight","itemLineWidth","a","AvatarGroupCounterTooltipContentVirtualizedList","o","avatarItems","l","m","avatarRenderer","s","type","u","tooltipContainerAriaLabel","d","tooltipContentContainerRef","c","e","map","t","value","height","assign","className","r","virtualizedTooltipContainer","ref","tabIndex","children","i","items","itemRenderer","role","scrollableClassName","scrollableContainer","getItemId","style","Math","min","length","minWidth","default"],"sources":["/Users/huynhmannguyen/Documents/GitHub/Huy_app/node_modules/monday-ui-react-core/src/components/AvatarGroup/AvatarGroupCounterTooltipContentVirtualizedList.tsx"],"sourcesContent":["import React, { CSSProperties, ReactElement, Ref, useMemo } from \"react\";\nimport VirtualizedList, { VirtualizedListItem } from \"../VirtualizedList/VirtualizedList\";\nimport VibeComponentProps from \"../../types/VibeComponentProps\";\nimport { AvatarType } from \"../Avatar/AvatarConstants\";\nimport { AvatarProps } from \"../Avatar/Avatar\";\nimport { ElementContent } from \"../../types\";\nimport styles from \"./AvatarGroupCounterTooltipContentVirtualizedList.module.scss\";\n\nconst LIST_OPTIONS = Object.freeze({\n  maxItemsWithoutScroll: 10,\n  itemLineHeight: 34,\n  itemLineWidth: 150\n});\n\nexport type AvatarItem = {\n  value: AvatarProps & { tooltipContent: ElementContent };\n};\n\ninterface AvatarGroupCounterTooltipContentVirtualizedListProps extends VibeComponentProps {\n  /**\n   * Array of Avatar components\n   */\n  avatarItems?: AvatarItem[];\n  avatarRenderer?: (\n    item: AvatarItem,\n    index: number,\n    style: CSSProperties,\n    type: AvatarType,\n    displayAsGrid: boolean\n  ) => ReactElement;\n  tooltipContainerAriaLabel?: string;\n  tooltipContentContainerRef?: Ref<HTMLDivElement>;\n  type?: AvatarType;\n}\n\nconst AvatarGroupCounterTooltipContentVirtualizedList: React.FC<\n  AvatarGroupCounterTooltipContentVirtualizedListProps\n> = ({ avatarItems = [], avatarRenderer, type, tooltipContainerAriaLabel, tooltipContentContainerRef }) => {\n  const virtualizedItems: VirtualizedListItem[] = useMemo(\n    () => avatarItems.map(item => ({ value: item, height: LIST_OPTIONS.itemLineHeight } as VirtualizedListItem)),\n    [avatarItems]\n  );\n\n  const minCount = Math.min(avatarItems.length, LIST_OPTIONS.maxItemsWithoutScroll);\n  const virtualizedListStyle = {\n    height: LIST_OPTIONS.itemLineHeight * minCount,\n    minWidth: LIST_OPTIONS.itemLineWidth\n  };\n\n  return (\n    <div\n      className={styles.virtualizedTooltipContainer}\n      aria-label={tooltipContainerAriaLabel}\n      ref={tooltipContentContainerRef}\n      tabIndex={-1}\n    >\n      <VirtualizedList\n        items={virtualizedItems}\n        itemRenderer={(item: VirtualizedListItem, index: number, style: CSSProperties) =>\n          avatarRenderer(item.value as AvatarItem, index, style, type, false)\n        }\n        role=\"treegrid\"\n        scrollableClassName={styles.scrollableContainer}\n        getItemId={(item: VirtualizedListItem, index: number) => String(index)}\n        style={virtualizedListStyle}\n      />\n    </div>\n  );\n};\n\nexport default AvatarGroupCounterTooltipContentVirtualizedList;\n"],"mappings":";;;;AAQA,IAAMA,CAAA,GAAeC,MAAA,CAAOC,MAAA,CAAO;IACjCC,qBAAA,EAAuB;IACvBC,cAAA,EAAgB;IAChBC,aAAA,EAAe;EAAA;EAwBXC,CAAA,GAEF,SAAAC,CAFiDD,CAAA;IAEqD,IAAAE,CAAA,GAAAF,CAAA,CAAnGG,WAAA;MAAAC,CAAA,QAAc,MAAHF,CAAA,GAAG,KAAEA,CAAA;MAAEG,CAAA,GAAcL,CAAA,CAAdM,cAAA;MAAgBC,CAAA,GAAIP,CAAA,CAAJQ,IAAA;MAAMC,CAAA,GAAyBT,CAAA,CAAzBU,yBAAA;MAA2BC,CAAA,GAA0BX,CAAA,CAA1BY,0BAAA;MAClEC,CAAA,GAA0CC,CAAA,CAC9C;QAAA,OAAMV,CAAA,CAAYW,GAAA,CAAI,UAAAC,CAAA;UAAI,OAAK;YAAEC,KAAA,EAAOD,CAAA;YAAME,MAAA,EAAQxB,CAAA,CAAaI;UAAA,CAAwC;QAAA;MAAA,GAC3G,CAACM,CAAA;IASH,OACEY,CAAA,CACE,OAAArB,MAAA,CAAAwB,MAAA;MAAAC,SAAA,EAAWC,CAAA,CAAOC,2BAAA;MAA2B,cACjCb,CAAA;MACZc,GAAA,EAAKZ,CAAA;MACLa,QAAA,GAAW;IAAA,GAAC;MAAAC,QAAA,EAEZT,CAAA,CAACU,CAAA;QACCC,KAAA,EAAOd,CAAA;QACPe,YAAA,EAAc,SAAAA,CAACZ,CAAA,EAA2BF,CAAA,EAAeY,CAAA;UAAoB,OAC3ErB,CAAA,CAAeW,CAAA,CAAKC,KAAA,EAAqBH,CAAA,EAAOY,CAAA,EAAOnB,CAAA,GAAM,EAAM;QAAA;QAErEsB,IAAA,EAAK;QACLC,mBAAA,EAAqBT,CAAA,CAAOU,mBAAA;QAC5BC,SAAA,EAAW,SAAAA,CAAChB,CAAA,EAA2BF,CAAA;UAAa,OAAYA,CAAA,GAAP,EAAa;QAAA;QACtEmB,KAAA,EApBuB;UAC3Bf,MAAA,EAAQxB,CAAA,CAAaI,cAAA,GAFNoC,IAAA,CAAKC,GAAA,CAAI/B,CAAA,CAAYgC,MAAA,EAAQ1C,CAAA,CAAaG,qBAAA;UAGzDwC,QAAA,EAAU3C,CAAA,CAAaK;QAAA;MAAA;IAAA,GAsB3B;EAAA;AAAA,SAAAC,CAAA,IAAAsC,OAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}