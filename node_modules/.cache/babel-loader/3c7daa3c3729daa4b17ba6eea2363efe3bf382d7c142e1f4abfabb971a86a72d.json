{"ast":null,"code":"import { slicedToArray as e, defineProperty as n } from \"../../../_virtual/_rollupPluginBabelHelpers.js\";\nimport { jsxs as o, jsx as t } from \"react/jsx-runtime\";\nimport { forwardRef as r, useRef as a, useState as i, useEffect as l, useLayoutEffect as s } from \"react\";\nimport u from \"classnames\";\nimport d from \"../../hooks/useMergeRef.js\";\nimport c from \"./EditableTypography.module.scss.js\";\nimport { useKeyboardButtonPressedFunc as p } from \"../../hooks/useKeyboardButtonPressedFunc.js\";\nimport { keyCodes as f } from \"../../constants/keyCodes.js\";\nvar m = r(function (r, m) {\n  var y = r.id,\n    h = r.className,\n    g = r[\"data-testid\"],\n    v = r.value,\n    b = r.onChange,\n    C = r.onClick,\n    j = r.readOnly,\n    k = void 0 !== j && j,\n    E = r.ariaLabel,\n    N = void 0 === E ? \"\" : E,\n    P = r.placeholder,\n    w = r.typographyClassName,\n    B = r.component,\n    T = r.isEditMode,\n    x = r.onEditModeChange,\n    D = r.tooltipProps,\n    K = a(null),\n    M = d(m, K),\n    O = i(T || !1),\n    R = e(O, 2),\n    A = R[0],\n    _ = R[1],\n    F = i(v),\n    H = e(F, 2),\n    I = H[0],\n    L = H[1],\n    S = i(0),\n    q = e(S, 2),\n    z = q[0],\n    G = q[1],\n    J = a(null),\n    Q = a(null);\n  function U(e) {\n    k || A || (e.preventDefault(), _(!0));\n  }\n  function V(e) {\n    null == x || x(e), _(e);\n  }\n  function W() {\n    V(!1), I && v !== I ? null == b || b(I) : L(v);\n  }\n  l(function () {\n    _(T);\n  }, [T]);\n  var X = p(U);\n  return l(function () {\n    var e;\n    A && J.current && (null === (e = J.current) || void 0 === e || e.focus());\n  }, [A]), s(function () {\n    if (Q.current) {\n      var e = Q.current.getBoundingClientRect();\n      G(e.width);\n    }\n  }, [I, A]), o(\"div\", Object.assign({\n    ref: M,\n    id: y,\n    \"aria-label\": N,\n    \"data-testid\": g,\n    className: u(c.editableTypography, h),\n    role: A ? null : \"button\",\n    onClick: function (e) {\n      null == C || C(e), U(e);\n    },\n    onKeyDown: X\n  }, {\n    children: [A && t(\"input\", {\n      ref: J,\n      className: u(c.input, w),\n      value: I,\n      onChange: function (e) {\n        L(e.target.value);\n      },\n      onKeyDown: function (e) {\n        e.key === f.ENTER && W(), e.key === f.ESCAPE && (V(!1), L(v));\n      },\n      onBlur: function () {\n        W();\n      },\n      \"aria-label\": N,\n      placeholder: P,\n      style: {\n        width: z\n      },\n      role: \"input\"\n    }), t(B, Object.assign({\n      ref: Q,\n      \"aria-hidden\": A,\n      className: u(c.typography, w, n(n({}, c.hidden, A), c.disabled, k)),\n      tabIndex: 0,\n      tooltipProps: D\n    }, {\n      children: I || P\n    }))]\n  }));\n});\nexport { m as default };","map":{"version":3,"names":["m","r","y","id","h","className","g","v","value","b","onChange","C","onClick","j","readOnly","k","E","ariaLabel","N","P","placeholder","w","typographyClassName","B","component","T","isEditMode","x","onEditModeChange","D","tooltipProps","K","a","M","d","O","i","R","e","A","_","F","H","I","L","S","q","z","G","J","Q","U","preventDefault","V","W","l","X","p","current","focus","s","getBoundingClientRect","width","o","Object","assign","ref","u","c","editableTypography","role","onKeyDown","children","t","input","target","key","f","ENTER","ESCAPE","onBlur","style","typography","n","hidden","disabled","tabIndex","default"],"sources":["/Users/huynhmannguyen/Documents/GitHub/Huy_app/node_modules/monday-ui-react-core/src/components/EditableTypography/EditableTypography.tsx"],"sourcesContent":["import React, { ElementType, forwardRef, useEffect, useLayoutEffect, useRef, useState } from \"react\";\nimport cx from \"classnames\";\nimport useMergeRef from \"../../hooks/useMergeRef\";\nimport VibeComponentProps from \"../../types/VibeComponentProps\";\nimport VibeComponent from \"../../types/VibeComponent\";\nimport styles from \"./EditableTypography.module.scss\";\nimport { keyCodes } from \"../../constants\";\nimport { useKeyboardButtonPressedFunc } from \"../../hooks/useKeyboardButtonPressedFunc\";\nimport { TooltipProps } from \"../Tooltip/Tooltip\";\n\nexport interface EditableTypographyImplementationProps {\n  /** Value of the text */\n  value: string;\n  /** Will be called whenever the current value changes to a non-empty value */\n  onChange?: (value: string) => void;\n  /** Will be called whenever the component gets clicked */\n  onClick?: (event: React.KeyboardEvent | React.MouseEvent) => void;\n  /** Disables editing mode - component will be just a typography element */\n  readOnly?: boolean;\n  /** Shown in edit mode when the text value is empty */\n  placeholder?: string;\n  /** ARIA Label */\n  ariaLabel?: string;\n  /** Controls the mode of the component (i.e. view/edit mode) */\n  isEditMode?: boolean;\n  /** Will be called when the mode of the component changes */\n  onEditModeChange?: (isEditMode: boolean) => void;\n  /** Override Tooltip props when needed */\n  tooltipProps?: Partial<TooltipProps>;\n}\n\ninterface EditableTypographyProps extends VibeComponentProps, EditableTypographyImplementationProps {\n  /** A typography component that is being rendered in view mode */\n  component: ElementType;\n  /** Controls the style of the typography component in view mode */\n  typographyClassName: string;\n}\n\nconst EditableTypography: VibeComponent<EditableTypographyProps, HTMLElement> = forwardRef(\n  (\n    {\n      id,\n      className,\n      \"data-testid\": dataTestId,\n      value,\n      onChange,\n      onClick,\n      readOnly = false,\n      ariaLabel = \"\",\n      placeholder,\n      typographyClassName,\n      component: TypographyComponent,\n      isEditMode,\n      onEditModeChange,\n      tooltipProps\n    },\n    ref\n  ) => {\n    const componentRef = useRef(null);\n    const mergedRef = useMergeRef(ref, componentRef);\n\n    const [isEditing, setIsEditing] = useState(isEditMode || false);\n    const [inputValue, setInputValue] = useState(value);\n    const [inputWidth, setInputWidth] = useState(0);\n\n    const inputRef = useRef(null);\n    const typographyRef = useRef(null);\n\n    useEffect(() => {\n      setIsEditing(isEditMode);\n    }, [isEditMode]);\n\n    function onTypographyClick(event: React.KeyboardEvent | React.MouseEvent) {\n      onClick?.(event);\n      toggleEditMode(event);\n    }\n\n    function toggleEditMode(event: React.KeyboardEvent | React.MouseEvent) {\n      if (readOnly || isEditing) {\n        return;\n      }\n      event.preventDefault();\n      setIsEditing(true);\n    }\n\n    function handleEditModeChange(value: boolean) {\n      onEditModeChange?.(value);\n      setIsEditing(value);\n    }\n\n    function handleInputValueChange() {\n      handleEditModeChange(false);\n      if (!inputValue || value === inputValue) {\n        setInputValue(value);\n        return;\n      }\n      onChange?.(inputValue);\n    }\n\n    function handleBlur() {\n      handleInputValueChange();\n    }\n\n    function handleKeyDown(event: React.KeyboardEvent<HTMLInputElement>) {\n      if (event.key === keyCodes.ENTER) {\n        handleInputValueChange();\n      }\n      if (event.key === keyCodes.ESCAPE) {\n        handleEditModeChange(false);\n        setInputValue(value);\n      }\n    }\n\n    function handleChange(event: React.ChangeEvent<HTMLInputElement>) {\n      setInputValue(event.target.value);\n    }\n\n    const toggleKeyboardEditMode = useKeyboardButtonPressedFunc(toggleEditMode);\n\n    function focus() {\n      if (inputRef.current) {\n        inputRef.current?.focus();\n      }\n    }\n\n    useEffect(() => {\n      if (isEditing) {\n        focus();\n      }\n    }, [isEditing]);\n\n    useLayoutEffect(() => {\n      if (!typographyRef.current) {\n        return;\n      }\n      const { width } = typographyRef.current.getBoundingClientRect();\n      setInputWidth(width);\n    }, [inputValue, isEditing]);\n\n    return (\n      <div\n        ref={mergedRef}\n        id={id}\n        aria-label={ariaLabel}\n        data-testid={dataTestId}\n        className={cx(styles.editableTypography, className)}\n        role={isEditing ? null : \"button\"}\n        onClick={onTypographyClick}\n        onKeyDown={toggleKeyboardEditMode}\n      >\n        {isEditing && (\n          <input\n            ref={inputRef}\n            className={cx(styles.input, typographyClassName)}\n            value={inputValue}\n            onChange={handleChange}\n            onKeyDown={handleKeyDown}\n            onBlur={handleBlur}\n            aria-label={ariaLabel}\n            placeholder={placeholder}\n            style={{ width: inputWidth }}\n            role=\"input\"\n          />\n        )}\n        <TypographyComponent\n          ref={typographyRef}\n          aria-hidden={isEditing}\n          className={cx(styles.typography, typographyClassName, {\n            [styles.hidden]: isEditing,\n            [styles.disabled]: readOnly\n          })}\n          tabIndex={0}\n          tooltipProps={tooltipProps}\n        >\n          {inputValue || placeholder}\n        </TypographyComponent>\n      </div>\n    );\n  }\n);\n\nexport default EditableTypography;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}