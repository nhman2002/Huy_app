{"ast":null,"code":"import { defineProperty as e } from \"../../../_virtual/_rollupPluginBabelHelpers.js\";\nimport { jsx as t } from \"react/jsx-runtime\";\nimport s from \"classnames\";\nimport { forwardRef as o, useContext as r, useRef as i, useEffect as n, useCallback as a } from \"react\";\nimport { camelCase as m } from \"lodash-es\";\nimport { getStyle as l } from \"../../helpers/typesciptCssModulesHelper.js\";\nimport d from \"../Text/Text.js\";\nimport { NOOP as p } from \"../../utils/function-utils.js\";\nimport { withStaticProps as c } from \"../../types/withStaticProps.js\";\nimport f from \"../../hooks/useMergeRef.js\";\nimport { ListContext as u } from \"../List/utils/ListContext.js\";\nimport { ListItemComponentType as j } from \"./ListItemConstants.js\";\nimport v from \"./ListItem.module.scss.js\";\nimport b from \"../../hooks/useKeyEvent/index.js\";\nimport { SELECTION_KEYS as y } from \"../../constants/keyCodes.js\";\nimport { SIZES as x } from \"../../constants/sizes.js\";\nvar I = o(function (o, c) {\n  var j = o.className,\n    h = o.id,\n    k = o.component,\n    L = void 0 === k ? I.components.DIV : k,\n    C = o.onClick,\n    g = void 0 === C ? p : C,\n    M = o.onHover,\n    T = void 0 === M ? p : M,\n    z = o.selected,\n    E = o.disabled,\n    H = void 0 !== E && E,\n    N = o.size,\n    P = void 0 === N ? x.SMALL : N,\n    F = o.tabIndex,\n    O = void 0 === F ? 0 : F,\n    S = o.children,\n    _ = o[\"aria-current\"],\n    w = o[\"data-testid\"],\n    A = r(u).updateFocusedItem,\n    B = i(null),\n    D = f(c, B);\n  n(function () {\n    z && (null == A || A(h));\n  }, [z, h, A]);\n  var K = a(function (e) {\n    H || g(e, h);\n  }, [H, g, h]);\n  b({\n    keys: y,\n    ref: B,\n    callback: K\n  });\n  var R = a(function (e) {\n    H || T(e, h);\n  }, [H, T, h]);\n  return t(d, Object.assign({\n    element: L,\n    \"data-testid\": w || h,\n    ref: D,\n    className: s(v.listItem, j, l(v, m(P)), e(e({}, v.selected, z && !H), v.disabled, H)),\n    id: h,\n    type: d.types.TEXT2,\n    \"aria-disabled\": H,\n    \"aria-selected\": z,\n    onClick: K,\n    onMouseEnter: R,\n    onFocus: R,\n    role: \"option\",\n    tabIndex: O,\n    \"aria-current\": _\n  }, {\n    children: S\n  }));\n});\nObject.assign(I, {\n  displayName: \"ListItem\"\n});\nvar h = c(I, {\n  sizes: x,\n  components: j\n});\nexport { h as default };","map":{"version":3,"names":["I","o","c","j","className","h","id","k","component","L","components","DIV","C","onClick","g","p","M","onHover","T","z","selected","E","disabled","H","N","size","P","x","SMALL","F","tabIndex","O","S","children","_","w","A","r","u","updateFocusedItem","B","i","D","f","n","K","a","e","b","keys","y","ref","callback","R","t","d","Object","assign","element","s","v","listItem","l","m","type","types","TEXT2","onMouseEnter","onFocus","role","displayName","sizes","default"],"sources":["/Users/huynhmannguyen/Documents/GitHub/Huy_app/node_modules/monday-ui-react-core/src/components/ListItem/ListItem.tsx"],"sourcesContent":["/* eslint-disable jsx-a11y/role-supports-aria-props,jsx-a11y/no-noninteractive-element-interactions */\nimport cx from \"classnames\";\nimport React, { AriaAttributes, forwardRef, useCallback, useContext, useEffect, useRef } from \"react\";\nimport { camelCase } from \"lodash-es\";\nimport { getStyle } from \"../../helpers/typesciptCssModulesHelper\";\nimport Text from \"../Text/Text\";\nimport { SIZES, SELECTION_KEYS } from \"../../constants\";\nimport { NOOP } from \"../../utils/function-utils\";\nimport { withStaticProps, VibeComponentProps, VibeComponent, ElementContent } from \"../../types\";\nimport { useKeyEvent } from \"../../hooks\";\nimport useMergeRef from \"../../hooks/useMergeRef\";\nimport { ListContext } from \"../List/utils/ListContext\";\nimport { ListItemComponentType } from \"./ListItemConstants\";\nimport styles from \"./ListItem.module.scss\";\n\nexport interface ListItemProps extends VibeComponentProps {\n  /**\n   * the ListItem component [li, div, a]\n   */\n  component?: ListItemComponentType;\n  /**\n   * The textual content of the list item\n   */\n  children?: ElementContent;\n  /**\n   * A class name to be passed to the list item wrapper\n   */\n  className?: string;\n  /**\n   * An id to be passed to the list item wrapper\n   */\n  id?: string;\n  /**\n   * A callback function which is being called when the item is being clicked\n   * It will be called with the following params\n   * event (DomEvent)\n   * id (the id which is being passed)\n   * onClick(event, id)\n   */\n  onClick?: (event: React.MouseEvent | React.KeyboardEvent, id: string) => void;\n  /**\n   * A callback function which is being called when the item is being hovered\n   * It will be called with the following params\n   * event (DomEvent)\n   * id (the id which is being passed)\n   * onHover(event, id)\n   */\n  onHover?: (event: React.MouseEvent | React.FocusEvent, id: string) => void;\n  /**\n   * disabled state - callback will not be called and navigation will be skipped\n   */\n  disabled?: boolean;\n  /**\n   * Selected indication\n   */\n  selected?: boolean;\n  /**\n   * The size of the list item\n   */\n  size?: (typeof SIZES)[keyof typeof SIZES];\n  /**\n   Tabindex is used for keyboard navigation - if you want to skip \"Tab navigation\" please pass -1.\n   */\n  tabIndex?: number;\n  \"aria-current\"?: AriaAttributes[\"aria-current\"];\n}\n\nconst ListItem: VibeComponent<ListItemProps> & { sizes?: typeof SIZES; components?: typeof ListItemComponentType } =\n  forwardRef(\n    (\n      {\n        className,\n        id,\n        component = ListItem.components.DIV,\n        onClick = NOOP,\n        onHover = NOOP,\n        selected,\n        disabled = false,\n        size = SIZES.SMALL,\n        tabIndex = 0,\n        children,\n        \"aria-current\": ariaCurrent,\n        \"data-testid\": dataTestId\n      },\n      ref\n    ) => {\n      const { updateFocusedItem } = useContext(ListContext);\n      const componentRef = useRef(null);\n      const mergedRef = useMergeRef(ref, componentRef);\n\n      useEffect(() => {\n        if (selected) {\n          updateFocusedItem?.(id);\n        }\n      }, [selected, id, updateFocusedItem]);\n\n      const componentOnClick = useCallback(\n        (event: React.MouseEvent | React.KeyboardEvent) => {\n          if (disabled) return;\n          onClick(event, id);\n        },\n        [disabled, onClick, id]\n      );\n\n      useKeyEvent({\n        keys: SELECTION_KEYS,\n        ref: componentRef,\n        callback: componentOnClick\n      });\n\n      const componentOnHover = useCallback(\n        (event: React.MouseEvent | React.FocusEvent) => {\n          if (disabled) return;\n          onHover(event, id);\n        },\n        [disabled, onHover, id]\n      );\n\n      return (\n        <Text\n          element={component}\n          data-testid={dataTestId || id}\n          ref={mergedRef}\n          className={cx(styles.listItem, className, getStyle(styles, camelCase(size)), {\n            [styles.selected]: selected && !disabled,\n            [styles.disabled]: disabled\n          })}\n          id={id}\n          type={Text.types.TEXT2}\n          aria-disabled={disabled}\n          aria-selected={selected}\n          onClick={componentOnClick}\n          onMouseEnter={componentOnHover}\n          onFocus={componentOnHover}\n          role=\"option\"\n          tabIndex={tabIndex}\n          aria-current={ariaCurrent}\n        >\n          {children}\n        </Text>\n      );\n    }\n  );\n\nObject.assign(ListItem, {\n  // Used by VirtualizedListItems\n  displayName: \"ListItem\"\n});\n\nexport default withStaticProps(ListItem, {\n  sizes: SIZES,\n  components: ListItemComponentType\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}