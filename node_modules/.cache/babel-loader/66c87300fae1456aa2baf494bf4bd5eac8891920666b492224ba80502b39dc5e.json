{"ast":null,"code":"import { typeof as o } from \"../../../_virtual/_rollupPluginBabelHelpers.js\";\nimport { jsx as r } from \"react/jsx-runtime\";\nimport t from \"../Icon/Icon.js\";\nimport { defaultIconMap as e } from \"./ToastConstants.js\";\nvar i = function (i, n) {\n  return n && \"object\" === o(n) ? n : n || e[i] ? r(t, {\n    iconType: n ? t.type.ICON_FONT : t.type.SVG,\n    clickable: !1,\n    icon: n || e[i],\n    iconSize: 20,\n    ignoreFocusStyle: !0\n  }) : null;\n};\nexport { i as getIcon };","map":{"version":3,"names":["i","getIcon","n","o","e","r","t","iconType","type","ICON_FONT","SVG","clickable","icon","iconSize","ignoreFocusStyle"],"sources":["/Users/huynhmannguyen/Documents/GitHub/Huy_app/node_modules/monday-ui-react-core/src/components/Toast/ToastHelpers.tsx"],"sourcesContent":["import React from \"react\";\nimport Icon, { IconSubComponentProps } from \"../Icon/Icon\";\nimport { defaultIconMap, ToastType } from \"./ToastConstants\";\n\nexport const getIcon = (type: ToastType, icon: string | React.FC<IconSubComponentProps> | null) => {\n  /* icon may be node a may be a string */\n  if (icon && typeof icon === \"object\") {\n    return icon;\n  }\n  return icon || defaultIconMap[type] ? (\n    <Icon\n      iconType={icon ? Icon.type.ICON_FONT : Icon.type.SVG}\n      clickable={false}\n      icon={icon || defaultIconMap[type]}\n      iconSize={20}\n      ignoreFocusStyle\n    />\n  ) : null;\n};\n"],"mappings":";;;;AAIO,IAAMA,CAAA,GAAU,SAAAC,CAACD,CAAA,EAAiBE,CAAA;EAEvC,OAAIA,CAAA,IAAwB,aAAhBC,CAAA,CAAOD,CAAA,IACVA,CAAA,GAEFA,CAAA,IAAQE,CAAA,CAAeJ,CAAA,IAC5BK,CAAA,CAACC,CAAA,EAAI;IACHC,QAAA,EAAUL,CAAA,GAAOI,CAAA,CAAKE,IAAA,CAAKC,SAAA,GAAYH,CAAA,CAAKE,IAAA,CAAKE,GAAA;IACjDC,SAAA,GAAW;IACXC,IAAA,EAAMV,CAAA,IAAQE,CAAA,CAAeJ,CAAA;IAC7Ba,QAAA,EAAU;IACVC,gBAAA,GACA;EAAA,KACA,IACN;AAAA;AAAA,SAAAd,CAAA,IAAAC,OAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}