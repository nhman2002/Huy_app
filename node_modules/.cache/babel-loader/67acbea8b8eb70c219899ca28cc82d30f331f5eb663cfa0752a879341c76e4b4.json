{"ast":null,"code":"import { jsx as e } from \"react/jsx-runtime\";\nimport l from \"./PercentageLabel.module.scss.js\";\nvar r = function (r) {\n  var a = r.forElement,\n    t = r.value,\n    o = void 0 === t ? 0 : t;\n  return null == o ? null : e(\"label\", Object.assign({\n    htmlFor: void 0 === a ? \"\" : a,\n    className: l.label\n  }, {\n    children: \"\".concat(o.toFixed(), \"%\")\n  }));\n};\nexport { r as default };","map":{"version":3,"names":["r","PercentageLabel","a","forElement","t","value","o","e","Object","assign","htmlFor","className","l","label","children","concat","toFixed","default"],"sources":["/Users/huynhmannguyen/Documents/GitHub/Huy_app/node_modules/monday-ui-react-core/src/components/ProgressBars/PercentageLabel/PercentageLabel.tsx"],"sourcesContent":["import React, { FC } from \"react\";\nimport styles from \"./PercentageLabel.module.scss\";\n\ninterface PercentageLabelProps {\n  /**\n   * Replacement to `htmlFor` | `for` attribute.\n   */\n  forElement: string;\n  /**\n   * Determine the displayed percentage.\n   */\n  value: number;\n}\n\nconst PercentageLabel: FC<PercentageLabelProps> = ({ forElement = \"\", value = 0 }) => {\n  if (value === null || value === undefined) return null;\n  return (\n    <label htmlFor={forElement} className={styles.label}>\n      {`${value.toFixed()}%`}\n    </label>\n  );\n};\n\nexport default PercentageLabel;\n"],"mappings":";;AAcA,IAAMA,CAAA,GAA4C,SAAAC,CAA7BD,CAAA;EAAgE,IAAAE,CAAA,GAAAF,CAAA,CAAhCG,UAAA;IAAeC,CAAA,GAAAJ,CAAA,CAAEK,KAAA;IAAAC,CAAA,QAAQ,MAAHF,CAAA,GAAG,IAACA,CAAA;EAC7E,OAAI,QAAAE,CAAA,GAA8C,OAEhDC,CAAA,UAAAC,MAAA,CAAAC,MAAA;IAAOC,OAAA,OAHuD,MAAHR,CAAA,GAAG,KAAEA,CAAA;IAGpCS,SAAA,EAAWC,CAAA,CAAOC;EAAA,GAC3C;IAAAC,QAAA,KAAAC,MAAA,CAAGT,CAAA,CAAMU,OAAA,IAAS;EAAA,GAGzB;AAAA;AAAA,SAAAhB,CAAA,IAAAiB,OAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}