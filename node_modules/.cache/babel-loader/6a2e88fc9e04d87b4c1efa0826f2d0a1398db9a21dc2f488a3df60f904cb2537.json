{"ast":null,"code":"import { SIZES as r } from \"../../constants/sizes.js\";\nvar n, t;\n!function (r) {\n  r.PRIMARY = \"primary\", r.SECONDARY = \"secondary\", r.TERTIARY = \"tertiary\";\n}(n || (n = {})), function (r) {\n  r.PRIMARY = \"primary\", r.POSITIVE = \"positive\", r.NEGATIVE = \"negative\", r.ON_PRIMARY_COLOR = \"on-primary-color\", r.ON_INVERTED_BACKGROUND = \"on-inverted-background\", r.BRAND = \"brand\", r.FIXED_LIGHT = \"fixed-light\";\n}(t || (t = {}));\nvar i,\n  o = {\n    sm: r.SMALL,\n    md: r.MEDIUM,\n    lg: r.LARGE\n  },\n  R = function (r) {\n    return r && r in o ? o[r] : r;\n  },\n  e = 20;\n!function (r) {\n  r.BUTTON = \"button\", r.SUBMIT = \"submit\", r.RESET = \"reset\";\n}(i || (i = {}));\nexport { e as BUTTON_ICON_SIZE, t as ButtonColor, i as ButtonInputType, n as ButtonType, o as OLD_BUTTON_SIZES, R as getActualSize };","map":{"version":3,"names":["n","t","r","PRIMARY","SECONDARY","TERTIARY","POSITIVE","NEGATIVE","ON_PRIMARY_COLOR","ON_INVERTED_BACKGROUND","BRAND","FIXED_LIGHT","i","o","sm","SMALL","md","MEDIUM","lg","LARGE","R","getActualSize","e","BUTTON","SUBMIT","RESET","BUTTON_ICON_SIZE","ButtonColor","ButtonInputType","ButtonType","OLD_BUTTON_SIZES"],"sources":["/Users/huynhmannguyen/Documents/GitHub/Huy_app/node_modules/monday-ui-react-core/src/components/Button/ButtonConstants.ts"],"sourcesContent":["import { SIZES } from \"../../constants/sizes\";\n\nexport enum ButtonType {\n  PRIMARY = \"primary\",\n  SECONDARY = \"secondary\",\n  TERTIARY = \"tertiary\"\n}\n\nexport enum ButtonColor {\n  PRIMARY = \"primary\",\n  POSITIVE = \"positive\",\n  NEGATIVE = \"negative\",\n  ON_PRIMARY_COLOR = \"on-primary-color\",\n  ON_INVERTED_BACKGROUND = \"on-inverted-background\",\n  BRAND = \"brand\",\n  FIXED_LIGHT = \"fixed-light\"\n  // FIXED_DARK = \"fixed-dark\"\n}\n\nexport const OLD_BUTTON_SIZES = {\n  sm: SIZES.SMALL,\n  md: SIZES.MEDIUM,\n  lg: SIZES.LARGE\n} as const;\n\nexport type Size = (typeof SIZES)[keyof typeof SIZES] | keyof typeof OLD_BUTTON_SIZES;\n\n// Support old sizes (backward compatible)\nexport const getActualSize = (size?: Size) => {\n  if (size && size in OLD_BUTTON_SIZES) {\n    //  Element implicitly has an 'any' type because expression of type 'Size' can't be used to index type\n    //  '{ readonly sm: \"small\"; readonly md: \"medium\"; readonly lg: \"large\"; }'.\n    //   Property 'xxs' does not exist on type '{ readonly sm: \"small\"; readonly md: \"medium\"; readonly lg: \"large\"; }'.\n    // @ts-expect-error:  Backward compatibility check for old button sizes\n    return OLD_BUTTON_SIZES[size];\n  }\n\n  return size;\n};\n\nexport const BUTTON_KIND_CLASS_NAMES = {\n  PRIMARY: \"\"\n};\n\nexport const BUTTON_ICON_SIZE = 20;\n\nexport enum ButtonInputType {\n  BUTTON = \"button\",\n  SUBMIT = \"submit\",\n  RESET = \"reset\"\n}\n"],"mappings":";IAEYA,CAAA,EAMAC,CAAA;AAAA,CANZ,UAAYC,CAAA;EACVA,CAAA,CAAAC,OAAA,cACAD,CAAA,CAAAE,SAAA,gBACAF,CAAA,CAAAG,QAAA,aACD;AAAA,CAJD,CAAYL,CAAA,KAAAA,CAAA,GAIX,MAED,UAAYE,CAAA;EACVA,CAAA,CAAAC,OAAA,cACAD,CAAA,CAAAI,QAAA,eACAJ,CAAA,CAAAK,QAAA,eACAL,CAAA,CAAAM,gBAAA,uBACAN,CAAA,CAAAO,sBAAA,6BACAP,CAAA,CAAAQ,KAAA,YACAR,CAAA,CAAAS,WAAA,gBAED;AAAA,CATD,CAAYV,CAAA,KAAAA,CAAA,GASX;AAEM,IA2BKW,CAAA;EA3BCC,CAAA,GAAmB;IAC9BC,EAAA,EAAIZ,CAAA,CAAMa,KAAA;IACVC,EAAA,EAAId,CAAA,CAAMe,MAAA;IACVC,EAAA,EAAIhB,CAAA,CAAMiB;EAAA;EAMCC,CAAA,GAAgB,SAAAC,CAACnB,CAAA;IAC5B,OAAIA,CAAA,IAAQA,CAAA,IAAQW,CAAA,GAKXA,CAAA,CAAiBX,CAAA,IAGnBA,CACT;EAAA;EAMaoB,CAAA,GAAmB;AAAA,CAEhC,UAAYpB,CAAA;EACVA,CAAA,CAAAqB,MAAA,aACArB,CAAA,CAAAsB,MAAA,aACAtB,CAAA,CAAAuB,KAAA,UACD;AAAA,CAJD,CAAYb,CAAA,KAAAA,CAAA,GAIX;AAAA,SAAAU,CAAA,IAAAI,gBAAA,EAAAzB,CAAA,IAAA0B,WAAA,EAAAf,CAAA,IAAAgB,eAAA,EAAA5B,CAAA,IAAA6B,UAAA,EAAAhB,CAAA,IAAAiB,gBAAA,EAAAV,CAAA,IAAAC,aAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}