{"ast":null,"code":"import { toConsumableArray as o } from \"../../../../../_virtual/_rollupPluginBabelHelpers.js\";\nimport { jsx as r, jsxs as e } from \"react/jsx-runtime\";\nimport { difference as t, intersection as i } from \"lodash-es\";\nimport { forwardRef as l, useRef as n, useCallback as s, useMemo as c } from \"react\";\nimport { ColorStyle as a, contentColors as d } from \"../../../../utils/colors-vars-map.js\";\nimport m from \"../../../Icon/Icons/components/NoColor.js\";\nimport { ColorShapes as u, DEFAULT_NUMBER_OF_COLORS_IN_LINE as f } from \"../../ColorPickerConstants.js\";\nimport { calculateColorPickerWidth as p } from \"../../services/ColorPickerStyleService.js\";\nimport { useGridKeyboardNavigationContext as C, GridKeyboardNavigationContext as v } from \"../../../GridKeyboardNavigationContext/GridKeyboardNavigationContext.js\";\nimport { ColorPickerClearButton as I } from \"./ColorPickerClearButton.js\";\nimport { ColorPickerColorsGrid as h } from \"./ColorPickerColorsGrid.js\";\nimport { withStaticProps as S } from \"../../../../types/withStaticProps.js\";\nimport j from \"../../../../hooks/useMergeRef.js\";\nimport { BaseSizes as y } from \"../../../../constants/sizes.js\";\nvar b = S(l(function (l, S) {\n  var b = l.className,\n    k = l.onValueChange,\n    g = l.value,\n    O = l.noColorText,\n    R = l.colorStyle,\n    x = void 0 === R ? a.REGULAR : R,\n    L = l.ColorIndicatorIcon,\n    N = l.SelectedIndicatorIcon,\n    B = l.shouldRenderIndicatorWithoutBackground,\n    M = l.NoColorIcon,\n    P = void 0 === M ? m : M,\n    E = l.isBlackListMode,\n    w = void 0 === E || E,\n    z = l.colorsList,\n    T = l.isMultiselect,\n    G = l.colorSize,\n    U = void 0 === G ? y.MEDIUM : G,\n    A = l.numberOfColorsInLine,\n    _ = void 0 === A ? f : A,\n    K = l.tooltipContentByColor,\n    W = void 0 === K ? {} : K,\n    D = l.focusOnMount,\n    H = l.colorShape,\n    Q = void 0 === H ? u.SQUARE : H,\n    V = l.forceUseRawColorList,\n    Y = l.showColorNameTooltip,\n    q = l.id,\n    F = l[\"data-testid\"],\n    J = n(null),\n    X = j(S, J),\n    Z = n(null),\n    $ = n(null),\n    oo = s(function () {\n      k(null);\n    }, [k]),\n    ro = c(function () {\n      return V ? z : w ? t(d, z) : i(d, z);\n    }, [V, w, z]),\n    eo = s(function (r) {\n      if (T) {\n        var e = o(g);\n        if (e.includes(r)) {\n          var t = e.indexOf(r);\n          t > -1 && e.splice(t, 1);\n        } else e.push(r);\n        k(e);\n      } else k([r]);\n    }, [T, k, g]),\n    to = c(function () {\n      return [{\n        topElement: Z,\n        bottomElement: $\n      }];\n    }, []),\n    io = C(to, J),\n    lo = p(U, _);\n  return r(\"div\", Object.assign({\n    className: b,\n    style: {\n      width: lo\n    },\n    ref: X,\n    tabIndex: -1\n  }, {\n    children: e(v.Provider, Object.assign({\n      value: io\n    }, {\n      children: [r(h, {\n        ref: Z,\n        onColorClicked: eo,\n        colorsToRender: ro,\n        numberOfColorsInLine: _,\n        focusOnMount: D,\n        value: g,\n        colorStyle: x,\n        ColorIndicatorIcon: L,\n        shouldRenderIndicatorWithoutBackground: B,\n        SelectedIndicatorIcon: N,\n        colorSize: U,\n        tooltipContentByColor: W,\n        colorShape: Q,\n        showColorNameTooltip: Y && !V,\n        id: q,\n        \"data-testid\": F\n      }), O && r(I, {\n        Icon: P,\n        onClick: oo,\n        text: O,\n        ref: $\n      })]\n    }))\n  }));\n}), {\n  COLOR_STYLES: a,\n  sizes: y,\n  colorStyles: a,\n  colorSizes: y,\n  colorShapes: u\n});\nexport { b as default };","map":{"version":3,"names":["b","S","l","className","k","onValueChange","g","value","O","noColorText","R","colorStyle","x","a","REGULAR","L","ColorIndicatorIcon","N","SelectedIndicatorIcon","B","shouldRenderIndicatorWithoutBackground","M","NoColorIcon","P","m","E","isBlackListMode","w","z","colorsList","T","isMultiselect","G","colorSize","U","y","MEDIUM","A","numberOfColorsInLine","_","f","K","tooltipContentByColor","W","D","focusOnMount","H","colorShape","Q","u","SQUARE","V","forceUseRawColorList","Y","showColorNameTooltip","q","id","F","J","n","X","j","Z","$","oo","s","ro","c","t","d","i","eo","r","e","o","includes","indexOf","splice","push","to","topElement","bottomElement","io","C","lo","p","Object","assign","style","width","ref","tabIndex","children","v","Provider","h","onColorClicked","colorsToRender","I","Icon","onClick","text","COLOR_STYLES","sizes","colorStyles","colorSizes","colorShapes","default"],"sources":["/Users/huynhmannguyen/Documents/GitHub/Huy_app/node_modules/monday-ui-react-core/src/components/ColorPicker/components/ColorPickerContent/ColorPickerContent.tsx"],"sourcesContent":["import { difference as _difference, intersection as _intersection } from \"lodash-es\";\nimport React, { forwardRef, useCallback, useMemo, useRef } from \"react\";\nimport { BaseSizes } from \"../../../../constants\";\nimport { ColorStyle, CONTENT_COLORS_VALUES, contentColors } from \"../../../../utils/colors-vars-map\";\nimport NoColor from \"../../../Icon/Icons/components/NoColor\";\nimport {\n  ColorShapes,\n  DEFAULT_NUMBER_OF_COLORS_IN_LINE,\n  ColorPickerValue,\n  ColorPickerArrayValueOnly\n} from \"../../ColorPickerConstants\";\nimport { calculateColorPickerWidth } from \"../../services/ColorPickerStyleService\";\nimport {\n  GridKeyboardNavigationContext,\n  useGridKeyboardNavigationContext\n} from \"../../../GridKeyboardNavigationContext/GridKeyboardNavigationContext\";\nimport { ColorPickerClearButton } from \"./ColorPickerClearButton\";\nimport { ColorPickerColorsGrid } from \"./ColorPickerColorsGrid\";\nimport { VibeComponentProps, VibeComponent, SubIcon, withStaticProps } from \"../../../../types\";\nimport useMergeRef from \"../../../../hooks/useMergeRef\";\n\nexport interface ColorPickerContentProps extends VibeComponentProps {\n  value: ColorPickerValue;\n  onValueChange: (value: ColorPickerArrayValueOnly) => void;\n  colorsList: ColorPickerArrayValueOnly;\n  ColorIndicatorIcon?: SubIcon;\n  SelectedIndicatorIcon?: SubIcon;\n  NoColorIcon?: SubIcon;\n  colorStyle?: ColorStyle;\n  colorSize?: BaseSizes;\n  colorShape?: ColorShapes;\n  tooltipContentByColor?: Partial<Record<CONTENT_COLORS_VALUES, string>>;\n  noColorText?: string;\n  shouldRenderIndicatorWithoutBackground?: boolean;\n  isBlackListMode?: boolean;\n  numberOfColorsInLine?: number;\n  focusOnMount?: boolean;\n  isMultiselect?: boolean;\n  /**\n   * Used to force the component render the colorList prop as is. Usually, this flag should not be used. It's intended only for edge cases.\n   * Usually, only \"monday colors\" will be rendered (unless blacklist mode is used). This flag will override this behavior.\n   */\n  forceUseRawColorList?: boolean;\n  /**\n   * Used to enable color name tooltip on each color in the component. it's incompatible with forceUseRawColorList flag.\n   * When \"tooltipContentByColor\" is supplied, it will override the color name tooltip.\n   */\n  showColorNameTooltip?: boolean;\n}\n\nconst ColorPickerContent: VibeComponent<ColorPickerContentProps, HTMLDivElement> & {\n  // Backward compatibility for enum naming\n  COLOR_STYLES?: typeof ColorStyle;\n  sizes?: typeof BaseSizes;\n  colorStyles?: typeof ColorStyle;\n  colorSizes?: typeof BaseSizes;\n  colorShapes?: typeof ColorShapes;\n} = forwardRef(\n  (\n    {\n      className,\n      onValueChange,\n      value,\n      noColorText,\n      colorStyle = ColorStyle.REGULAR,\n      ColorIndicatorIcon,\n      SelectedIndicatorIcon,\n      shouldRenderIndicatorWithoutBackground,\n      NoColorIcon = NoColor,\n      isBlackListMode = true,\n      colorsList,\n      isMultiselect,\n      colorSize = BaseSizes.MEDIUM,\n      numberOfColorsInLine = DEFAULT_NUMBER_OF_COLORS_IN_LINE,\n      tooltipContentByColor = {},\n      focusOnMount,\n      colorShape = ColorShapes.SQUARE,\n      forceUseRawColorList,\n      showColorNameTooltip,\n      id,\n      \"data-testid\": dataTestId\n    },\n    ref\n  ) => {\n    const gridRef = useRef(null);\n    const mergedRef = useMergeRef(ref, gridRef);\n    const colorsRef = useRef(null);\n    const buttonRef = useRef(null);\n\n    const onClearButton = useCallback(() => {\n      onValueChange(null);\n    }, [onValueChange]);\n\n    const colorsToRender = useMemo(() => {\n      if (forceUseRawColorList) {\n        return colorsList;\n      }\n      return isBlackListMode ? _difference(contentColors, colorsList) : _intersection(contentColors, colorsList);\n    }, [forceUseRawColorList, isBlackListMode, colorsList]);\n\n    const onColorClicked = useCallback(\n      (color: CONTENT_COLORS_VALUES) => {\n        if (!isMultiselect) {\n          onValueChange([color]);\n          return;\n        }\n        const colors = [...value];\n        if (colors.includes(color)) {\n          const indexInSelected = colors.indexOf(color);\n          if (indexInSelected > -1) {\n            colors.splice(indexInSelected, 1);\n          }\n        } else {\n          colors.push(color);\n        }\n        onValueChange(colors);\n      },\n      [isMultiselect, onValueChange, value]\n    );\n\n    const positions = useMemo(() => [{ topElement: colorsRef, bottomElement: buttonRef }], []);\n    const keyboardContext = useGridKeyboardNavigationContext(positions, gridRef);\n    const width = calculateColorPickerWidth(colorSize, numberOfColorsInLine);\n\n    return (\n      <div className={className} style={{ width }} ref={mergedRef} tabIndex={-1}>\n        <GridKeyboardNavigationContext.Provider value={keyboardContext}>\n          <ColorPickerColorsGrid\n            ref={colorsRef}\n            onColorClicked={onColorClicked}\n            colorsToRender={colorsToRender}\n            numberOfColorsInLine={numberOfColorsInLine}\n            focusOnMount={focusOnMount}\n            value={value}\n            colorStyle={colorStyle}\n            ColorIndicatorIcon={ColorIndicatorIcon}\n            shouldRenderIndicatorWithoutBackground={shouldRenderIndicatorWithoutBackground}\n            SelectedIndicatorIcon={SelectedIndicatorIcon}\n            colorSize={colorSize}\n            tooltipContentByColor={tooltipContentByColor}\n            colorShape={colorShape}\n            showColorNameTooltip={showColorNameTooltip && !forceUseRawColorList}\n            id={id}\n            data-testid={dataTestId}\n          />\n          {noColorText && (\n            <ColorPickerClearButton Icon={NoColorIcon} onClick={onClearButton} text={noColorText} ref={buttonRef} />\n          )}\n        </GridKeyboardNavigationContext.Provider>\n      </div>\n    );\n  }\n);\n\nexport default withStaticProps(ColorPickerContent, {\n  // Backward compatibility for enum naming\n  COLOR_STYLES: ColorStyle,\n  sizes: BaseSizes,\n  colorStyles: ColorStyle,\n  colorSizes: BaseSizes,\n  colorShapes: ColorShapes\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}