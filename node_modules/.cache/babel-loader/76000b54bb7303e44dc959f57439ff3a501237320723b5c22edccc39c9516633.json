{"ast":null,"code":"import { jsx as e } from \"react/jsx-runtime\";\nimport t, { forwardRef as i, useRef as n, useCallback as s } from \"react\";\nimport r from \"../../../hooks/useMergeRef.js\";\nimport { GridKeyboardNavigationContext as o } from \"../../GridKeyboardNavigationContext/GridKeyboardNavigationContext.js\";\nimport { useMenuGridItemNavContext as a } from \"./useMenuGridItemNavContext.js\";\nimport { useFocusGridItemByActiveStatus as d } from \"./useFocusGridItemByActiveStatus.js\";\nimport { useFocusWithin as c } from \"../../../hooks/useFocusWithin.js\";\nimport { getTestId as l, ComponentDefaultTestId as u } from \"../../../tests/testIds.js\";\nvar m = i(function (i, m) {\n  var v = i.className,\n    I = i.id,\n    x = i.children,\n    f = i.index,\n    b = i.activeItemIndex,\n    p = void 0 === b ? -1 : b,\n    g = i.closeMenu,\n    h = i.getNextSelectableIndex,\n    j = i.getPreviousSelectableIndex,\n    M = i.setActiveItemIndex,\n    S = i.setSubMenuIsOpenByIndex,\n    N = i.isUnderSubMenu,\n    y = void 0 !== N && N,\n    C = i.disabled,\n    G = void 0 !== C && C,\n    O = i.useDocumentEventListeners,\n    E = void 0 !== O && O,\n    R = i[\"data-testid\"],\n    P = n(null),\n    A = r(m, P),\n    D = n(),\n    F = x && t.Children.only(x);\n  F || console.error(\"MenuGridItem can accept only a single element as first level child, this element is not valid: \", F);\n  var U = s(function (e) {\n      S(f, e), e && M(f);\n    }, [f, M, S]),\n    W = c({\n      onFocusWithinChange: U\n    }).focusWithinProps;\n  d({\n    wrapperRef: P,\n    childRef: D,\n    activeItemIndex: p,\n    index: f,\n    useDocumentEventListeners: E\n  });\n  var k = a({\n    wrapperRef: P,\n    setActiveItemIndex: M,\n    getPreviousSelectableIndex: j,\n    getNextSelectableIndex: h,\n    activeItemIndex: p,\n    isUnderSubMenu: y,\n    closeMenu: g\n  });\n  return e(\"section\", Object.assign({\n    ref: A,\n    className: v,\n    id: I,\n    \"data-testid\": R || l(u.MENU_GRID_ITEM, I),\n    tabIndex: -1,\n    role: \"grid\"\n  }, W, {\n    children: e(o.Provider, Object.assign({\n      value: k\n    }, {\n      children: t.cloneElement(F, Object.assign(Object.assign({}, null == F ? void 0 : F.props), {\n        disabled: G,\n        ref: D\n      }))\n    }))\n  }));\n});\nObject.assign(m, {\n  isMenuChild: !0,\n  isSelectable: !0\n});\nvar v = m;\nexport { v as default };","map":{"version":3,"names":["m","i","v","className","I","id","x","children","f","index","b","activeItemIndex","p","g","closeMenu","h","getNextSelectableIndex","j","getPreviousSelectableIndex","M","setActiveItemIndex","S","setSubMenuIsOpenByIndex","N","isUnderSubMenu","y","C","disabled","G","O","useDocumentEventListeners","E","R","P","n","A","r","D","F","t","Children","only","console","error","U","s","e","W","c","onFocusWithinChange","focusWithinProps","d","wrapperRef","childRef","k","a","Object","assign","ref","l","u","MENU_GRID_ITEM","tabIndex","role","o","Provider","value","cloneElement","props","isMenuChild","isSelectable","default"],"sources":["/Users/huynhmannguyen/Documents/GitHub/Huy_app/node_modules/monday-ui-react-core/src/components/Menu/MenuGridItem/MenuGridItem.tsx"],"sourcesContent":["import React, { forwardRef, ReactElement, useCallback, useRef } from \"react\";\nimport useMergeRef from \"../../../hooks/useMergeRef\";\nimport { GridKeyboardNavigationContext } from \"../../GridKeyboardNavigationContext/GridKeyboardNavigationContext\";\nimport { useMenuGridItemNavContext } from \"./useMenuGridItemNavContext\";\nimport { useFocusGridItemByActiveStatus } from \"./useFocusGridItemByActiveStatus\";\nimport { useFocusWithin } from \"../../../hooks/useFocusWithin\";\nimport { VibeComponent, VibeComponentProps } from \"../../../types\";\nimport { CloseMenuOption } from \"../Menu/MenuConstants\";\nimport { ComponentDefaultTestId, getTestId } from \"../../../tests/test-ids-utils\";\n\ninterface MenuGridItemProps extends VibeComponentProps {\n  children?: ReactElement | ReactElement[];\n  /** if true, keyboard navigation will skip on this item. Also, this prop will be passed on to the child **/\n  disabled?: boolean;\n  /** a callback to close the wrapping menu **/\n  closeMenu?: (option: CloseMenuOption) => void;\n  /** the currently active index of the wrapping menu **/\n  activeItemIndex?: number;\n  setActiveItemIndex?: (index: number) => void;\n  getNextSelectableIndex?: (activeItemIndex: number) => number;\n  getPreviousSelectableIndex?: (activeItemIndex: number) => number;\n  /** the index of this item **/\n  index?: number;\n  /** true if this item is under a submenu, and not a top-level menu **/\n  isUnderSubMenu?: boolean;\n  setSubMenuIsOpenByIndex?: (index: number, isOpen: boolean) => void;\n  useDocumentEventListeners?: boolean;\n}\n\nconst MenuGridItem: VibeComponent<MenuGridItemProps> & {\n  isMenuChild?: boolean;\n  isSelectable?: boolean;\n} = forwardRef(\n  (\n    {\n      className,\n      id,\n      children,\n      index,\n      activeItemIndex = -1,\n      closeMenu,\n      getNextSelectableIndex,\n      getPreviousSelectableIndex,\n      setActiveItemIndex,\n      setSubMenuIsOpenByIndex,\n      isUnderSubMenu = false,\n      disabled = false,\n      useDocumentEventListeners = false,\n      \"data-testid\": dataTestId\n    },\n    ref\n  ) => {\n    const componentRef = useRef(null);\n    const mergedRef = useMergeRef(ref, componentRef);\n    const childRef = useRef();\n\n    const child = children && React.Children.only(children);\n    if (!child) {\n      console.error(\n        \"MenuGridItem can accept only a single element as first level child, this element is not valid: \",\n        child\n      );\n    }\n\n    const onFocusWithinChange = useCallback(\n      (isFocusWithin: boolean) => {\n        setSubMenuIsOpenByIndex(index, isFocusWithin);\n        if (isFocusWithin) {\n          setActiveItemIndex(index);\n        }\n      },\n      [index, setActiveItemIndex, setSubMenuIsOpenByIndex]\n    );\n    const { focusWithinProps } = useFocusWithin({ onFocusWithinChange });\n\n    useFocusGridItemByActiveStatus({\n      wrapperRef: componentRef,\n      childRef,\n      activeItemIndex,\n      index,\n      useDocumentEventListeners\n    });\n\n    const keyboardContext = useMenuGridItemNavContext({\n      wrapperRef: componentRef,\n      setActiveItemIndex,\n      getPreviousSelectableIndex,\n      getNextSelectableIndex,\n      activeItemIndex,\n      isUnderSubMenu,\n      closeMenu\n    });\n\n    return (\n      <section\n        ref={mergedRef}\n        className={className}\n        id={id}\n        data-testid={dataTestId || getTestId(ComponentDefaultTestId.MENU_GRID_ITEM, id)}\n        tabIndex={-1}\n        role=\"grid\"\n        {...focusWithinProps}\n      >\n        <GridKeyboardNavigationContext.Provider value={keyboardContext}>\n          {React.cloneElement(child, {\n            ...child?.props,\n            disabled,\n            ref: childRef\n          })}\n        </GridKeyboardNavigationContext.Provider>\n      </section>\n    );\n  }\n);\n\nObject.assign(MenuGridItem, {\n  isMenuChild: true,\n  isSelectable: true\n});\n\nexport default MenuGridItem;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}