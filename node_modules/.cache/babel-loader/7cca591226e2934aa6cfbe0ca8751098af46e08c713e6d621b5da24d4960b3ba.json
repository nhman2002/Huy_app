{"ast":null,"code":"import { defineProperty as i } from \"../../../_virtual/_rollupPluginBabelHelpers.js\";\nimport { jsx as e, jsxs as o } from \"react/jsx-runtime\";\nimport { forwardRef as r, useRef as t, useMemo as a } from \"react\";\nimport s from \"../../hooks/useMergeRef.js\";\nimport { NOOP as d } from \"../../utils/function-utils.js\";\nimport { ensureDefaultValue as l } from \"./SliderHelpers.js\";\nimport { SliderProvider as n } from \"./SliderContext.js\";\nimport m from \"./SliderBase/SliderBase.js\";\nimport f from \"./SliderInfix.js\";\nimport { SliderColor as u } from \"./SliderConstants.js\";\nimport c from \"classnames\";\nimport { withStaticProps as p } from \"../../types/withStaticProps.js\";\nimport v from \"./Slider.module.scss.js\";\nimport { BASE_SIZES as j } from \"../../constants/sizes.js\";\nvar x = r(function (r, u) {\n    var p = r.ariaLabel,\n      j = r.ariaLabelledby,\n      S = r.className,\n      b = r.color,\n      h = r[\"data-testid\"],\n      g = void 0 === h ? \"monday-slider\" : h,\n      L = r.disabled,\n      k = void 0 !== L && L,\n      y = r.id,\n      z = r.max,\n      I = void 0 === z ? 100 : z,\n      P = r.min,\n      w = void 0 === P ? 0 : P,\n      C = r.onChange,\n      F = void 0 === C ? d : C,\n      O = r.ranged,\n      V = void 0 !== O && O,\n      B = r.step,\n      T = void 0 === B ? 1 : B,\n      H = r.showValue,\n      M = void 0 !== H && H,\n      N = r.size,\n      R = void 0 === N ? x.sizes.SMALL : N,\n      W = r.value,\n      X = r.defaultValue,\n      _ = void 0 === X ? 0 : X,\n      A = r.valueFormatter,\n      E = void 0 === A ? function (i) {\n        return \"\".concat(i, \"%\");\n      } : A,\n      q = r.valueText,\n      D = r.indicateSelection,\n      G = void 0 !== D && D,\n      J = r.prefix,\n      K = r.postfix,\n      Q = r.selectionIndicatorWidth,\n      U = void 0 === Q ? \"60px\" : Q,\n      Y = t(null),\n      Z = s(u, Y),\n      $ = a(function () {\n        return {\n          prefix: J,\n          postfix: K,\n          indicateSelection: G,\n          selectionIndicatorWidth: U\n        };\n      }, [J, K, G, U]);\n    return e(n, Object.assign({\n      ariaLabel: p,\n      ariaLabelledby: j,\n      color: b,\n      \"data-testid\": g,\n      disabled: k,\n      infixOptions: $,\n      max: I,\n      min: w,\n      onChange: F,\n      ranged: V,\n      showValue: M,\n      size: R,\n      step: T,\n      value: W,\n      defaultValue: l(_, w, I, V),\n      valueFormatter: E,\n      valueText: q\n    }, {\n      children: o(\"div\", Object.assign({\n        className: c(v.slider, i({}, v.valueShown, M), S),\n        \"data-testid\": g,\n        id: y,\n        ref: Z\n      }, {\n        children: [e(f, {\n          kind: f.kinds.PREFIX\n        }), e(m, {}), e(f, {\n          kind: f.kinds.POSTFIX\n        })]\n      }))\n    }));\n  }),\n  S = p(x, {\n    sizes: j,\n    colors: u\n  });\nexport { S as default };","map":{"version":3,"names":["x","r","u","p","ariaLabel","j","ariaLabelledby","S","className","b","color","h","g","L","disabled","k","y","id","z","max","I","P","min","w","C","onChange","F","d","O","ranged","V","B","step","T","H","showValue","M","N","size","R","sizes","SMALL","W","value","X","defaultValue","_","A","valueFormatter","E","i","concat","q","valueText","D","indicateSelection","G","J","prefix","K","postfix","Q","selectionIndicatorWidth","U","Y","t","Z","s","$","a","e","n","Object","assign","infixOptions","l","children","o","c","v","slider","valueShown","ref","f","kind","kinds","PREFIX","m","POSTFIX","colors","default"],"sources":["/Users/huynhmannguyen/Documents/GitHub/Huy_app/node_modules/monday-ui-react-core/src/components/Slider/Slider.tsx"],"sourcesContent":["import React, { forwardRef, ReactElement, useMemo, useRef } from \"react\";\nimport { BASE_SIZES } from \"../../constants\";\nimport useMergeRef from \"../../hooks/useMergeRef\";\nimport { NOOP } from \"../../utils/function-utils\";\nimport { ensureDefaultValue } from \"./SliderHelpers\";\nimport { SliderProvider } from \"./SliderContext\";\nimport SliderBase from \"./SliderBase/SliderBase\";\nimport SliderInfix from \"./SliderInfix\";\nimport { IconType } from \"../Icon/IconConstants\";\nimport { SliderColor, SliderSize } from \"./SliderConstants\";\nimport cx from \"classnames\";\nimport { withStaticProps } from \"../../types\";\nimport styles from \"./Slider.module.scss\";\n\nexport type SliderProps = {\n  // ------ SliderBase props\n  /**\n   * Define a string that labels the current element (Slider)\n   */\n  ariaLabel?: string;\n  /**\n   * ElementId of Node that have the text needed for labeling the current element (Slider)\n   */\n  ariaLabelledby?: string;\n  /**\n   * Custom `class name` to be added to the component-root-node\n   */\n  className?: string;\n  /**\n   * Color Mode (primary/positive/negative) of the component (Slider)\n   */\n  color?: SliderColor;\n  /**\n   * Unique TestId - can be used as Selector for integration tests and other needs (tracking, etc)\n   */\n  \"data-testid\"?: string;\n  defaultValue?: number | number[];\n  /**\n   * Formatter function `value => formattedValue`\n   * default formatter return `${value}%`\n   */\n  /**\n   * If set to true, Component (Slider) will be disabled\n   *  - impossible to change value of component (Slider)\n   *  - visual changes (opacity)\n   */\n  disabled?: boolean;\n  /**\n   * Attribute `id` to be added to the component-root-node\n   */\n  id?: string;\n  /**\n   * Max range value of the component (Slider)\n   */\n  max?: number;\n  /**\n   * Min range value of the component (Slider)\n   */\n  min?: number;\n  /**\n   * Optional onChange callback (for outer trigger or Controlled mode)\n   * - required in Controlled Mode\n   */\n  onChange?: (value: number | number[]) => void;\n  /**\n   * If true switch slider to RRange mode (two Thumbs)\n   */\n  ranged?: boolean;\n  /**\n   * The granularity with which the slider can step through values.\n   * (A \"discrete\" slider.) The min prop serves as the origin for the valid values.\n   * We recommend (max - min) to be evenly divisible by the step.\n   */\n  step?: number;\n  /**\n   * Always show `value` instead of Tooltip\n   */\n  showValue?: boolean;\n  /**\n   * Size small/medium/large of the component (Slider)\n   */\n  size?: SliderSize;\n  /**\n   * Current/selected value of the range of the Component (Slider)\n   *   - should be used in Controlled Mode only\n   *   - in ranged mode should be an array of two numbers\n   */\n  value?: number | number[];\n  /**\n   * Function to format the value, e.g. add %. By default, returns `${value}%`\n   */\n  valueFormatter?: (value: number) => string;\n  /**\n   * Text/presentation of current/selected value\n   *  - should be used in Controlled Mode only\n   */\n  valueText?: string;\n  // ------ Additional subcomponents' props\n  /**\n   * Show selected from Slider range value\n   */\n  indicateSelection?: boolean;\n  /**\n   * Options for initial/start/prefix element, it can be one of:\n   *  - Any Component (react component, node, text, number etc.)\n   *  - Or it can be an object of options for Icons component (see Icon components props)\n   *  - Or it can be an object for Label (Icon, Heading - and other components)\n   *  - Or it can be Render Props Function witch are getting value and valueText\n   */\n  prefix?: { icon: IconType } | string | ((value: number, valueText: string) => void) | ReactElement;\n  /**\n   * Options for postfix/end/finishing element. Same as prefix element.\n   */\n  postfix?: { icon: IconType } | string | ((value: number, valueText: string) => void) | ReactElement;\n  /**\n   * Width of SelectionIndicator (i.e. TextField)\n   */\n  selectionIndicatorWidth?: string;\n};\n\nconst Slider: React.FC<SliderProps> & {\n  sizes?: typeof BASE_SIZES;\n  colors?: typeof SliderColor;\n} = forwardRef(\n  (\n    {\n      ariaLabel,\n      ariaLabelledby,\n      className,\n      color,\n      \"data-testid\": dataTestId = \"monday-slider\",\n      disabled = false,\n      id,\n      max = 100,\n      min = 0,\n      onChange = NOOP,\n      ranged = false,\n      step = 1,\n      showValue = false,\n      size = Slider.sizes.SMALL,\n      value,\n      defaultValue = 0,\n      valueFormatter = (value: number) => `${value}%`,\n      valueText,\n      // ------ Additional subcomponents' props\n      indicateSelection = false,\n      prefix,\n      postfix,\n      selectionIndicatorWidth = \"60px\"\n    },\n    ref\n  ) => {\n    const componentRef = useRef(null);\n    const mergedRef = useMergeRef(ref, componentRef);\n    const infixOptions = useMemo(\n      () => ({ prefix, postfix, indicateSelection, selectionIndicatorWidth }),\n      [prefix, postfix, indicateSelection, selectionIndicatorWidth]\n    );\n    return (\n      <SliderProvider\n        ariaLabel={ariaLabel}\n        ariaLabelledby={ariaLabelledby}\n        color={color}\n        data-testid={dataTestId}\n        disabled={disabled}\n        infixOptions={infixOptions}\n        max={max}\n        min={min}\n        onChange={onChange}\n        ranged={ranged}\n        showValue={showValue}\n        size={size}\n        step={step}\n        value={value}\n        defaultValue={ensureDefaultValue(defaultValue, min, max, ranged)}\n        valueFormatter={valueFormatter}\n        valueText={valueText}\n      >\n        <div\n          className={cx(styles.slider, { [styles.valueShown]: showValue }, className)}\n          data-testid={dataTestId}\n          id={id}\n          ref={mergedRef}\n        >\n          <SliderInfix kind={SliderInfix.kinds.PREFIX} />\n          <SliderBase />\n          <SliderInfix kind={SliderInfix.kinds.POSTFIX} />\n        </div>\n      </SliderProvider>\n    );\n  }\n);\n\nexport default withStaticProps(Slider, {\n  sizes: BASE_SIZES,\n  colors: SliderColor\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}