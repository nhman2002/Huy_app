{"ast":null,"code":"import { defineProperty as r } from \"../../../_virtual/_rollupPluginBabelHelpers.js\";\nimport { jsxs as o, jsx as t } from \"react/jsx-runtime\";\nimport a, { useMemo as i } from \"react\";\nimport e from \"classnames\";\nimport s from \"./AvatarGroupCounter.js\";\nimport { avatarOnClick as n } from \"./AvatarGroupHelper.js\";\nimport l from \"./AvatarGroup.module.scss.js\";\nvar p = function (p) {\n  var u = p.className,\n    c = p.avatarClassName,\n    v = p.id,\n    m = p.children,\n    d = p.size,\n    f = p.type,\n    y = p.max,\n    A = void 0 === y ? 5 : y,\n    j = p.counterProps,\n    P = p.counterTooltipCustomProps,\n    C = p.counterTooltipIsVirtualizedList,\n    T = void 0 !== C && C,\n    g = p.removePadding,\n    z = void 0 !== g && g,\n    b = i(function () {\n      if (!m) return {};\n      var r = Array.isArray(m) ? m : [m];\n      return {\n        displayAvatars: r.slice(0, A).map(function (r, o) {\n          var t, i;\n          return a.cloneElement(r, Object.assign(Object.assign({\n            key: o\n          }, null == r ? void 0 : r.props), {\n            size: d || (null === (t = null == r ? void 0 : r.props) || void 0 === t ? void 0 : t.size),\n            type: f || (null === (i = null == r ? void 0 : r.props) || void 0 === i ? void 0 : i.type),\n            className: e(l.avatarContainer, c),\n            onClick: function (o) {\n              return n(o, r.props);\n            }\n          }));\n        }),\n        counterTooltipAvatars: r.slice(A)\n      };\n    }, [c, m, A, d, f]),\n    G = b.displayAvatars,\n    N = b.counterTooltipAvatars;\n  return m ? o(\"div\", Object.assign({\n    className: e(l.avatarGroupContainer, u, r({}, l.noPadding, z)),\n    id: v\n  }, {\n    children: [G, t(s, {\n      counterTooltipAvatars: N,\n      counterProps: j,\n      counterTooltipCustomProps: P,\n      counterTooltipIsVirtualizedList: T,\n      size: d,\n      type: f\n    })]\n  })) : null;\n};\nexport { p as default };","map":{"version":3,"names":["p","AvatarGroup$1","u","className","c","avatarClassName","v","id","m","children","d","size","f","type","y","max","A","j","counterProps","P","counterTooltipCustomProps","C","counterTooltipIsVirtualizedList","T","g","removePadding","z","b","i","r","Array","isArray","displayAvatars","slice","map","o","t","a","cloneElement","Object","assign","key","props","e","l","avatarContainer","onClick","n","counterTooltipAvatars","G","N","avatarGroupContainer","noPadding","s","default"],"sources":["/Users/huynhmannguyen/Documents/GitHub/Huy_app/node_modules/monday-ui-react-core/src/components/AvatarGroup/AvatarGroup.tsx"],"sourcesContent":["import React, { ReactElement, useMemo } from \"react\";\nimport cx from \"classnames\";\nimport { AvatarProps } from \"../Avatar/Avatar\";\nimport AvatarGroupCounter from \"./AvatarGroupCounter\";\nimport VibeComponentProps from \"../../types/VibeComponentProps\";\nimport { AvatarSize, AvatarType } from \"../Avatar/AvatarConstants\";\nimport { CounterColor } from \"../Counter/CounterConstants\";\nimport { avatarOnClick } from \"./AvatarGroupHelper\";\nimport { TooltipProps } from \"../Tooltip/Tooltip\";\nimport styles from \"./AvatarGroup.module.scss\";\n\nexport type AvatarGroupCounterVisualProps = {\n  color?: CounterColor.LIGHT | CounterColor.DARK;\n  count?: number;\n  prefix?: string;\n  maxDigits?: number;\n  ariaLabelItemsName?: string;\n};\n\ninterface AvatarGroupProps extends VibeComponentProps {\n  avatarClassName?: string;\n  /**\n   * Array of `Avatar` components\n   */\n  children?: ReactElement<AvatarProps> | ReactElement<AvatarProps>[];\n  size?: AvatarSize;\n  type?: AvatarType;\n  max?: number;\n  /**\n   * 4 `Counter.props` for customization + ariaLabelItemsName for specifying the \"items\" name in aria label\n   */\n  counterProps?: AvatarGroupCounterVisualProps;\n  /**\n   * `Tooltip.props`: props for custom counter tooltip\n   */\n  counterTooltipCustomProps?: TooltipProps;\n  /**\n   * Using counter default tooltip virtualized list for rendering only visible items (performance optimization)\n   */\n  counterTooltipIsVirtualizedList?: boolean;\n  /**\n   * If true, padding will be removed from the container\n   */\n  // TODO remove this prop in the next major release, should be no padding by default\n  removePadding?: boolean;\n}\n\nconst AvatarGroup: React.FC<AvatarGroupProps> = ({\n  className,\n  avatarClassName,\n  id,\n  children,\n  size,\n  type,\n  max = 5,\n  counterProps,\n  counterTooltipCustomProps,\n  counterTooltipIsVirtualizedList = false,\n  removePadding = false\n}) => {\n  const { displayAvatars, counterTooltipAvatars } = useMemo(() => {\n    if (!children) {\n      return {};\n    }\n    const childrenArray = Array.isArray(children) ? children : [children];\n    return {\n      displayAvatars: childrenArray.slice(0, max).map((avatar, index) => {\n        return React.cloneElement(avatar, {\n          key: index,\n          ...avatar?.props,\n          size: size || avatar?.props?.size,\n          type: type || avatar?.props?.type,\n          className: cx(styles.avatarContainer, avatarClassName),\n          onClick: (event: React.MouseEvent | React.KeyboardEvent) => avatarOnClick(event, avatar.props)\n        });\n      }),\n      counterTooltipAvatars: childrenArray.slice(max)\n    };\n  }, [avatarClassName, children, max, size, type]);\n\n  if (!children) {\n    return null;\n  }\n\n  return (\n    <div className={cx(styles.avatarGroupContainer, className, { [styles.noPadding]: removePadding })} id={id}>\n      {displayAvatars}\n      <AvatarGroupCounter\n        counterTooltipAvatars={counterTooltipAvatars}\n        counterProps={counterProps}\n        counterTooltipCustomProps={counterTooltipCustomProps}\n        counterTooltipIsVirtualizedList={counterTooltipIsVirtualizedList}\n        size={size}\n        type={type}\n      />\n    </div>\n  );\n};\n\nexport default AvatarGroup;\n"],"mappings":";;;;;;;AA+CA,IAoDAA,CAAA,GApDgD,SAAAC,CAA/BD,CAAA;EAYZ,IAXHE,CAAA,GAASF,CAAA,CAATG,SAAA;IACAC,CAAA,GAAeJ,CAAA,CAAfK,eAAA;IACAC,CAAA,GAAEN,CAAA,CAAFO,EAAA;IACAC,CAAA,GAAQR,CAAA,CAARS,QAAA;IACAC,CAAA,GAAIV,CAAA,CAAJW,IAAA;IACAC,CAAA,GAAIZ,CAAA,CAAJa,IAAA;IAAIC,CAAA,GAAAd,CAAA,CACJe,GAAA;IAAAC,CAAA,QAAM,MAAHF,CAAA,GAAG,IAACA,CAAA;IACPG,CAAA,GAAYjB,CAAA,CAAZkB,YAAA;IACAC,CAAA,GAAyBnB,CAAA,CAAzBoB,yBAAA;IAAyBC,CAAA,GAAArB,CAAA,CACzBsB,+BAAA;IAAAC,CAAA,QAAkC,MAAHF,CAAA,IAAQA,CAAA;IAAAG,CAAA,GAAAxB,CAAA,CACvCyB,aAAA;IAAAC,CAAA,QAAgB,MAAHF,CAAA,IAAQA,CAAA;IAErBG,CAAA,GAAkDC,CAAA,CAAQ;MACxD,KAAKpB,CAAA,EACH,OAAO;MAET,IAAMqB,CAAA,GAAgBC,KAAA,CAAMC,OAAA,CAAQvB,CAAA,IAAYA,CAAA,GAAW,CAACA,CAAA;MAC5D,OAAO;QACLwB,cAAA,EAAgBH,CAAA,CAAcI,KAAA,CAAM,GAAGjB,CAAA,EAAKkB,GAAA,CAAI,UAACL,CAAA,EAAQM,CAAA;UAAA,IAAAC,CAAA,EAAAR,CAAA;UACvD,OAAOS,CAAA,CAAMC,YAAA,CAAaT,CAAA,EAAAU,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA;YACxBC,GAAA,EAAKN;UAAA,GACF,QAAAN,CAAA,YAAAA,CAAA,CAAQa,KAAA,GAAK;YAChB/B,IAAA,EAAMD,CAAA,eAAQ0B,CAAA,WAAAP,CAAA,YAAAA,CAAA,CAAQa,KAAA,gBAAAN,CAAA,YAAAA,CAAA,CAAOzB,IAAA;YAC7BE,IAAA,EAAMD,CAAA,KAAuB,UAAfgB,CAAA,WAAAC,CAAA,QAAM,IAANA,CAAA,CAAQa,KAAA,UAAO,MAAAd,CAAA,YAAAA,CAAA,CAAAf,IAAA;YAC7BV,SAAA,EAAWwC,CAAA,CAAGC,CAAA,CAAOC,eAAA,EAAiBzC,CAAA;YACtC0C,OAAA,EAAS,SAAAA,CAACX,CAAA;cAA6C,OAAKY,CAAA,CAAcZ,CAAA,EAAON,CAAA,CAAOa,KAAA,CAAM;YAAA;UAAA,GAElG;QAAA;QACAM,qBAAA,EAAuBnB,CAAA,CAAcI,KAAA,CAAMjB,CAAA;MAAA,CAE/C;IAAA,GAAG,CAACZ,CAAA,EAAiBI,CAAA,EAAUQ,CAAA,EAAKN,CAAA,EAAME,CAAA;IAlBlCqC,CAAA,GAActB,CAAA,CAAdK,cAAA;IAAgBkB,CAAA,GAAqBvB,CAAA,CAArBqB,qBAAA;EAoBxB,OAAKxC,CAAA,GAKH2B,CAAA,CAAK,OAAAI,MAAA,CAAAC,MAAA;IAAArC,SAAA,EAAWwC,CAAA,CAAGC,CAAA,CAAOO,oBAAA,EAAsBjD,CAAA,EAAS2B,CAAA,KAAKe,CAAA,CAAOQ,SAAA,EAAY1B,CAAA;IAAkBnB,EAAA,EAAID;EAAA,GAAE;IAAAG,QAAA,GACtGwC,CAAA,EACDb,CAAA,CAACiB,CAAA,EAAkB;MACjBL,qBAAA,EAAuBE,CAAA;MACvBhC,YAAA,EAAcD,CAAA;MACdG,yBAAA,EAA2BD,CAAA;MAC3BG,+BAAA,EAAiCC,CAAA;MACjCZ,IAAA,EAAMD,CAAA;MACNG,IAAA,EAAMD;IAAA;EAAA,MAZH,IAgBX;AAAA;AAAA,SAAAZ,CAAA,IAAAsD,OAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}