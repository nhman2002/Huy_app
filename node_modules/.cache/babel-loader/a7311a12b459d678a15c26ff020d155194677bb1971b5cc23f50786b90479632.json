{"ast":null,"code":"import { jsx as e } from \"react/jsx-runtime\";\nimport { camelCase as t } from \"lodash-es\";\nimport { getStyle as s } from \"../../helpers/typesciptCssModulesHelper.js\";\nimport o from \"classnames\";\nimport { forwardRef as r, useRef as i } from \"react\";\nimport a from \"../../hooks/useMergeRef.js\";\nimport { DialogType as d, DialogSize as l } from \"./DialogContentContainerConstants.js\";\nimport { withStaticProps as m } from \"../../types/withStaticProps.js\";\nimport { getTestId as n, ComponentDefaultTestId as p } from \"../../tests/testIds.js\";\nimport c from \"./DialogContentContainer.module.scss.js\";\nvar f = m(r(function (r, m) {\n  var f = r.className,\n    y = void 0 === f ? \"\" : f,\n    C = r.ariaLabelledby,\n    b = void 0 === C ? \"\" : C,\n    v = r.ariaDescribedby,\n    j = void 0 === v ? \"\" : v,\n    u = r.type,\n    g = void 0 === u ? d.POPOVER : u,\n    h = r.size,\n    N = void 0 === h ? l.MEDIUM : h,\n    O = r.children,\n    D = r.style,\n    E = r[\"data-testid\"],\n    I = void 0 === E ? n(p.DIALOG_CONTENT_CONTAINER, r.id) : E,\n    M = i(null),\n    z = a(m, M);\n  return e(\"div\", Object.assign({\n    role: \"dialog\",\n    \"data-testid\": I,\n    \"aria-labelledby\": b,\n    \"aria-describedby\": j,\n    ref: z,\n    style: D,\n    className: o(c.dialogContentContainer, y, s(c, t(\"type--\" + g)), s(c, t(\"size--\" + N)))\n  }, {\n    children: O\n  }));\n}), {\n  types: d,\n  sizes: l\n});\nexport { f as default };","map":{"version":3,"names":["f","m","r","className","y","C","ariaLabelledby","b","v","ariaDescribedby","j","u","type","g","d","POPOVER","h","size","N","l","MEDIUM","O","children","D","style","E","I","n","p","DIALOG_CONTENT_CONTAINER","id","M","i","z","a","e","Object","assign","role","ref","o","c","dialogContentContainer","s","t","types","sizes","default"],"sources":["/Users/huynhmannguyen/Documents/GitHub/Huy_app/node_modules/monday-ui-react-core/src/components/DialogContentContainer/DialogContentContainer.tsx"],"sourcesContent":["import { camelCase } from \"lodash-es\";\nimport { getStyle } from \"../../helpers/typesciptCssModulesHelper\";\nimport cx from \"classnames\";\nimport React, { useRef, forwardRef } from \"react\";\nimport useMergeRef from \"../../hooks/useMergeRef\";\nimport { DialogSize, DialogType } from \"./DialogContentContainerConstants\";\nimport { withStaticProps, VibeComponentProps, VibeComponent } from \"../../types\";\nimport { ComponentDefaultTestId, getTestId } from \"../../tests/test-ids-utils\";\nimport styles from \"./DialogContentContainer.module.scss\";\n\ninterface DialogContentContainerProps extends VibeComponentProps {\n  children?: React.ReactNode;\n  ariaLabelledby?: string;\n  ariaDescribedby?: string;\n  type?: DialogType;\n  size?: DialogSize;\n  style?: React.CSSProperties;\n}\n\nconst DialogContentContainer: VibeComponent<DialogContentContainerProps> & {\n  types?: typeof DialogType;\n  sizes?: typeof DialogSize;\n} = forwardRef(\n  (\n    {\n      id,\n      className = \"\",\n      ariaLabelledby = \"\",\n      ariaDescribedby = \"\",\n      type = DialogType.POPOVER,\n      size = DialogSize.MEDIUM,\n      children,\n      style,\n      \"data-testid\": dataTestId = getTestId(ComponentDefaultTestId.DIALOG_CONTENT_CONTAINER, id)\n    },\n    ref\n  ) => {\n    const componentRef = useRef(null);\n    const mergedRef = useMergeRef(ref, componentRef);\n\n    return (\n      <div\n        role=\"dialog\"\n        data-testid={dataTestId}\n        aria-labelledby={ariaLabelledby}\n        aria-describedby={ariaDescribedby}\n        ref={mergedRef}\n        style={style}\n        className={cx(\n          styles.dialogContentContainer,\n          className,\n          getStyle(styles, camelCase(\"type--\" + type)),\n          getStyle(styles, camelCase(\"size--\" + size))\n        )}\n      >\n        {children}\n      </div>\n    );\n  }\n);\n\nexport default withStaticProps(DialogContentContainer, {\n  types: DialogType,\n  sizes: DialogSize\n});\n"],"mappings":";;;;;;;;;;AAmBA,IA0CeA,CAAA,GAAAC,CAAA,CAvCXC,CAAA,CACF,UAAAA,CAAA,EAYED,CAAA;EACE,IAXED,CAAA,GAAAE,CAAA,CACFC,SAAA;IAAAC,CAAA,QAAY,MAAHJ,CAAA,GAAG,KAAEA,CAAA;IAAAK,CAAA,GAAAH,CAAA,CACdI,cAAA;IAAAC,CAAA,QAAiB,MAAHF,CAAA,GAAG,KAAEA,CAAA;IAAAG,CAAA,GAAAN,CAAA,CACnBO,eAAA;IAAAC,CAAA,QAAkB,MAAHF,CAAA,GAAG,KAAEA,CAAA;IAAAG,CAAA,GAAAT,CAAA,CACpBU,IAAA;IAAAC,CAAA,QAAI,MAAAF,CAAA,GAAGG,CAAA,CAAWC,OAAA,GAAOJ,CAAA;IAAAK,CAAA,GAAAd,CAAA,CACzBe,IAAA;IAAAC,CAAA,QAAI,MAAAF,CAAA,GAAGG,CAAA,CAAWC,MAAA,GAAMJ,CAAA;IACxBK,CAAA,GAAQnB,CAAA,CAARoB,QAAA;IACAC,CAAA,GAAKrB,CAAA,CAALsB,KAAA;IAAKC,CAAA,GAAAvB,CAAA,CACL;IAAewB,CAAA,QAAa,MAAHD,CAAA,GAAGE,CAAA,CAAUC,CAAA,CAAuBC,wBAAA,EAR3D3B,CAAA,CAAF4B,EAAA,IAQ0FL,CAAA;IAItFM,CAAA,GAAeC,CAAA,CAAO;IACtBC,CAAA,GAAYC,CAAA,CAAYjC,CAAA,EAAK8B,CAAA;EAEnC,OACEI,CAAA,CACE,OAAAC,MAAA,CAAAC,MAAA;IAAAC,IAAA,EAAK;IACQ,eAAAZ,CAAA;IACI,mBAAAnB,CAAA;IACC,oBAAAG,CAAA;IAClB6B,GAAA,EAAKN,CAAA;IACLT,KAAA,EAAOD,CAAA;IACPpB,SAAA,EAAWqC,CAAA,CACTC,CAAA,CAAOC,sBAAA,EACPtC,CAAA,EACAuC,CAAA,CAASF,CAAA,EAAQG,CAAA,CAAU,WAAW/B,CAAA,IACtC8B,CAAA,CAASF,CAAA,EAAQG,CAAA,CAAU,WAAW1B,CAAA;EAAA,GAGvC;IAAAI,QAAA,EAAAD;EAAA,GAGP;AAAA,IAGqD;EACrDwB,KAAA,EAAO/B,CAAA;EACPgC,KAAA,EAAO3B;AAAA;AAAA,SAAAnB,CAAA,IAAA+C,OAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}