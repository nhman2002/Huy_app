{"ast":null,"code":"import { slicedToArray as e, defineProperty as o } from \"../../../_virtual/_rollupPluginBabelHelpers.js\";\nimport { jsxs as i, jsx as t } from \"react/jsx-runtime\";\nimport { forwardRef as s, useRef as r, useMemo as a, useCallback as l } from \"react\";\nimport n from \"classnames\";\nimport c from \"../Icon/Icon.js\";\nimport d from \"../../hooks/useMergeRef.js\";\nimport m from \"../Icon/Icons/components/CloseSmall.js\";\nimport { getCSSVar as p } from \"../../services/themes.js\";\nimport { ElementAllowedColor as u, getElementColor as v } from \"../../utils/colors-vars-map.js\";\nimport f from \"../Avatar/Avatar.js\";\nimport b from \"../IconButton/IconButton.js\";\nimport h from \"../Text/Text.js\";\nimport { getTestId as j, ComponentDefaultTestId as g } from \"../../tests/testIds.js\";\nimport { AvatarType as y } from \"../Avatar/AvatarConstants.js\";\nimport { withStaticProps as T } from \"../../types/withStaticProps.js\";\nimport C from \"../../hooks/useHover/useHover.js\";\nimport N from \"../../hooks/useSetFocus/index.js\";\nimport k from \"../../hooks/useClickableProps/useClickableProps.js\";\nimport { backwardCompatibilityForProperties as I } from \"../../helpers/backwardCompatibilityForProperties.js\";\nimport O from \"./Chips.module.scss.js\";\nvar A = s(function (s, u) {\n    var T = s.className,\n      S = s.avatarClassName,\n      w = s.iconClassName,\n      P = s.id,\n      R = s.label,\n      x = void 0 === R ? \"\" : R,\n      B = s.leftIcon,\n      M = void 0 === B ? null : B,\n      z = s.rightIcon,\n      F = void 0 === z ? null : z,\n      H = s.leftAvatar,\n      _ = void 0 === H ? null : H,\n      D = s.rightAvatar,\n      L = void 0 === D ? null : D,\n      X = s.disabled,\n      E = void 0 !== X && X,\n      G = s.readOnly,\n      Y = void 0 !== G && G,\n      U = s.allowTextSelection,\n      q = void 0 !== U && U,\n      J = s.color,\n      K = void 0 === J ? A.colors.PRIMARY : J,\n      Q = s.iconSize,\n      V = void 0 === Q ? 18 : Q,\n      W = s.onDelete,\n      Z = void 0 === W ? function (e, o) {} : W,\n      $ = s.onMouseDown,\n      ee = s.onClick,\n      oe = s.noAnimation,\n      ie = void 0 === oe || oe,\n      te = s.ariaLabel,\n      se = s.disableClickableBehavior,\n      re = void 0 !== se && se,\n      ae = s.leftAvatarType,\n      le = void 0 === ae ? y.IMG : ae,\n      ne = s.rightAvatarType,\n      ce = void 0 === ne ? y.IMG : ne,\n      de = s.showBorder,\n      me = void 0 !== de && de,\n      pe = s.leftRenderer,\n      ue = s.rightRenderer,\n      ve = s.closeButtonAriaLabel,\n      fe = void 0 === ve ? \"Remove\" : ve,\n      be = I([s[\"data-testid\"], s.dataTestId], j(g.CHIP, P)),\n      he = !(!ee && !$ || re),\n      je = !Y && !E,\n      ge = te || \"string\" == typeof x && x || \"\",\n      ye = r(null),\n      Te = r(null),\n      Ce = C(),\n      Ne = e(Ce, 2),\n      ke = Ne[0],\n      Ie = Ne[1],\n      Oe = N({\n        ref: Te\n      }).isFocused,\n      Ae = d(u, Te, ke),\n      Se = n(O.chips, T, o(o(o(o(o({}, O.disabled, E), O.withClose, je), O.noAnimation, ie), O.withUserSelect, q), O.border, me)),\n      we = n(O.clickable, Se, o(o({}, O.disabled, E), O.disableTextSelection, !q)),\n      Pe = a(function () {\n        return {\n          backgroundColor: E ? p(\"disabled-background-color\") : he && (Ie || Oe) ? v(K, !0, !0) : v(K, !0)\n        };\n      }, [E, he, Ie, Oe, K]),\n      Re = l(function (e) {\n        e.stopPropagation(), Z && Z(P, e);\n      }, [P, Z]),\n      xe = l(function (e) {\n        void 0 !== ee && e.target !== ye.current && (e.preventDefault(), ee(e));\n      }, [ee]),\n      Be = k({\n        onClick: xe,\n        onMouseDown: $,\n        disabled: E,\n        id: P,\n        \"data-testid\": be,\n        ariaLabel: ge,\n        ariaHidden: !1,\n        ariaHasPopup: !1,\n        ariaExpanded: !1\n      }, Ae),\n      Me = he ? Object.assign(Object.assign({}, Be), {\n        ref: Be.ref,\n        className: we,\n        style: Pe\n      }) : {\n        className: Se,\n        \"aria-label\": ge,\n        style: Pe,\n        ref: Ae,\n        onClick: xe,\n        onMouseDown: $,\n        id: P,\n        \"data-testid\": be\n      },\n      ze = le === y.TEXT ? {\n        text: _\n      } : {\n        src: _\n      },\n      Fe = le === y.TEXT ? {\n        text: L\n      } : {\n        src: L\n      };\n    return i(\"div\", Object.assign({}, Me, {\n      children: [_ ? t(f, Object.assign({\n        withoutBorder: !0,\n        className: n(O.avatar, O.left, S),\n        customSize: 20,\n        type: le\n      }, ze), P) : null, M ? t(c, {\n        className: n(O.icon, O.left, w),\n        iconType: c.type.ICON_FONT,\n        clickable: !1,\n        icon: M,\n        iconSize: V,\n        ignoreFocusStyle: !0\n      }) : null, pe && t(\"div\", Object.assign({\n        className: n(O.customRenderer, O.left)\n      }, {\n        children: pe\n      })), t(h, Object.assign({\n        type: h.types.TEXT2,\n        className: O.label\n      }, {\n        children: x\n      })), F ? t(c, {\n        className: n(O.icon, O.right, w),\n        iconType: c.type.ICON_FONT,\n        clickable: !1,\n        icon: F,\n        iconSize: V,\n        ignoreFocusStyle: !0\n      }) : null, L ? t(f, Object.assign({\n        withoutBorder: !0,\n        className: n(O.avatar, O.right, S),\n        customSize: 20,\n        type: ce\n      }, Fe), P) : null, ue && t(\"div\", Object.assign({\n        className: n(O.customRenderer, O.right)\n      }, {\n        children: ue\n      })), je && t(b, {\n        size: b.sizes.XXS,\n        color: b.colors.ON_PRIMARY_COLOR,\n        className: n(O.icon, O.close),\n        ariaLabel: fe,\n        hideTooltip: !0,\n        icon: m,\n        onClick: Re,\n        \"data-testid\": \"\".concat(be, \"-close\"),\n        ref: ye\n      })]\n    }));\n  }),\n  S = T(A, {\n    colors: u,\n    avatarTypes: y\n  });\nexport { S as default };","map":{"version":3,"names":["A","s","u","T","className","S","avatarClassName","w","iconClassName","P","id","R","label","x","B","leftIcon","M","z","rightIcon","F","H","leftAvatar","_","D","rightAvatar","L","X","disabled","E","G","readOnly","Y","U","allowTextSelection","q","J","color","K","colors","PRIMARY","Q","iconSize","V","W","onDelete","Z","e","o","$","onMouseDown","ee","onClick","oe","noAnimation","ie","te","ariaLabel","se","disableClickableBehavior","re","ae","leftAvatarType","le","y","IMG","ne","rightAvatarType","ce","de","showBorder","me","pe","leftRenderer","ue","rightRenderer","ve","closeButtonAriaLabel","fe","be","I","dataTestId","j","g","CHIP","he","je","ge","ye","r","Te","Ce","C","Ne","ke","Ie","Oe","N","ref","isFocused","Ae","d","Se","n","O","chips","withClose","withUserSelect","border","we","clickable","disableTextSelection","Pe","a","backgroundColor","p","v","Re","l","stopPropagation","xe","target","current","preventDefault","Be","k","ariaHidden","ariaHasPopup","ariaExpanded","Me","Object","assign","style","ze","TEXT","text","src","Fe","i","children","t","f","withoutBorder","avatar","left","customSize","type","c","icon","iconType","ICON_FONT","ignoreFocusStyle","customRenderer","h","types","TEXT2","right","b","size","sizes","XXS","ON_PRIMARY_COLOR","close","hideTooltip","m","concat","avatarTypes","default"],"sources":["/Users/huynhmannguyen/Documents/GitHub/Huy_app/node_modules/monday-ui-react-core/src/components/Chips/Chips.tsx"],"sourcesContent":["import React, { forwardRef, RefObject, useCallback, useMemo, useRef } from \"react\";\nimport cx from \"classnames\";\nimport Icon from \"../Icon/Icon\";\nimport useMergeRef from \"../../hooks/useMergeRef\";\nimport CloseSmall from \"../Icon/Icons/components/CloseSmall\";\nimport { getCSSVar } from \"../../services/themes\";\nimport { ElementAllowedColor, ElementColor, getElementColor } from \"../../utils/colors-vars-map\";\nimport Avatar from \"../Avatar/Avatar\";\nimport IconButton from \"../IconButton/IconButton\";\nimport Text from \"../Text/Text\";\nimport { ComponentDefaultTestId, getTestId } from \"../../tests/test-ids-utils\";\nimport { AvatarType } from \"../Avatar/AvatarConstants\";\nimport { ElementContent, SubIcon, VibeComponent, VibeComponentProps, withStaticProps } from \"../../types\";\nimport useHover from \"../../hooks/useHover/useHover\";\nimport useSetFocus from \"../../hooks/useSetFocus\";\nimport useClickableProps from \"../../hooks/useClickableProps/useClickableProps\";\nimport { backwardCompatibilityForProperties } from \"../../helpers/backwardCompatibilityForProperties\";\nimport styles from \"./Chips.module.scss\";\n\nconst CHIPS_AVATAR_SIZE = 20;\n\ninterface ChipsProps extends VibeComponentProps {\n  label?: ElementContent;\n  disabled?: boolean;\n  readOnly?: boolean;\n  /**\n   * @deprecated - use \"data-testid\" instead\n   */\n  dataTestId?: string;\n  \"data-testid\"?: string;\n  /**\n   * A React element that is positioned to the right of the text\n   */\n  rightRenderer?: ElementContent;\n  /**\n   * A React element that is positioned to the left of the text\n   */\n  leftRenderer?: ElementContent;\n  /** Icon to place on the right */\n  rightIcon?: SubIcon;\n  /** Icon to place on the left */\n  leftIcon?: SubIcon;\n  /** Img to place as avatar on the right */\n  rightAvatar?: string;\n  /** the type of right avatar */\n  rightAvatarType?: AvatarType;\n  /** Img to place as avatar on the left */\n  leftAvatar?: string;\n  /** the type of left avatar */\n  leftAvatarType?: AvatarType;\n  /** ClassName for left or right icon */\n  iconClassName?: string;\n  /** ClassName for left or right avatar */\n  avatarClassName?: string;\n  // TODO Vibe 3.0: filter ElementAllowedColor.DARK_INDIGO, ElementAllowedColor.BLACKISH from colors which are valid for Chips\n  color?: ElementColor;\n  /** Size for font icon */\n  iconSize?: number | string;\n  onDelete?: (id: string, event: React.MouseEvent<HTMLSpanElement>) => void;\n  /**\n   * Disables the Chip's entry animation\n   */\n  noAnimation?: boolean;\n  /**\n   * Allow user to select text\n   */\n  allowTextSelection?: boolean;\n  /**\n   * Callback function to be called when the user clicks the component.\n   */\n  onMouseDown?: (event: React.MouseEvent<HTMLDivElement, MouseEvent>) => void;\n  /**\n   * Callback function to be called when the user clicks the component.\n   */\n  onClick?: (event: React.MouseEvent<HTMLDivElement, MouseEvent>) => void;\n  /**\n   * Applies when element has onClick or onMouseDown props\n   */\n  ariaLabel?: string;\n  /**\n   * Deprecated, there is no need to use this prop for implementing clickable chips. Please use onClick for this purpose.\n   * @deprecated\n   */\n  clickable?: boolean;\n  /**\n   * Deprecated, there is no need to use this prop for implementing clickable chips. Please use onClick for this purpose.\n   * @deprecated\n   */\n  isClickable?: boolean;\n  /**\n   * Disable click behaviors\n   */\n  disableClickableBehavior?: boolean;\n  /**\n   * Show border, the border color is `--text-color-on-primary`, should be when the chip is a colored background like\n   * selected-color\n   */\n  showBorder?: boolean;\n  closeButtonAriaLabel?: string;\n}\n\nconst Chips: VibeComponent<ChipsProps, HTMLDivElement> & {\n  colors?: typeof ElementAllowedColor;\n  avatarTypes?: typeof AvatarType;\n} = forwardRef<HTMLDivElement, ChipsProps>(\n  (\n    {\n      className,\n      avatarClassName,\n      iconClassName,\n      id,\n      label = \"\",\n      leftIcon = null,\n      rightIcon = null,\n      leftAvatar = null,\n      rightAvatar = null,\n      disabled = false,\n      readOnly = false,\n      allowTextSelection = false,\n      color = Chips.colors.PRIMARY,\n      iconSize = 18,\n      onDelete = (_id: string, _e: React.MouseEvent<HTMLSpanElement>) => {},\n      onMouseDown,\n      onClick,\n      noAnimation = true,\n      ariaLabel,\n      dataTestId: backwardCompatabilityDataTestId,\n      \"data-testid\": dataTestId,\n      disableClickableBehavior = false,\n      leftAvatarType = AvatarType.IMG,\n      rightAvatarType = AvatarType.IMG,\n      showBorder = false,\n      leftRenderer,\n      rightRenderer,\n      closeButtonAriaLabel = \"Remove\"\n    },\n    ref\n  ) => {\n    const overrideDataTestId = backwardCompatibilityForProperties(\n      [dataTestId, backwardCompatabilityDataTestId],\n      getTestId(ComponentDefaultTestId.CHIP, id)\n    );\n    const hasClickableWrapper = (!!onClick || !!onMouseDown) && !disableClickableBehavior;\n    const hasCloseButton = !readOnly && !disabled;\n    const overrideAriaLabel = ariaLabel || (typeof label === \"string\" && label) || \"\";\n\n    const iconButtonRef = useRef(null);\n    const componentRef = useRef(null);\n\n    const [hoverRef, isHovered] = useHover<HTMLDivElement>();\n    const { isFocused } = useSetFocus({ ref: componentRef });\n\n    const mergedRef = useMergeRef<HTMLDivElement>(ref, componentRef, hoverRef);\n\n    const overrideClassName = cx(styles.chips, className, {\n      [styles.disabled]: disabled,\n      [styles.withClose]: hasCloseButton,\n      [styles.noAnimation]: noAnimation,\n      [styles.withUserSelect]: allowTextSelection,\n      [styles.border]: showBorder\n    });\n    const clickableClassName = cx(styles.clickable, overrideClassName, {\n      [styles.disabled]: disabled,\n      [styles.disableTextSelection]: !allowTextSelection\n    });\n\n    const backgroundColorStyle = useMemo(() => {\n      let cssVar;\n      if (disabled) {\n        cssVar = getCSSVar(\"disabled-background-color\");\n      } else if (hasClickableWrapper && (isHovered || isFocused)) {\n        cssVar = getElementColor(color, true, true);\n      } else {\n        cssVar = getElementColor(color, true);\n      }\n      return { backgroundColor: cssVar };\n    }, [disabled, hasClickableWrapper, isHovered, isFocused, color]);\n\n    const onDeleteCallback = useCallback(\n      (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\n        e.stopPropagation();\n        if (onDelete) {\n          onDelete(id, e);\n        }\n      },\n      [id, onDelete]\n    );\n\n    const onClickCallback = useCallback(\n      (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n        if (onClick !== undefined && (e.target as HTMLElement) !== iconButtonRef.current) {\n          e.preventDefault();\n          onClick(e);\n        }\n      },\n      [onClick]\n    );\n\n    const clickableProps = useClickableProps(\n      {\n        onClick: onClickCallback,\n        onMouseDown,\n        disabled,\n        id,\n        \"data-testid\": overrideDataTestId,\n        ariaLabel: overrideAriaLabel,\n        ariaHidden: false,\n        ariaHasPopup: false,\n        ariaExpanded: false\n      },\n      mergedRef\n    );\n    const wrapperProps = hasClickableWrapper\n      ? {\n          ...clickableProps,\n          ref: clickableProps.ref as RefObject<HTMLDivElement>,\n          className: clickableClassName,\n          style: backgroundColorStyle\n        }\n      : {\n          className: overrideClassName,\n          \"aria-label\": overrideAriaLabel,\n          style: backgroundColorStyle,\n          ref: mergedRef,\n          onClick: onClickCallback,\n          onMouseDown,\n          id: id,\n          \"data-testid\": overrideDataTestId\n        };\n\n    const leftAvatarProps = leftAvatarType === AvatarType.TEXT ? { text: leftAvatar } : { src: leftAvatar };\n    const rightAvatarProps = leftAvatarType === AvatarType.TEXT ? { text: rightAvatar } : { src: rightAvatar };\n\n    return (\n      <div {...wrapperProps}>\n        {leftAvatar ? (\n          <Avatar\n            withoutBorder\n            className={cx(styles.avatar, styles.left, avatarClassName)}\n            customSize={CHIPS_AVATAR_SIZE}\n            type={leftAvatarType}\n            key={id}\n            {...leftAvatarProps}\n          />\n        ) : null}\n        {leftIcon ? (\n          <Icon\n            className={cx(styles.icon, styles.left, iconClassName)}\n            iconType={Icon.type.ICON_FONT}\n            clickable={false}\n            icon={leftIcon}\n            iconSize={iconSize}\n            ignoreFocusStyle\n          />\n        ) : null}\n        {leftRenderer && <div className={cx(styles.customRenderer, styles.left)}>{leftRenderer}</div>}\n        <Text type={Text.types.TEXT2} className={styles.label}>\n          {label}\n        </Text>\n        {rightIcon ? (\n          <Icon\n            className={cx(styles.icon, styles.right, iconClassName)}\n            iconType={Icon.type.ICON_FONT}\n            clickable={false}\n            icon={rightIcon}\n            iconSize={iconSize}\n            ignoreFocusStyle\n          />\n        ) : null}\n        {rightAvatar ? (\n          <Avatar\n            withoutBorder\n            className={cx(styles.avatar, styles.right, avatarClassName)}\n            customSize={CHIPS_AVATAR_SIZE}\n            type={rightAvatarType}\n            key={id}\n            {...rightAvatarProps}\n          />\n        ) : null}\n        {rightRenderer && <div className={cx(styles.customRenderer, styles.right)}>{rightRenderer}</div>}\n        {hasCloseButton && (\n          <IconButton\n            size={IconButton.sizes.XXS}\n            color={IconButton.colors.ON_PRIMARY_COLOR}\n            className={cx(styles.icon, styles.close)}\n            ariaLabel={closeButtonAriaLabel}\n            hideTooltip\n            icon={CloseSmall}\n            onClick={onDeleteCallback}\n            data-testid={`${overrideDataTestId}-close`}\n            ref={iconButtonRef}\n          />\n        )}\n      </div>\n    );\n  }\n);\n\nexport default withStaticProps(Chips, {\n  colors: ElementAllowedColor,\n  avatarTypes: AvatarType\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}