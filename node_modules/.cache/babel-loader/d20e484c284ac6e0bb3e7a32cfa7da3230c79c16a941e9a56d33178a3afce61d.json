{"ast":null,"code":"import { defineProperty as r } from \"../../../../_virtual/_rollupPluginBabelHelpers.js\";\nimport { jsx as i } from \"react/jsx-runtime\";\nimport { getTestId as e, ComponentDefaultTestId as t } from \"../../../tests/testIds.js\";\nimport o from \"classnames\";\nimport { useRef as s } from \"react\";\nimport a from \"../../../hooks/useIsOverflowing/useIsOverflowing.js\";\nimport l from \"../../Tooltip/Tooltip.js\";\nimport { backwardCompatibilityForProperties as m } from \"../../../helpers/backwardCompatibilityForProperties.js\";\nimport { BreadcrumbContent as d } from \"./BreadcrumbContent/BreadcrumbContent.js\";\nimport n from \"./BreadcrumbItem.module.scss.js\";\nimport { HideShowEvent as c } from \"../../../constants/dialog.js\";\nvar p = [c.MOUSE_ENTER],\n  f = [c.MOUSE_LEAVE],\n  u = function (c) {\n    var u = c.className,\n      b = c.text,\n      g = void 0 === b ? \"\" : b,\n      j = c.isClickable,\n      C = void 0 !== j && j,\n      k = c.link,\n      v = c.onClick,\n      E = c.isCurrent,\n      h = void 0 !== E && E,\n      B = c.icon,\n      I = c.id,\n      O = c[\"data-testid\"],\n      T = m([c.disabled, c.isDisabled], !1),\n      w = s(null),\n      _ = a({\n        ref: w\n      });\n    return i(l, Object.assign({\n      disableDialogSlide: !0,\n      withoutDialog: !1,\n      content: _ && g,\n      showTrigger: p,\n      hideTrigger: f\n    }, {\n      children: i(\"li\", Object.assign({\n        id: I,\n        \"data-testid\": O || e(t.BREADCRUMB_ITEM, I),\n        className: o(n.breadcrumbItemWrapper, u, r({}, n.disabled, T))\n      }, {\n        children: i(d, {\n          ref: w,\n          isClickable: C,\n          link: k,\n          onClick: v,\n          text: g,\n          icon: B,\n          isCurrent: h,\n          disabled: T\n        })\n      }))\n    }));\n  };\nexport { u as default };","map":{"version":3,"names":["p","c","MOUSE_ENTER","f","MOUSE_LEAVE","u","BreadcrumbItem$1","className","b","text","g","j","isClickable","C","k","link","v","onClick","E","isCurrent","h","B","icon","I","id","O","T","m","disabled","isDisabled","w","s","_","a","ref","i","l","Object","assign","disableDialogSlide","withoutDialog","content","showTrigger","hideTrigger","children","e","t","BREADCRUMB_ITEM","o","n","breadcrumbItemWrapper","r","d","default"],"sources":["/Users/huynhmannguyen/Documents/GitHub/Huy_app/node_modules/monday-ui-react-core/src/components/BreadcrumbsBar/BreadcrumbItem/BreadcrumbItem.tsx"],"sourcesContent":["import { ComponentDefaultTestId, getTestId } from \"../../../tests/test-ids-utils\";\nimport cx from \"classnames\";\nimport React, { useRef } from \"react\";\nimport useIsOverflowing from \"../../../hooks/useIsOverflowing/useIsOverflowing\";\nimport Tooltip from \"../../../components/Tooltip/Tooltip\";\nimport { backwardCompatibilityForProperties } from \"../../../helpers/backwardCompatibilityForProperties\";\nimport { BreadcrumbContent } from \"./BreadcrumbContent/BreadcrumbContent\";\nimport { HideShowEvent } from \"../../../constants\";\nimport { SubIcon, VibeComponentProps } from \"../../../types\";\nimport styles from \"./BreadcrumbItem.module.scss\";\n\nconst MOUSEENTER = [HideShowEvent.MOUSE_ENTER];\nconst MOUSELEAVE = [HideShowEvent.MOUSE_LEAVE];\n\nexport interface BreadcrumbItemProps extends VibeComponentProps {\n  /** The display text. */\n  text?: string;\n  /** Should item be disabled. */\n  disabled?: boolean;\n  /**\n   * @deprecated - use disabled instead\n   */\n  isDisabled?: boolean;\n  /** Should item be clickable - this should be recieved from the breadcrumbsBar ( Navigation/Indication bar ). */\n  isClickable?: boolean;\n  /** If the item is clickable and the type of navigation is a link, this is the link */\n  link?: string;\n  /** If the item is clickable and the type of navigation is a function, this is the function */\n  onClick?: () => void;\n  /** Should be the current Item - mainly effects the item`s style. */\n  isCurrent?: boolean;\n  /** An Icon - If no icon needed then should be left empty. */\n  icon?: SubIcon;\n}\n\nconst BreadcrumbItem: React.FC<BreadcrumbItemProps> = ({\n  className,\n  text = \"\",\n  disabled,\n  // Backward compatibility for props naming\n  isDisabled,\n  isClickable = false,\n  link,\n  onClick,\n  isCurrent = false,\n  icon,\n  id,\n  \"data-testid\": dataTestId\n}) => {\n  const overrideDisabled = backwardCompatibilityForProperties([disabled, isDisabled], false) as boolean;\n  const componentRef = useRef<HTMLSpanElement>(null);\n  const isOverflowing = useIsOverflowing({ ref: componentRef });\n\n  return (\n    <Tooltip\n      disableDialogSlide={true}\n      withoutDialog={false}\n      content={isOverflowing && text}\n      showTrigger={MOUSEENTER}\n      hideTrigger={MOUSELEAVE}\n    >\n      <li\n        id={id}\n        data-testid={dataTestId || getTestId(ComponentDefaultTestId.BREADCRUMB_ITEM, id)}\n        className={cx(styles.breadcrumbItemWrapper, className, {\n          [styles.disabled]: overrideDisabled\n        })}\n      >\n        <BreadcrumbContent\n          ref={componentRef}\n          isClickable={isClickable}\n          link={link}\n          onClick={onClick}\n          text={text}\n          icon={icon}\n          isCurrent={isCurrent}\n          disabled={overrideDisabled}\n        />\n      </li>\n    </Tooltip>\n  );\n};\n\nexport default BreadcrumbItem;\n"],"mappings":";;;;;;;;;;;AAWA,IAAMA,CAAA,GAAa,CAACC,CAAA,CAAcC,WAAA;EAC5BC,CAAA,GAAa,CAACF,CAAA,CAAcG,WAAA;EAuElCC,CAAA,GAhDsD,SAAAC,CAAlCL,CAAA;IAaf,IAZHI,CAAA,GAASJ,CAAA,CAATM,SAAA;MAASC,CAAA,GAAAP,CAAA,CACTQ,IAAA;MAAAC,CAAA,QAAO,MAAHF,CAAA,GAAG,KAAEA,CAAA;MAGCG,CAAA,GAAAV,CAAA,CACVW,WAAA;MAAAC,CAAA,QAAc,MAAHF,CAAA,IAAQA,CAAA;MACnBG,CAAA,GAAIb,CAAA,CAAJc,IAAA;MACAC,CAAA,GAAOf,CAAA,CAAPgB,OAAA;MAAOC,CAAA,GAAAjB,CAAA,CACPkB,SAAA;MAAAC,CAAA,QAAY,MAAHF,CAAA,IAAQA,CAAA;MACjBG,CAAA,GAAIpB,CAAA,CAAJqB,IAAA;MACAC,CAAA,GAAEtB,CAAA,CAAFuB,EAAA;MACeC,CAAA,GAAUxB,CAAA,CAAzB;MAEMyB,CAAA,GAAmBC,CAAA,CAAmC,CAXpD1B,CAAA,CAAR2B,QAAA,EAEU3B,CAAA,CAAV4B,UAAA,IASoF;MAC9EC,CAAA,GAAeC,CAAA,CAAwB;MACvCC,CAAA,GAAgBC,CAAA,CAAiB;QAAEC,GAAA,EAAKJ;MAAA;IAE9C,OACEK,CAAA,CAACC,CAAA,EAAOC,MAAA,CAAAC,MAAA;MACNC,kBAAA,GAAoB;MACpBC,aAAA,GAAe;MACfC,OAAA,EAAST,CAAA,IAAiBtB,CAAA;MAC1BgC,WAAA,EAAa1C,CAAA;MACb2C,WAAA,EAAaxC;IAAA;MAAAyC,QAAA,EAEbT,CAAA,CACE,MAAAE,MAAA,CAAAC,MAAA;QAAAd,EAAA,EAAID,CAAA;QACS,eAAAE,CAAA,IAAcoB,CAAA,CAAUC,CAAA,CAAuBC,eAAA,EAAiBxB,CAAA;QAC7EhB,SAAA,EAAWyC,CAAA,CAAGC,CAAA,CAAOC,qBAAA,EAAuB7C,CAAA,EAAS8C,CAAA,KAClDF,CAAA,CAAOrB,QAAA,EAAWF,CAAA;MAAA;QAAAkB,QAAA,EAGrBT,CAAA,CAACiB,CAAA,EACC;UAAAlB,GAAA,EAAKJ,CAAA;UACLlB,WAAA,EAAaC,CAAA;UACbE,IAAA,EAAMD,CAAA;UACNG,OAAA,EAASD,CAAA;UACTP,IAAA,EAAMC,CAAA;UACNY,IAAA,EAAMD,CAAA;UACNF,SAAA,EAAWC,CAAA;UACXQ,QAAA,EAAUF;QAAA;MAAA;IAAA,GAKpB;EAAA;AAAA,SAAArB,CAAA,IAAAgD,OAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}