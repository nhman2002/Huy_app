{"ast":null,"code":"import { defineProperty as i } from \"../../../_virtual/_rollupPluginBabelHelpers.js\";\nimport { jsx as t } from \"react/jsx-runtime\";\nimport { getTestId as e, ComponentDefaultTestId as r } from \"../../tests/testIds.js\";\nimport o from \"classnames\";\nimport { forwardRef as s, useRef as l, useMemo as n, useLayoutEffect as a } from \"react\";\nimport p from \"../Tooltip/Tooltip.js\";\nimport m from \"../../hooks/useIsOverflowing/useIsOverflowing.js\";\nimport c from \"../../hooks/useMergeRef.js\";\nimport d from \"./TextWithHighlight.module.scss.js\";\nvar g = function (i, e, r) {\n    var s = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : \"em\",\n      l = arguments.length > 4 ? arguments[4] : void 0,\n      n = s;\n    return r ? t(n, Object.assign({\n      className: o(d.highlightText, l)\n    }, {\n      children: i\n    }), e) : t(\"span\", {\n      children: i\n    }, e);\n  },\n  h = s(function (s, h) {\n    var f = s.className,\n      u = s.id,\n      v = s.text,\n      T = void 0 === v ? \"\" : v,\n      j = s.highlightTerm,\n      x = s.limit,\n      H = s.useEllipsis,\n      w = void 0 === H || H,\n      E = s.linesToClamp,\n      I = void 0 === E ? 3 : E,\n      O = s.ignoreCase,\n      b = void 0 === O || O,\n      N = s.allowTermSplit,\n      P = void 0 === N || N,\n      W = s.nonEllipsisTooltip,\n      _ = s.tooltipPosition,\n      y = s.wrappingTextTag,\n      C = void 0 === y ? \"em\" : y,\n      k = s.wrappingElementClassName,\n      G = s[\"data-testid\"],\n      R = l(null),\n      B = c(h, R),\n      L = n(function () {\n        if (!T || !j || 0 === x) return T;\n        var i = j;\n        P && (i = j.split(\" \").join(\"|\"));\n        for (var t = T.split(RegExp(\"(\".concat(i, \")\"), b ? \"i\" : \"\")), e = [], r = 0, o = 0, s = 0; t.length > s; s++) if (t[s]) {\n          var l = s % 2 == 1;\n          e.push(g(t[s], o++, l && (!x || 0 > x || x > r), C, k)), l && r++;\n        }\n        return e;\n      }, [T, j, x, b, P, C, k]),\n      M = m({\n        ref: w && R\n      });\n    a(function () {\n      R.current && R.current.style.setProperty(\"--heading-clamp-lines\", \"\" + I);\n    }, [R, I]);\n    var S = t(\"div\", Object.assign({\n      ref: B,\n      className: o(d.textWithHighlightWrapper, f, i({}, d.withEllipsis, w)),\n      id: u,\n      \"data-testid\": G || e(r.TEXT_WITH_HIGHLIGHT, u)\n    }, {\n      children: L\n    }));\n    return M || W ? t(p, Object.assign({\n      content: M ? T : W,\n      position: _\n    }, {\n      children: S\n    })) : S;\n  });\nexport { h as default };","map":{"version":3,"names":["g","getTextPart","i","e","r","s","arguments","length","l","n","t","Object","assign","className","o","d","highlightText","children","h","f","u","id","v","text","T","j","highlightTerm","x","limit","H","useEllipsis","w","E","linesToClamp","I","O","ignoreCase","b","N","allowTermSplit","P","W","nonEllipsisTooltip","_","tooltipPosition","y","wrappingTextTag","C","k","wrappingElementClassName","G","R","B","c","L","split","join","RegExp","concat","push","M","m","ref","a","current","style","setProperty","S","textWithHighlightWrapper","withEllipsis","TEXT_WITH_HIGHLIGHT","p","content","position","default"],"sources":["/Users/huynhmannguyen/Documents/GitHub/Huy_app/node_modules/monday-ui-react-core/src/components/TextWithHighlight/TextWithHighlight.tsx"],"sourcesContent":["import { ComponentDefaultTestId, getTestId } from \"../../tests/test-ids-utils\";\nimport cx from \"classnames\";\nimport React, { forwardRef, useLayoutEffect, useMemo, useRef } from \"react\";\nimport Tooltip from \"../../components/Tooltip/Tooltip\";\nimport useIsOverflowing from \"../../hooks/useIsOverflowing/useIsOverflowing\";\nimport useMergeRef from \"../../hooks/useMergeRef\";\nimport VibeComponentProps from \"../../types/VibeComponentProps\";\nimport { DialogPosition } from \"../../constants\";\nimport styles from \"./TextWithHighlight.module.scss\";\n\nconst getTextPart = (\n  text: string,\n  key: number,\n  shouldHighlight: boolean,\n  wrappingTextTag: keyof JSX.IntrinsicElements = \"em\",\n  wrappingElementClassName: string\n) => {\n  const WrappingElement = wrappingTextTag;\n  if (shouldHighlight) {\n    return (\n      <WrappingElement className={cx(styles.highlightText, wrappingElementClassName)} key={key}>\n        {text}\n      </WrappingElement>\n    );\n  }\n  return <span key={key}>{text}</span>;\n};\n\nexport interface TextWithHighlightProps extends VibeComponentProps {\n  /** Text to wrap */\n  text?: string;\n  highlightTerm?: string;\n  /** Number of highlighted parts */\n  limit?: number;\n  ignoreCase?: boolean;\n  /** Should use ellipsis */\n  useEllipsis?: boolean;\n  /** Allow highlight every word as a separate term */\n  allowTermSplit?: boolean;\n  linesToClamp?: number;\n  /** Tooltip to show when there is no overflow */\n  nonEllipsisTooltip?: string;\n  /** HTML tag to wrap the selected text */\n  wrappingTextTag?: keyof JSX.IntrinsicElements;\n  wrappingElementClassName?: string;\n  tooltipPosition?: DialogPosition;\n}\n\nconst TextWithHighlight: React.FC<TextWithHighlightProps> = forwardRef(\n  (\n    {\n      className,\n      id,\n      text = \"\",\n      highlightTerm,\n      limit,\n      useEllipsis = true,\n      linesToClamp = 3,\n      ignoreCase = true,\n      allowTermSplit = true,\n      nonEllipsisTooltip,\n      tooltipPosition,\n      wrappingTextTag = \"em\",\n      wrappingElementClassName,\n      \"data-testid\": dataTestId\n    },\n    ref\n  ) => {\n    const componentRef = useRef(null);\n    const mergedRef = useMergeRef(ref, componentRef);\n\n    const textWithHighlights = useMemo(() => {\n      if (!text || !highlightTerm || limit === 0) return text;\n      let finalTerm = highlightTerm;\n      if (allowTermSplit) {\n        finalTerm = highlightTerm.split(\" \").join(\"|\");\n      }\n      const tokens = text.split(new RegExp(`(${finalTerm})`, ignoreCase ? \"i\" : \"\"));\n      const parts = [];\n      // Tokens include the term search (in odd indices)\n      let highlightTermsCount = 0;\n      let key = 0;\n      for (let i = 0; i < tokens.length; i++) {\n        // skip empty tokens\n        if (tokens[i]) {\n          // adding highlight part\n          const isTermPart = i % 2 === 1;\n          const shouldHighlight = isTermPart && (!limit || limit < 0 || highlightTermsCount < limit);\n          parts.push(getTextPart(tokens[i], key++, shouldHighlight, wrappingTextTag, wrappingElementClassName));\n          if (isTermPart) highlightTermsCount++;\n        }\n      }\n\n      return parts;\n    }, [text, highlightTerm, limit, ignoreCase, allowTermSplit, wrappingTextTag, wrappingElementClassName]);\n\n    const isOverflowing = useIsOverflowing({ ref: useEllipsis && componentRef });\n\n    useLayoutEffect(() => {\n      if (componentRef.current) {\n        componentRef.current.style.setProperty(\"--heading-clamp-lines\", linesToClamp.toString());\n      }\n    }, [componentRef, linesToClamp]);\n\n    const Element = (\n      <div\n        ref={mergedRef}\n        className={cx(styles.textWithHighlightWrapper, className, {\n          [styles.withEllipsis]: useEllipsis\n        })}\n        id={id}\n        data-testid={dataTestId || getTestId(ComponentDefaultTestId.TEXT_WITH_HIGHLIGHT, id)}\n      >\n        {textWithHighlights}\n      </div>\n    );\n\n    if (isOverflowing || nonEllipsisTooltip) {\n      const tooltipContent = isOverflowing ? text : nonEllipsisTooltip;\n      return (\n        <Tooltip content={tooltipContent} position={tooltipPosition}>\n          {Element}\n        </Tooltip>\n      );\n    }\n    return Element;\n  }\n);\n\nexport default TextWithHighlight;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}