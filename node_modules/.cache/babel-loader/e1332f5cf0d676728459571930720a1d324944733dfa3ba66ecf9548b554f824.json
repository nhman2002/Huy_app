{"ast":null,"code":"import { __rest as s } from \"../../../_virtual/_tslib.js\";\nimport { jsxs as r, jsx as t } from \"react/jsx-runtime\";\nimport { forwardRef as o, useRef as e } from \"react\";\nimport a from \"classnames\";\nimport { camelCase as i } from \"lodash-es\";\nimport m from \"../../hooks/useMergeRef.js\";\nimport { getTestId as n } from \"../../tests/testIds.js\";\nimport { ComponentDefaultTestId as c } from \"../../tests/constants.js\";\nimport { BadgeType as d, BadgeAlignments as l, BadgeAnchor as p } from \"./BadgeConstants.js\";\nimport f from \"./Indicator/Indicator.js\";\nimport j from \"../Counter/Counter.js\";\nimport { getStyle as g } from \"../../helpers/typesciptCssModulesHelper.js\";\nimport I from \"./Badge.module.scss.js\";\nvar N = o(function (o, l) {\n  var p = o.type,\n    h = void 0 === p ? N.types.INDICATOR : p,\n    u = o.anchor,\n    O = void 0 === u ? N.anchors.TOP_END : u,\n    C = o.alignment,\n    v = void 0 === C ? N.alignments.RECTANGULAR : C,\n    T = o.className,\n    A = o.id,\n    b = o[\"data-testid\"],\n    R = o.children,\n    E = s(o, [\"type\", \"anchor\", \"alignment\", \"className\", \"id\", \"data-testid\", \"children\"]),\n    y = e(null),\n    D = m(l, y),\n    B = a(I.badge, g(I, i(O)), g(I, v)),\n    G = E.color || h === d.INDICATOR ? f.colors.NOTIFICATION : j.colors.NEGATIVE;\n  return r(\"div\", Object.assign({\n    ref: D,\n    className: a(I.badgeWrapper, T),\n    id: A\n  }, {\n    children: [R, t(\"div\", Object.assign({\n      className: B,\n      \"data-testid\": b || n(c.BADGE, A)\n    }, {\n      children: h === d.INDICATOR ? t(f, Object.assign({\n        color: G\n      }, E)) : h === d.COUNTER && t(j, Object.assign({\n        color: G\n      }, E))\n    }))]\n  }));\n});\nN.types = d, N.alignments = l, N.anchors = p;\nvar h = N;\nexport { h as default };","map":{"version":3,"names":["N","o","l","p","type","h","types","INDICATOR","u","anchor","O","anchors","TOP_END","C","alignment","v","alignments","RECTANGULAR","T","className","A","id","b","R","children","E","s","y","e","D","m","B","a","I","badge","g","i","G","color","d","f","colors","NOTIFICATION","j","NEGATIVE","r","Object","assign","ref","badgeWrapper","t","n","c","BADGE","COUNTER","default"],"sources":["/Users/huynhmannguyen/Documents/GitHub/Huy_app/node_modules/monday-ui-react-core/src/components/Badge/Badge.tsx"],"sourcesContent":["import React, { forwardRef, useRef } from \"react\";\nimport cx from \"classnames\";\nimport { camelCase } from \"lodash-es\";\nimport useMergeRef from \"../../hooks/useMergeRef\";\nimport VibeComponentProps from \"../../types/VibeComponentProps\";\nimport VibeComponent from \"../../types/VibeComponent\";\nimport { getTestId } from \"../../tests/test-ids-utils\";\nimport { ComponentDefaultTestId } from \"../../tests/constants\";\nimport { BadgeAlignments, BadgeAnchor, BadgeType } from \"./BadgeConstants\";\nimport Indicator, { IndicatorProps } from \"./Indicator/Indicator\";\nimport Counter, { CounterProps } from \"../Counter/Counter\";\nimport { getStyle } from \"../../helpers/typesciptCssModulesHelper\";\nimport { IndicatorColor } from \"./Indicator/IndicatorConstants\";\nimport { CounterColor } from \"../Counter/CounterConstants\";\nimport styles from \"./Badge.module.scss\";\n\nexport interface BadgeBaseProps extends VibeComponentProps {\n  anchor?: BadgeAnchor;\n  alignment?: BadgeAlignments;\n  children: React.ReactNode;\n}\n\ninterface CounterBadgeProps extends CounterProps {\n  type: BadgeType.COUNTER;\n}\n\ninterface IndicatorBadgeProps extends IndicatorProps {\n  type?: BadgeType.INDICATOR;\n}\n\ntype BadgeProps = BadgeBaseProps & (CounterBadgeProps | IndicatorBadgeProps);\n\nconst Badge: VibeComponent<BadgeProps> & {\n  types?: typeof BadgeType;\n  alignments?: typeof BadgeAlignments;\n  anchors?: typeof BadgeAnchor;\n} = forwardRef(\n  (\n    {\n      type = Badge.types.INDICATOR,\n      anchor = Badge.anchors.TOP_END,\n      alignment = Badge.alignments.RECTANGULAR,\n      className,\n      id,\n      \"data-testid\": dataTestId,\n      children,\n      ...badgeProps\n    },\n    ref\n  ) => {\n    const componentRef = useRef(null);\n    const mergedRef = useMergeRef(ref, componentRef);\n    const badgeClassNames = cx(\n      styles.badge,\n      getStyle(styles, camelCase(anchor as unknown as string)),\n      getStyle(styles, alignment)\n    );\n\n    const color =\n      badgeProps.color || type === BadgeType.INDICATOR ? Indicator.colors.NOTIFICATION : Counter.colors.NEGATIVE;\n\n    return (\n      <div ref={mergedRef} className={cx(styles.badgeWrapper, className)} id={id}>\n        {children}\n        <div className={badgeClassNames} data-testid={dataTestId || getTestId(ComponentDefaultTestId.BADGE, id)}>\n          {type === BadgeType.INDICATOR ? (\n            <Indicator color={color as IndicatorColor} {...(badgeProps as IndicatorBadgeProps)} />\n          ) : (\n            type === BadgeType.COUNTER && (\n              <Counter color={color as CounterColor} {...(badgeProps as CounterBadgeProps)} />\n            )\n          )}\n        </div>\n      </div>\n    );\n  }\n);\n\nBadge.types = BadgeType;\nBadge.alignments = BadgeAlignments;\nBadge.anchors = BadgeAnchor;\n\nexport default Badge;\n"],"mappings":";;;;;;;;;;;;;AAgCA,IAAMA,CAAA,GAIFC,CAAA,CACF,UACEA,CAAA,EAUAC,CAAA;EAVA,IAAAC,CAAA,GAOUF,CAAA,CANRG,IAAA;IAAAC,CAAA,QAAO,MAAHF,CAAA,GAAGH,CAAA,CAAMM,KAAA,CAAMC,SAAA,GAASJ,CAAA;IAAAK,CAAA,GAMpBP,CAAA,CALRQ,MAAA;IAAAC,CAAA,QAAS,MAAHF,CAAA,GAAGR,CAAA,CAAMW,OAAA,CAAQC,OAAA,GAAOJ,CAAA;IAAAK,CAAA,GAKtBZ,CAAA,CAJRa,SAAA;IAAAC,CAAA,QAAY,MAAHF,CAAA,GAAGb,CAAA,CAAMgB,UAAA,CAAWC,WAAA,GAAWJ,CAAA;IACxCK,CAAA,GAGQjB,CAAA,CAHRkB,SAAA;IACAC,CAAA,GAEQnB,CAAA,CAFRoB,EAAA;IACeC,CAAA,GACPrB,CAAA,CADR;IACAsB,CAAA,GAAQtB,CAAA,CAARuB,QAAA;IACGC,CAAA,GAAUC,CAAA,CAAAzB,CAAA,EARf;IAYM0B,CAAA,GAAeC,CAAA,CAAO;IACtBC,CAAA,GAAYC,CAAA,CAAY5B,CAAA,EAAKyB,CAAA;IAC7BI,CAAA,GAAkBC,CAAA,CACtBC,CAAA,CAAOC,KAAA,EACPC,CAAA,CAASF,CAAA,EAAQG,CAAA,CAAU1B,CAAA,IAC3ByB,CAAA,CAASF,CAAA,EAAQlB,CAAA;IAGbsB,CAAA,GACJZ,CAAA,CAAWa,KAAA,IAASjC,CAAA,KAASkC,CAAA,CAAUhC,SAAA,GAAYiC,CAAA,CAAUC,MAAA,CAAOC,YAAA,GAAeC,CAAA,CAAQF,MAAA,CAAOG,QAAA;EAEpG,OACEC,CAAA,CAAK,OAAAC,MAAA,CAAAC,MAAA;IAAAC,GAAA,EAAKnB,CAAA;IAAWV,SAAA,EAAWa,CAAA,CAAGC,CAAA,CAAOgB,YAAA,EAAc/B,CAAA;IAAYG,EAAA,EAAID;EAAA,GAAE;IAAAI,QAAA,GACvED,CAAA,EACD2B,CAAA,QAAAJ,MAAA,CAAAC,MAAA;MAAK5B,SAAA,EAAWY,CAAA;MAAA,eAA8BT,CAAA,IAAc6B,CAAA,CAAUC,CAAA,CAAuBC,KAAA,EAAOjC,CAAA;IAAA;MAAAI,QAAA,EACjGnB,CAAA,KAASkC,CAAA,CAAUhC,SAAA,GAClB2C,CAAA,CAACV,CAAA,EAAUM,MAAA,CAAAC,MAAA;QAAAT,KAAA,EAAOD;MAAA,GAA8BZ,CAAA,KAEhDpB,CAAA,KAASkC,CAAA,CAAUe,OAAA,IACjBJ,CAAA,CAACP,CAAA,EAAAG,MAAA,CAAAC,MAAA;QAAQT,KAAA,EAAOD;MAAA,GAA4BZ,CAAA;IAAA;EAAA,GAMxD;AAAA;AAGFzB,CAAA,CAAMM,KAAA,GAAQiC,CAAA,EACdvC,CAAA,CAAMgB,UAAA,GAAad,CAAA,EACnBF,CAAA,CAAMW,OAAA,GAAUR,CAAA;AAEhB,IAAAE,CAAA,GAAeL,CAAA;AAAA,SAAAK,CAAA,IAAAkD,OAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}