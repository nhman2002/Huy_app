{"ast":null,"code":"import { jsx as o } from \"react/jsx-runtime\";\nimport r, { useCallback as e } from \"react\";\nimport t from \"../../../../hooks/useGridKeyboardNavigation/useGridKeyboardNavigation.js\";\nimport n from \"../ColorPickerItemComponent/ColorPickerItemComponent.js\";\nimport i from \"./ColorPickerColorsGrid.module.scss.js\";\nvar c = function (o, r) {\n    return r && r[o] ? r[o] : function (o) {\n      return o.replace(/-|_/g, \" \").replace(/(?:^|\\s)\\S/g, function (o) {\n        return o.toUpperCase();\n      });\n    }(o);\n  },\n  l = r.forwardRef(function (r, l) {\n    var d = r.onColorClicked,\n      a = r.colorsToRender,\n      u = r.numberOfColorsInLine,\n      s = r.focusOnMount,\n      m = r.value,\n      f = r.colorStyle,\n      C = r.ColorIndicatorIcon,\n      I = r.shouldRenderIndicatorWithoutBackground,\n      p = r.SelectedIndicatorIcon,\n      S = r.colorSize,\n      h = r.tooltipContentByColor,\n      g = r.colorShape,\n      k = r.showColorNameTooltip,\n      v = r.id,\n      y = r[\"data-testid\"],\n      b = e(function (o) {\n        return a[o];\n      }, [a]),\n      j = t({\n        focusOnMount: s,\n        ref: l,\n        onItemClicked: d,\n        itemsCount: a.length,\n        numberOfItemsInLine: u,\n        getItemByIndex: b\n      }),\n      x = j.activeIndex,\n      O = j.onSelectionAction;\n    return o(\"ul\", Object.assign({\n      className: i.colorsGrid,\n      ref: l,\n      tabIndex: -1,\n      id: v,\n      \"data-testid\": y\n    }, {\n      children: a.map(function (r, e) {\n        return o(n, {\n          color: r,\n          onColorClicked: function () {\n            return O(e);\n          },\n          shouldRenderIndicatorWithoutBackground: C && I,\n          colorStyle: f,\n          ColorIndicatorIcon: C,\n          SelectedIndicatorIcon: p,\n          isSelected: Array.isArray(m) ? m.includes(r) : m === r,\n          isActive: e === x,\n          colorSize: S,\n          tooltipContent: k ? c(r, h) : void 0,\n          colorShape: g\n        }, r);\n      })\n    }));\n  });\nexport { l as ColorPickerColorsGrid };","map":{"version":3,"names":["c","calculateColorTooltip","o","r","replace","toUpperCase","l","forwardRef","d","onColorClicked","a","colorsToRender","u","numberOfColorsInLine","s","focusOnMount","m","value","f","colorStyle","C","ColorIndicatorIcon","I","shouldRenderIndicatorWithoutBackground","p","SelectedIndicatorIcon","S","colorSize","h","tooltipContentByColor","g","colorShape","k","showColorNameTooltip","v","id","y","b","e","j","t","ref","onItemClicked","itemsCount","length","numberOfItemsInLine","getItemByIndex","x","activeIndex","O","onSelectionAction","Object","assign","className","i","colorsGrid","tabIndex","children","map","n","color","isSelected","Array","isArray","includes","isActive","tooltipContent","ColorPickerColorsGrid"],"sources":["/Users/huynhmannguyen/Documents/GitHub/Huy_app/node_modules/monday-ui-react-core/src/components/ColorPicker/components/ColorPickerContent/ColorPickerColorsGrid.tsx"],"sourcesContent":["import React, { useCallback } from \"react\";\nimport useGridKeyboardNavigation from \"../../../../hooks/useGridKeyboardNavigation/useGridKeyboardNavigation\";\nimport ColorPickerItemComponent from \"../ColorPickerItemComponent/ColorPickerItemComponent\";\nimport { CONTENT_COLORS_VALUES, ColorStyle } from \"../../../../utils/colors-vars-map\";\nimport { BaseSizes } from \"../../../../constants\";\nimport { ColorPickerArrayValueOnly, ColorPickerValueOnly, ColorShapes } from \"../../ColorPickerConstants\";\nimport { SubIcon, VibeComponent, VibeComponentProps } from \"../../../../types\";\nimport styles from \"./ColorPickerColorsGrid.module.scss\";\n\nconst formatColorNameForTooltip = (color: ColorPickerValueOnly) => {\n  return color.replace(/-|_/g, \" \").replace(/(?:^|\\s)\\S/g, function (a) {\n    return a.toUpperCase();\n  });\n};\n\nconst calculateColorTooltip = (\n  color: ColorPickerValueOnly,\n  tooltipContentByColor?: Partial<Record<CONTENT_COLORS_VALUES, string> & Record<string, string>>\n) => {\n  if (tooltipContentByColor && tooltipContentByColor[color]) {\n    return tooltipContentByColor[color];\n  } else {\n    return formatColorNameForTooltip(color);\n  }\n};\n\ninterface ColorPickerColorsGridProps extends VibeComponentProps {\n  onColorClicked?: (color: ColorPickerValueOnly) => void;\n  colorsToRender?: ColorPickerArrayValueOnly;\n  ColorIndicatorIcon?: SubIcon;\n  SelectedIndicatorIcon?: SubIcon;\n  colorStyle?: ColorStyle;\n  value?: string | string[];\n  shouldRenderIndicatorWithoutBackground?: boolean;\n  colorSize?: BaseSizes;\n  numberOfColorsInLine?: number;\n  tooltipContentByColor?: Partial<Record<CONTENT_COLORS_VALUES, string> & Record<string, string>>;\n  focusOnMount?: boolean;\n  colorShape?: ColorShapes;\n  showColorNameTooltip?: boolean;\n}\n\nexport const ColorPickerColorsGrid: VibeComponent<ColorPickerColorsGridProps, HTMLUListElement> = React.forwardRef(\n  (\n    {\n      onColorClicked,\n      colorsToRender,\n      numberOfColorsInLine,\n      focusOnMount,\n      value,\n      colorStyle,\n      ColorIndicatorIcon,\n      shouldRenderIndicatorWithoutBackground,\n      SelectedIndicatorIcon,\n      colorSize,\n      tooltipContentByColor,\n      colorShape,\n      showColorNameTooltip: showColorNameTooltip,\n      id,\n      \"data-testid\": dataTestId\n    },\n    ref\n  ) => {\n    const getItemByIndex = useCallback((index: number) => colorsToRender[index], [colorsToRender]);\n\n    const { activeIndex, onSelectionAction } = useGridKeyboardNavigation({\n      focusOnMount,\n      ref: ref as React.MutableRefObject<HTMLUListElement>,\n      onItemClicked: onColorClicked,\n      itemsCount: colorsToRender.length,\n      numberOfItemsInLine: numberOfColorsInLine,\n      getItemByIndex\n    });\n\n    return (\n      <ul className={styles.colorsGrid} ref={ref} tabIndex={-1} id={id} data-testid={dataTestId}>\n        {colorsToRender.map((color, index) => {\n          return (\n            <ColorPickerItemComponent\n              key={color}\n              color={color}\n              onColorClicked={() => onSelectionAction(index)}\n              shouldRenderIndicatorWithoutBackground={ColorIndicatorIcon && shouldRenderIndicatorWithoutBackground}\n              colorStyle={colorStyle}\n              ColorIndicatorIcon={ColorIndicatorIcon}\n              SelectedIndicatorIcon={SelectedIndicatorIcon}\n              isSelected={Array.isArray(value) ? value.includes(color) : value === color}\n              isActive={index === activeIndex}\n              colorSize={colorSize}\n              tooltipContent={showColorNameTooltip ? calculateColorTooltip(color, tooltipContentByColor) : undefined}\n              colorShape={colorShape}\n            />\n          );\n        })}\n      </ul>\n    );\n  }\n);\n"],"mappings":";;;;;AASA,IAMMA,CAAA,GAAwB,SAAAC,CAC5BC,CAAA,EACAC,CAAA;IAEA,OAAIA,CAAA,IAAyBA,CAAA,CAAsBD,CAAA,IAC1CC,CAAA,CAAsBD,CAAA,IAXC,UAACA,CAAA;MACjC,OAAOA,CAAA,CAAME,OAAA,CAAQ,QAAQ,KAAKA,OAAA,CAAQ,eAAe,UAAUF,CAAA;QACjE,OAAOA,CAAA,CAAEG,WAAA,EACX;MAAA,EACF;IAAA,CASW,CAA0BH,CAAA,CAErC;EAAA;EAkBaI,CAAA,GAAqFH,CAAA,CAAMI,UAAA,CACtG,UAAAJ,CAAA,EAkBEG,CAAA;IACE,IAjBAE,CAAA,GAAcL,CAAA,CAAdM,cAAA;MACAC,CAAA,GAAcP,CAAA,CAAdQ,cAAA;MACAC,CAAA,GAAoBT,CAAA,CAApBU,oBAAA;MACAC,CAAA,GAAYX,CAAA,CAAZY,YAAA;MACAC,CAAA,GAAKb,CAAA,CAALc,KAAA;MACAC,CAAA,GAAUf,CAAA,CAAVgB,UAAA;MACAC,CAAA,GAAkBjB,CAAA,CAAlBkB,kBAAA;MACAC,CAAA,GAAsCnB,CAAA,CAAtCoB,sCAAA;MACAC,CAAA,GAAqBrB,CAAA,CAArBsB,qBAAA;MACAC,CAAA,GAASvB,CAAA,CAATwB,SAAA;MACAC,CAAA,GAAqBzB,CAAA,CAArB0B,qBAAA;MACAC,CAAA,GAAU3B,CAAA,CAAV4B,UAAA;MACsBC,CAAA,GAAoB7B,CAAA,CAA1C8B,oBAAA;MACAC,CAAA,GAAE/B,CAAA,CAAFgC,EAAA;MACeC,CAAA,GAAUjC,CAAA,CAAzB;MAIIkC,CAAA,GAAiBC,CAAA,CAAY,UAACpC,CAAA;QAAa,OAAKQ,CAAA,CAAeR,CAAA;MAAA,GAAQ,CAACQ,CAAA;MAE9E6B,CAAA,GAA2CC,CAAA,CAA0B;QACnEzB,YAAA,EAAAD,CAAA;QACA2B,GAAA,EAAKnC,CAAA;QACLoC,aAAA,EAAelC,CAAA;QACfmC,UAAA,EAAYjC,CAAA,CAAekC,MAAA;QAC3BC,mBAAA,EAAqBjC,CAAA;QACrBkC,cAAA,EAAAT;MAAA;MANMU,CAAA,GAAWR,CAAA,CAAXS,WAAA;MAAaC,CAAA,GAAiBV,CAAA,CAAjBW,iBAAA;IASrB,OACEhD,CAAA,OAAAiD,MAAA,CAAAC,MAAA;MAAIC,SAAA,EAAWC,CAAA,CAAOC,UAAA;MAAYd,GAAA,EAAKnC,CAAA;MAAKkD,QAAA,GAAW;MAAGrB,EAAA,EAAID,CAAA;MAAiB,eAAAE;IAAA;MAAAqB,QAAA,EAC5E/C,CAAA,CAAegD,GAAA,CAAI,UAACvD,CAAA,EAAOmC,CAAA;QAC1B,OACEpC,CAAA,CAACyD,CAAA,EAAwB;UAEvBC,KAAA,EAAOzD,CAAA;UACPM,cAAA,EAAgB,SAAAA,CAAA;YAAA,OAAMwC,CAAA,CAAkBX,CAAA,CAAM;UAAA;UAC9Cf,sCAAA,EAAwCH,CAAA,IAAsBE,CAAA;UAC9DH,UAAA,EAAYD,CAAA;UACZG,kBAAA,EAAoBD,CAAA;UACpBK,qBAAA,EAAuBD,CAAA;UACvBqC,UAAA,EAAYC,KAAA,CAAMC,OAAA,CAAQ/C,CAAA,IAASA,CAAA,CAAMgD,QAAA,CAAS7D,CAAA,IAASa,CAAA,KAAUb,CAAA;UACrE8D,QAAA,EAAU3B,CAAA,KAAUS,CAAA;UACpBpB,SAAA,EAAWD,CAAA;UACXwC,cAAA,EAAgBlC,CAAA,GAAuBhC,CAAA,CAAsBG,CAAA,EAAOyB,CAAA,SAAyB;UAC7FG,UAAA,EAAYD;QAAA,GAXP3B,CAAA;MAAA;IAAA,GAiBjB;EAAA;AAAA,SAAAG,CAAA,IAAA6D,qBAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}