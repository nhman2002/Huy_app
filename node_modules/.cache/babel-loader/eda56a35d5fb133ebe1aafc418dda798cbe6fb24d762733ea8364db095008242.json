{"ast":null,"code":"import { slicedToArray as e } from \"../../../_virtual/_rollupPluginBabelHelpers.js\";\nimport { useState as o, useCallback as i, useEffect as n } from \"react\";\nvar r;\nfunction t() {\n  var r = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},\n    t = r.isChecked,\n    a = r.defaultChecked,\n    l = r.onChange,\n    c = r.isDisabled,\n    u = null != t ? t : !!a,\n    d = o(u),\n    s = e(d, 2),\n    f = s[0],\n    h = s[1],\n    v = i(function () {\n      if (!c) {\n        var e = !f;\n        void 0 === t && h(e), l && l(e);\n      }\n    }, [t, c, l, f]);\n  return n(function () {\n    void 0 !== t && h(t);\n  }, [t]), {\n    isChecked: f,\n    onChange: v\n  };\n}\n!function (e) {\n  e.CHECKBOX = \"checkbox\", e.BUTTON = \"button\";\n}(r || (r = {})), t.switchRole = r;\nexport { t as default };","map":{"version":3,"names":["r","t","arguments","length","isChecked","a","defaultChecked","l","onChange","c","isDisabled","u","d","o","s","e","f","h","v","i","n","CHECKBOX","BUTTON","switchRole","default"],"sources":["/Users/huynhmannguyen/Documents/GitHub/Huy_app/node_modules/monday-ui-react-core/src/hooks/useSwitch/index.ts"],"sourcesContent":["import { useCallback, useEffect, useState } from \"react\";\n\nenum SwitchRole {\n  CHECKBOX = \"checkbox\",\n  BUTTON = \"button\"\n}\n\nexport interface UseSwitchProps {\n  isChecked?: boolean;\n  defaultChecked?: boolean;\n  onChange?: (value: boolean) => void;\n  isDisabled?: boolean;\n}\n\nexport default function useSwitch({ isChecked, defaultChecked, onChange, isDisabled }: UseSwitchProps = {}) {\n  // if isChecked is empty, set defaultChecked value (default false value)\n  const overrideCheckedInitial = isChecked ?? !!defaultChecked;\n  const [overrideChecked, setOverrideChecked] = useState(overrideCheckedInitial);\n\n  const overrideOnChange = useCallback(() => {\n    if (isDisabled) {\n      return;\n    }\n    const newChecked = !overrideChecked;\n    if (isChecked === undefined) {\n      setOverrideChecked(newChecked);\n    }\n    onChange && onChange(newChecked);\n  }, [isChecked, isDisabled, onChange, overrideChecked]);\n\n  useEffect(() => {\n    if (isChecked !== undefined) {\n      setOverrideChecked(isChecked);\n    }\n  }, [isChecked]);\n\n  return { isChecked: overrideChecked, onChange: overrideOnChange };\n}\n\nuseSwitch.switchRole = SwitchRole;\n"],"mappings":";;AAEA,IAAKA,CAAA;AAYmB,SAAAC,EAAA;EAAkF,IAAAD,CAAA,GAAAE,SAAA,CAAAC,MAAA,mBAAAD,SAAA,MAAAA,SAAA,MAAF,CAAE;IAAtED,CAAA,GAASD,CAAA,CAATI,SAAA;IAAWC,CAAA,GAAcL,CAAA,CAAdM,cAAA;IAAgBC,CAAA,GAAQP,CAAA,CAARQ,QAAA;IAAUC,CAAA,GAAUT,CAAA,CAAVU,UAAA;IAEjEC,CAAA,GAAyB,QAAAV,CAAA,GAAAA,CAAA,KAAeI,CAAA;IAC9CO,CAAA,GAA8CC,CAAA,CAASF,CAAA;IAAuBG,CAAA,GAAAC,CAAA,CAAAH,CAAA;IAAvEI,CAAA,GAAeF,CAAA;IAAEG,CAAA,GAAkBH,CAAA;IAEpCI,CAAA,GAAmBC,CAAA,CAAY;MACnC,KAAIV,CAAA,EAAJ;QAGA,IAAMM,CAAA,IAAcC,CAAA;QAAA,KACF,MAAdf,CAAA,IACFgB,CAAA,CAAmBF,CAAA,GAErBR,CAAA,IAAYA,CAAA,CAASQ,CAAA,CALpB;MAAA;IAMF,GAAE,CAACd,CAAA,EAAWQ,CAAA,EAAYF,CAAA,EAAUS,CAAA;EAQrC,OANAI,CAAA,CAAU;IAAA,KACU,MAAdnB,CAAA,IACFgB,CAAA,CAAmBhB,CAAA,CAEvB;EAAA,GAAG,CAACA,CAAA,IAEG;IAAEG,SAAA,EAAWY,CAAA;IAAiBR,QAAA,EAAUU;EAAA,CACjD;AAAA;AAAA,CAnCA,UAAKH,CAAA;EACHA,CAAA,CAAAM,QAAA,eACAN,CAAA,CAAAO,MAAA,WACD;AAAA,CAHD,CAAKtB,CAAA,KAAAA,CAAA,GAGJ,MAkCDC,CAAA,CAAUsB,UAAA,GAAavB,CAAA;AAAA,SAAAC,CAAA,IAAAuB,OAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}