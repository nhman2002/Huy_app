{"ast":null,"code":"import { objectSpread2 as e, slicedToArray as n, defineProperty as o, extends as t, toConsumableArray as r } from \"../../../_virtual/_rollupPluginBabelHelpers.js\";\nimport a, { forwardRef as i, useRef as s, useMemo as l, useState as u, useCallback as c } from \"react\";\nimport { getTestId as p, ComponentDefaultTestId as d } from \"../../tests/testIds.js\";\nimport m from \"classnames\";\nimport { SIZES as f } from \"../../constants/sizes.js\";\nimport O, { components as C, createFilter as v } from \"react-select\";\nimport M from \"react-select/async\";\nimport { noop as g } from \"lodash-es\";\nimport { WindowedMenuList as y } from \"react-windowed-select\";\nimport \"prop-types\";\nimport h from \"./components/menu/menu.js\";\nimport w from \"./components/DropdownIndicator/DropdownIndicator.js\";\nimport b from \"./components/option/option.js\";\nimport S from \"./components/singleValue/singleValue.js\";\nimport j from \"./components/ClearIndicator/ClearIndicator.js\";\nimport D from \"./components/MultiValueContainer/MultiValueContainer.js\";\nimport { ADD_AUTO_HEIGHT_COMPONENTS as I, DROPDOWN_CHIP_COLORS as P, DROPDOWN_MENU_PLACEMENT as V, DROPDOWN_MENU_POSITION as R, defaultCustomStyles as W, DROPDOWN_ID as N } from \"./DropdownConstants.js\";\nimport E, { customTheme as z } from \"./Dropdown.styles.js\";\nimport T from \"./components/Control/Control.js\";\nimport x from \"./components/menu/menu.module.scss.js\";\nimport A from \"./Dropdown.module.scss.js\";\nvar F = i(function (i, f) {\n  var v = i.className,\n    P = i.optionWrapperClassName,\n    V = i.singleValueWrapperClassName,\n    R = i.dropdownMenuWrapperClassName,\n    W = i.placeholder,\n    N = i.disabled,\n    F = i.readOnly,\n    L = i.onMenuOpen,\n    B = i.onMenuClose,\n    k = i.onFocus,\n    H = i.onBlur,\n    K = i.onChange,\n    U = i.searchable,\n    _ = i.options,\n    q = i.defaultValue,\n    G = i.value,\n    J = i.noOptionsMessage,\n    Q = i.openMenuOnFocus,\n    X = i.openMenuOnClick,\n    Y = i.clearable,\n    Z = i.OptionRenderer,\n    $ = i.optionRenderer,\n    ee = i.ValueRenderer,\n    ne = i.valueRenderer,\n    oe = i.menuRenderer,\n    te = i.menuPlacement,\n    re = i.rtl,\n    ae = i.size,\n    ie = i.asyncOptions,\n    se = i.cacheOptions,\n    le = i.defaultOptions,\n    ue = i.isVirtualized,\n    ce = i.menuPortalTarget,\n    pe = i.extraStyles,\n    de = i.maxMenuHeight,\n    me = i.menuIsOpen,\n    fe = i.tabIndex,\n    Oe = i.id,\n    Ce = i.autoFocus,\n    ve = i.multi,\n    Me = void 0 !== ve && ve,\n    ge = i.multiline,\n    ye = void 0 !== ge && ge,\n    he = i.onOptionRemove,\n    we = i.onOptionSelect,\n    be = i.onClear,\n    Se = i.onInputChange,\n    je = i.closeMenuOnSelect,\n    De = void 0 === je ? !Me : je,\n    Ie = i.closeMenuOnScroll,\n    Pe = i.withMandatoryDefaultOptions,\n    Ve = i.isOptionSelected,\n    Re = i.insideOverflowContainer,\n    We = i.insideOverflowWithTransformContainer,\n    Ne = i.tooltipContent,\n    Ee = i.onKeyDown,\n    ze = i.isLoading,\n    Te = i.loadingMessage,\n    xe = i.ariaLabel,\n    Ae = i.tabSelectsValue,\n    Fe = void 0 === Ae || Ae,\n    Le = i.popupsContainerSelector,\n    Be = i.filterOption,\n    ke = i.menuPosition,\n    He = i[\"data-testid\"],\n    Ke = s(),\n    Ue = ce || Le && document.querySelector(Le),\n    _e = l(function () {\n      return q ? Array.isArray(q) ? q.map(function (n) {\n        return e(e({}, n), {}, {\n          isMandatory: !0\n        });\n      }) : e(e({}, q), {}, {\n        isMandatory: !0\n      }) : q;\n    }, [q]),\n    qe = u(_e || []),\n    Ge = n(qe, 2),\n    Je = Ge[1],\n    Qe = $ || Z,\n    Xe = ne || ee,\n    Ye = !!G,\n    Ze = null != G ? G : Ge[0],\n    $e = l(function () {\n      return Array.isArray(Ze) ? Ze.reduce(function (n, t) {\n        return e(e({}, n), {}, o({}, t.value, t));\n      }, {}) : {};\n    }, [Ze]),\n    en = l(function () {\n      return xe || \"\".concat(F ? \"Readonly \" : \"\", \" \").concat(Ne, \" \").concat(Array.isArray(Ze) ? \"Selected: \".concat(Ze.map(function (e) {\n        return e.label;\n      }).join(\", \")) : \"Select\");\n    }, [xe, F, Ze, Ne]),\n    nn = Me ? Ze : G,\n    on = l(function () {\n      var t = E({\n          size: ae,\n          rtl: re,\n          insideOverflowContainer: Re,\n          controlRef: Ke,\n          insideOverflowWithTransformContainer: We\n        }),\n        r = pe(t),\n        a = Object.entries(r).reduce(function (r, a) {\n          var i = n(a, 2),\n            s = i[0],\n            l = i[1];\n          return e(e({}, r), {}, o({}, s, function (e, n) {\n            var o = t[s] ? t[s](e, n) : e;\n            return l(o, n);\n          }));\n        }, {});\n      if (Me) {\n        ye && I.forEach(function (n) {\n          var o = a[n];\n          a[n] = function (n, t) {\n            return e(e({}, o(n, t)), {}, {\n              height: \"auto\"\n            });\n          };\n        });\n        var i = a.valueContainer;\n        a.valueContainer = function (n, o) {\n          return e(e({}, i(n, o)), {}, {\n            paddingLeft: 6\n          });\n        };\n      }\n      return a;\n    }, [ae, re, Re, We, pe, Me, ye]),\n    tn = c(function (e) {\n      return a.createElement(h, t({}, e, {\n        Renderer: oe,\n        dropdownMenuWrapperClassName: R\n      }));\n    }, [R, oe]),\n    rn = c(function (e) {\n      return a.createElement(w, t({}, e, {\n        size: ae\n      }));\n    }, [ae]),\n    an = c(function (e) {\n      return a.createElement(b, t({}, e, {\n        Renderer: Qe,\n        optionWrapperClassName: P\n      }));\n    }, [Qe, P]),\n    sn = c(function (e) {\n      return a.createElement(C.Input, t({}, e, {\n        \"aria-label\": \"Dropdown input\"\n      }));\n    }, []),\n    ln = c(function (e) {\n      return a.createElement(S, t({}, e, {\n        readOnly: F,\n        Renderer: Xe,\n        selectedOption: Ze[0],\n        singleValueWrapperClassName: V\n      }));\n    }, [Xe, F, Ze, V]),\n    un = c(function (e) {\n      return a.createElement(j, t({}, e, {\n        size: ae\n      }));\n    }, [ae]),\n    cn = l(function () {\n      return function (e, n) {\n        he && he($e[e]);\n        var o = Ze.filter(function (n) {\n          return n.value !== e;\n        });\n        K && K(o, n), Je(o);\n      };\n    }, [K, he, Ze, $e]),\n    pn = l(function () {\n      return {\n        selectedOptions: Ze,\n        onSelectedDelete: cn,\n        isMultiline: ye,\n        insideOverflowContainer: Re,\n        insideOverflowWithTransformContainer: We,\n        controlRef: Ke,\n        tooltipContent: Ne,\n        popupsContainerSelector: Le\n      };\n    }, [Ze, cn, ye, Re, We, Ne, Le]),\n    dn = ie ? M : O,\n    mn = e({}, ie && e({\n      loadOptions: ie,\n      cacheOptions: se\n    }, le && {\n      defaultOptions: le\n    })),\n    fn = e(e({}, !ie && {\n      options: _\n    }), Me && {\n      isMulti: !0\n    }),\n    On = c(function (e) {\n      var n,\n        o = e.target;\n      return (null == o || null === (n = o.parentElement) || void 0 === n || !n.classList.contains(x.dropdownMenuWrapper)) && (Ie || Re || We);\n    }, [Re, We, Ie]);\n  return a.createElement(dn, t({\n    className: m(A.dropdown, v),\n    selectProps: pn,\n    components: e(e({\n      DropdownIndicator: rn,\n      Menu: tn,\n      ClearIndicator: un,\n      Input: sn,\n      Option: an,\n      Control: T,\n      SingleValue: ln\n    }, Me && {\n      MultiValue: g,\n      ValueContainer: D\n    }), ue && {\n      MenuList: y\n    }),\n    closeMenuOnScroll: On,\n    size: ae,\n    noOptionsMessage: J,\n    placeholder: W,\n    isDisabled: N,\n    isClearable: !F && Y,\n    isSearchable: !F && U,\n    readOnly: F,\n    \"aria-readonly\": F,\n    \"aria-label\": en,\n    \"aria-details\": Ne,\n    defaultValue: q,\n    value: nn,\n    onMenuOpen: L,\n    onMenuClose: B,\n    onFocus: k,\n    onBlur: H,\n    onChange: function (e, n) {\n      switch (K && K(e, n), n.action) {\n        case \"select-option\":\n          var o = Me ? n.option : e;\n          we && we(o), Ye || Je([].concat(r(Ze), [o]));\n          break;\n        case \"clear\":\n          be && be(), Ye || Je(Pe ? _e : []);\n      }\n    },\n    onKeyDown: Ee,\n    onInputChange: Se,\n    openMenuOnFocus: Q,\n    openMenuOnClick: X,\n    isRtl: re,\n    styles: on,\n    theme: z,\n    maxMenuHeight: de,\n    menuPortalTarget: Ue,\n    menuPlacement: te,\n    menuPosition: ke,\n    menuIsOpen: !F && me,\n    tabIndex: fe,\n    id: Oe,\n    \"data-testid\": He || p(d.DROPDOWN, Oe),\n    autoFocus: Ce,\n    closeMenuOnSelect: De,\n    ref: f,\n    withMandatoryDefaultOptions: Pe,\n    isOptionSelected: Ve,\n    isLoading: ze,\n    loadingMessage: Te,\n    tabSelectsValue: Fe,\n    filterOption: Be\n  }, mn, fn));\n});\nObject.assign(F, {\n  size: f,\n  sizes: f,\n  chipColors: P,\n  menuPlacements: V,\n  menuPositions: R,\n  createFilter: v\n}), F.defaultProps = {\n  className: \"\",\n  optionWrapperClassName: void 0,\n  dropdownMenuWrapperClassName: void 0,\n  singleValueWrapperClassName: void 0,\n  placeholder: \"\",\n  onMenuOpen: g,\n  onMenuClose: g,\n  onKeyDown: g,\n  onFocus: g,\n  onBlur: g,\n  onChange: g,\n  onInputChange: g,\n  searchable: !0,\n  options: [],\n  menuPlacement: F.menuPlacements.BOTTOM,\n  menuPosition: F.menuPositions.ABSOLUTE,\n  noOptionsMessage: g,\n  clearable: !0,\n  size: f.MEDIUM,\n  extraStyles: W,\n  tabIndex: \"0\",\n  onOptionRemove: void 0,\n  id: N,\n  autoFocus: !1,\n  closeMenuOnSelect: void 0,\n  closeMenuOnScroll: !1,\n  ref: void 0,\n  withMandatoryDefaultOptions: !1,\n  insideOverflowContainer: !1,\n  insideOverflowWithTransformContainer: !1,\n  tooltipContent: \"\",\n  disabled: !1,\n  readOnly: !1,\n  isLoading: !1,\n  loadingMessage: void 0,\n  ariaLabel: void 0,\n  filterOption: void 0\n};\nvar L = F;\nexport { L as default };","map":{"version":3,"names":["F","i","f","v","className","P","optionWrapperClassName","V","singleValueWrapperClassName","R","dropdownMenuWrapperClassName","W","placeholder","N","disabled","readOnly","L","onMenuOpen","B","onMenuClose","k","onFocus","H","onBlur","K","onChange","U","searchable","_","options","q","defaultValue","G","value","J","noOptionsMessage","Q","openMenuOnFocus","X","openMenuOnClick","Y","clearable","Z","OptionRenderer","$","optionRenderer","ee","ValueRenderer","ne","valueRenderer","oe","menuRenderer","te","menuPlacement","re","rtl","ae","size","ie","asyncOptions","se","cacheOptions","le","defaultOptions","ue","isVirtualized","ce","menuPortalTarget","pe","extraStyles","de","maxMenuHeight","me","menuIsOpen","fe","tabIndex","Oe","id","Ce","autoFocus","ve","multi","Me","ge","multiline","ye","he","onOptionRemove","we","onOptionSelect","be","onClear","Se","onInputChange","je","closeMenuOnSelect","De","Ie","closeMenuOnScroll","Pe","withMandatoryDefaultOptions","Ve","isOptionSelected","Re","insideOverflowContainer","We","insideOverflowWithTransformContainer","Ne","tooltipContent","Ee","onKeyDown","ze","isLoading","Te","loadingMessage","xe","ariaLabel","Ae","tabSelectsValue","Fe","Le","popupsContainerSelector","Be","filterOption","ke","menuPosition","He","Ke","s","Ue","document","querySelector","_e","l","Array","isArray","map","n","e","isMandatory","qe","u","Ge","Je","Qe","Xe","Ye","Ze","$e","reduce","t","o","en","concat","label","join","nn","on","E","controlRef","r","a","Object","entries","I","forEach","height","valueContainer","paddingLeft","tn","c","createElement","h","Renderer","rn","w","an","b","sn","C","Input","ln","S","selectedOption","un","j","cn","filter","pn","selectedOptions","onSelectedDelete","isMultiline","dn","M","O","mn","loadOptions","fn","isMulti","On","target","parentElement","classList","contains","x","dropdownMenuWrapper","m","A","dropdown","selectProps","components","DropdownIndicator","Menu","ClearIndicator","Option","Control","T","SingleValue","MultiValue","g","ValueContainer","D","MenuList","y","isDisabled","isClearable","isSearchable","action","option","isRtl","styles","theme","z","p","d","DROPDOWN","ref","assign","sizes","chipColors","menuPlacements","menuPositions","createFilter","defaultProps","BOTTOM","ABSOLUTE","MEDIUM","default"],"sources":["/Users/huynhmannguyen/Documents/GitHub/Huy_app/node_modules/monday-ui-react-core/src/components/Dropdown/Dropdown.jsx"],"sourcesContent":["/* eslint-disable react/require-default-props,react/forbid-prop-types */\nimport { ComponentDefaultTestId, getTestId } from \"../../tests/test-ids-utils\";\nimport cx from \"classnames\";\nimport { SIZES } from \"../../constants/sizes\";\nimport { forwardRef, useCallback, useMemo, useRef, useState } from \"react\";\nimport Select, { components, createFilter } from \"react-select\";\nimport AsyncSelect from \"react-select/async\";\nimport { noop as NOOP } from \"lodash-es\";\nimport { WindowedMenuList } from \"react-windowed-select\";\nimport PropTypes from \"prop-types\";\nimport MenuComponent from \"./components/menu/menu\";\nimport DropdownIndicatorComponent from \"./components/DropdownIndicator/DropdownIndicator\";\nimport OptionComponent from \"./components/option/option\";\nimport SingleValueComponent from \"./components/singleValue/singleValue\";\nimport ClearIndicatorComponent from \"./components/ClearIndicator/ClearIndicator\";\nimport MultiValueContainer from \"./components/MultiValueContainer/MultiValueContainer\";\nimport {\n  ADD_AUTO_HEIGHT_COMPONENTS,\n  defaultCustomStyles,\n  DROPDOWN_CHIP_COLORS,\n  DROPDOWN_ID,\n  DROPDOWN_MENU_PLACEMENT,\n  DROPDOWN_MENU_POSITION\n} from \"./DropdownConstants\";\nimport generateBaseStyles, { customTheme } from \"./Dropdown.styles\";\nimport Control from \"./components/Control/Control\";\nimport menuStyles from \"./components/menu/menu.module.scss\";\nimport styles from \"./Dropdown.module.scss\";\n\nconst Dropdown = forwardRef(\n  (\n    {\n      className,\n      optionWrapperClassName,\n      singleValueWrapperClassName,\n      dropdownMenuWrapperClassName,\n      placeholder,\n      disabled,\n      readOnly,\n      onMenuOpen,\n      onMenuClose,\n      onFocus,\n      onBlur,\n      onChange: customOnChange,\n      searchable,\n      options,\n      defaultValue,\n      value: customValue,\n      noOptionsMessage,\n      openMenuOnFocus,\n      openMenuOnClick,\n      clearable,\n      OptionRenderer,\n      optionRenderer,\n      ValueRenderer,\n      valueRenderer,\n      menuRenderer,\n      menuPlacement,\n      rtl,\n      size,\n      asyncOptions,\n      cacheOptions,\n      defaultOptions,\n      isVirtualized,\n      menuPortalTarget,\n      extraStyles,\n      maxMenuHeight,\n      menuIsOpen,\n      tabIndex,\n      id,\n      autoFocus,\n      multi = false,\n      multiline = false,\n      onOptionRemove: customOnOptionRemove,\n      onOptionSelect,\n      onClear,\n      onInputChange,\n      closeMenuOnSelect = !multi,\n      closeMenuOnScroll: customCloseMenuOnScroll,\n      withMandatoryDefaultOptions,\n      isOptionSelected,\n      insideOverflowContainer,\n      insideOverflowWithTransformContainer,\n      tooltipContent,\n      onKeyDown,\n      isLoading,\n      loadingMessage,\n      ariaLabel,\n      tabSelectsValue = true,\n      popupsContainerSelector,\n      filterOption,\n      menuPosition,\n      \"data-testid\": dataTestId\n    },\n    ref\n  ) => {\n    const controlRef = useRef();\n    const overrideMenuPortalTarget =\n      menuPortalTarget || (popupsContainerSelector && document.querySelector(popupsContainerSelector));\n    const overrideDefaultValue = useMemo(() => {\n      if (defaultValue) {\n        return Array.isArray(defaultValue)\n          ? defaultValue.map(df => ({ ...df, isMandatory: true }))\n          : { ...defaultValue, isMandatory: true };\n      }\n\n      return defaultValue;\n    }, [defaultValue]);\n\n    const [selected, setSelected] = useState(overrideDefaultValue || []);\n    const finalOptionRenderer = optionRenderer || OptionRenderer;\n    const finalValueRenderer = valueRenderer || ValueRenderer;\n    const isControlled = !!customValue;\n    const selectedOptions = customValue ?? selected;\n    const selectedOptionsMap = useMemo(() => {\n      if (Array.isArray(selectedOptions)) {\n        return selectedOptions.reduce((acc, option) => ({ ...acc, [option.value]: option }), {});\n      }\n      return {};\n    }, [selectedOptions]);\n\n    const overrideAriaLabel = useMemo(() => {\n      return (\n        ariaLabel ||\n        `${readOnly ? \"Readonly \" : \"\"} ${tooltipContent} ${\n          Array.isArray(selectedOptions) ? `Selected: ${selectedOptions.map(o => o.label).join(\", \")}` : \"Select\"\n        }`\n      );\n    }, [ariaLabel, readOnly, selectedOptions, tooltipContent]);\n    const value = multi ? selectedOptions : customValue;\n\n    const inlineStyles = useMemo(() => {\n      // We first want to get the default stylized groups (e.g. \"container\", \"menu\").\n      const baseStyles = generateBaseStyles({\n        size,\n        rtl,\n        insideOverflowContainer,\n        controlRef,\n        insideOverflowWithTransformContainer\n      });\n\n      // Then we want to run the consumer's root-level custom styles with our \"base\" override groups.\n      const customStyles = extraStyles(baseStyles);\n\n      // Lastly, we create a style groups object that makes sure we run each custom group with our basic overrides.\n      const mergedStyles = Object.entries(customStyles).reduce((accumulator, [stylesGroup, stylesFn]) => {\n        return {\n          ...accumulator,\n          [stylesGroup]: (defaultStyles, state) => {\n            const provided = baseStyles[stylesGroup] ? baseStyles[stylesGroup](defaultStyles, state) : defaultStyles;\n\n            return stylesFn(provided, state);\n          }\n        };\n      }, {});\n\n      if (multi) {\n        if (multiline) {\n          ADD_AUTO_HEIGHT_COMPONENTS.forEach(component => {\n            const original = mergedStyles[component];\n            mergedStyles[component] = (provided, state) => ({\n              ...original(provided, state),\n              height: \"auto\"\n            });\n          });\n        }\n\n        const originalValueContainer = mergedStyles.valueContainer;\n        mergedStyles.valueContainer = (provided, state) => ({\n          ...originalValueContainer(provided, state),\n          paddingLeft: 6\n        });\n      }\n\n      return mergedStyles;\n    }, [size, rtl, insideOverflowContainer, insideOverflowWithTransformContainer, extraStyles, multi, multiline]);\n\n    const Menu = useCallback(\n      props => (\n        <MenuComponent {...props} Renderer={menuRenderer} dropdownMenuWrapperClassName={dropdownMenuWrapperClassName} />\n      ),\n      [dropdownMenuWrapperClassName, menuRenderer]\n    );\n\n    const DropdownIndicator = useCallback(props => <DropdownIndicatorComponent {...props} size={size} />, [size]);\n\n    const Option = useCallback(\n      props => (\n        <OptionComponent {...props} Renderer={finalOptionRenderer} optionWrapperClassName={optionWrapperClassName} />\n      ),\n      [finalOptionRenderer, optionWrapperClassName]\n    );\n\n    const Input = useCallback(props => <components.Input {...props} aria-label=\"Dropdown input\" />, []);\n\n    const SingleValue = useCallback(\n      props => (\n        <SingleValueComponent\n          {...props}\n          readOnly={readOnly}\n          Renderer={finalValueRenderer}\n          selectedOption={selectedOptions[0]}\n          singleValueWrapperClassName={singleValueWrapperClassName}\n        />\n      ),\n      [finalValueRenderer, readOnly, selectedOptions, singleValueWrapperClassName]\n    );\n\n    const ClearIndicator = useCallback(props => <ClearIndicatorComponent {...props} size={size} />, [size]);\n\n    const onOptionRemove = useMemo(() => {\n      return function (optionValue, e) {\n        if (customOnOptionRemove) {\n          customOnOptionRemove(selectedOptionsMap[optionValue]);\n        }\n        const newSelectedOptions = selectedOptions.filter(option => option.value !== optionValue);\n        if (customOnChange) {\n          customOnChange(newSelectedOptions, e);\n        }\n        setSelected(newSelectedOptions);\n      };\n    }, [customOnChange, customOnOptionRemove, selectedOptions, selectedOptionsMap]);\n\n    const customProps = useMemo(\n      () => ({\n        selectedOptions,\n        onSelectedDelete: onOptionRemove,\n        isMultiline: multiline,\n        insideOverflowContainer,\n        insideOverflowWithTransformContainer,\n        controlRef,\n        tooltipContent,\n        popupsContainerSelector\n      }),\n      [\n        selectedOptions,\n        onOptionRemove,\n        multiline,\n        insideOverflowContainer,\n        insideOverflowWithTransformContainer,\n        tooltipContent,\n        popupsContainerSelector\n      ]\n    );\n    const onChange = (option, event) => {\n      if (customOnChange) {\n        customOnChange(option, event);\n      }\n\n      switch (event.action) {\n        case \"select-option\": {\n          const selectedOption = multi ? event.option : option;\n\n          if (onOptionSelect) {\n            onOptionSelect(selectedOption);\n          }\n\n          if (!isControlled) {\n            setSelected([...selectedOptions, selectedOption]);\n          }\n          break;\n        }\n\n        case \"clear\":\n          if (onClear) {\n            onClear();\n          }\n\n          if (!isControlled) {\n            if (withMandatoryDefaultOptions) setSelected(overrideDefaultValue);\n            else setSelected([]);\n          }\n          break;\n      }\n    };\n\n    const DropDownComponent = asyncOptions ? AsyncSelect : Select;\n\n    const asyncAdditions = {\n      ...(asyncOptions && {\n        loadOptions: asyncOptions,\n        cacheOptions,\n        ...(defaultOptions && { defaultOptions })\n      })\n    };\n\n    const additions = {\n      ...(!asyncOptions && { options }),\n      ...(multi && {\n        isMulti: true\n      })\n    };\n\n    const closeMenuOnScroll = useCallback(\n      event => {\n        const scrolledElement = event.target;\n        if (scrolledElement?.parentElement?.classList.contains(menuStyles.dropdownMenuWrapper)) {\n          return false;\n        }\n        return customCloseMenuOnScroll || insideOverflowContainer || insideOverflowWithTransformContainer;\n      },\n      [insideOverflowContainer, insideOverflowWithTransformContainer, customCloseMenuOnScroll]\n    );\n\n    return (\n      <DropDownComponent\n        className={cx(styles.dropdown, className)}\n        selectProps={customProps}\n        components={{\n          DropdownIndicator,\n          Menu,\n          ClearIndicator,\n          Input,\n          Option,\n          Control,\n          SingleValue,\n          ...(multi && {\n            MultiValue: NOOP, // We need it for react-select to behave nice with \"multi\"\n            ValueContainer: MultiValueContainer\n          }),\n          ...(isVirtualized && { MenuList: WindowedMenuList })\n        }}\n        // When inside scroll we set the menu position by js and we can't follow the drop down location while use scrolling\n        closeMenuOnScroll={closeMenuOnScroll}\n        size={size}\n        noOptionsMessage={noOptionsMessage}\n        placeholder={placeholder}\n        isDisabled={disabled}\n        isClearable={!readOnly && clearable}\n        isSearchable={!readOnly && searchable}\n        readOnly={readOnly}\n        aria-readonly={readOnly}\n        aria-label={overrideAriaLabel}\n        aria-details={tooltipContent}\n        defaultValue={defaultValue}\n        value={value}\n        onMenuOpen={onMenuOpen}\n        onMenuClose={onMenuClose}\n        onFocus={onFocus}\n        onBlur={onBlur}\n        onChange={onChange}\n        onKeyDown={onKeyDown}\n        onInputChange={onInputChange}\n        openMenuOnFocus={openMenuOnFocus}\n        openMenuOnClick={openMenuOnClick}\n        isRtl={rtl}\n        styles={inlineStyles}\n        theme={customTheme}\n        maxMenuHeight={maxMenuHeight}\n        menuPortalTarget={overrideMenuPortalTarget}\n        menuPlacement={menuPlacement}\n        menuPosition={menuPosition}\n        menuIsOpen={!readOnly && menuIsOpen}\n        tabIndex={tabIndex}\n        id={id}\n        data-testid={dataTestId || getTestId(ComponentDefaultTestId.DROPDOWN, id)}\n        autoFocus={autoFocus}\n        closeMenuOnSelect={closeMenuOnSelect}\n        ref={ref}\n        withMandatoryDefaultOptions={withMandatoryDefaultOptions}\n        isOptionSelected={isOptionSelected}\n        isLoading={isLoading}\n        loadingMessage={loadingMessage}\n        tabSelectsValue={tabSelectsValue}\n        filterOption={filterOption}\n        {...asyncAdditions}\n        {...additions}\n      />\n    );\n  }\n);\n\nObject.assign(Dropdown, {\n  // TODO Deprecate Dropdown.size in the next major version - use Dropdown.sizes instead\n  size: SIZES,\n  sizes: SIZES,\n  chipColors: DROPDOWN_CHIP_COLORS,\n  menuPlacements: DROPDOWN_MENU_PLACEMENT,\n  menuPositions: DROPDOWN_MENU_POSITION,\n  createFilter: createFilter\n});\n\nDropdown.defaultProps = {\n  className: \"\",\n  optionWrapperClassName: undefined,\n  dropdownMenuWrapperClassName: undefined,\n  singleValueWrapperClassName: undefined,\n  placeholder: \"\",\n  onMenuOpen: NOOP,\n  onMenuClose: NOOP,\n  onKeyDown: NOOP,\n  onFocus: NOOP,\n  onBlur: NOOP,\n  onChange: NOOP,\n  onInputChange: NOOP,\n  searchable: true,\n  options: [],\n  menuPlacement: Dropdown.menuPlacements.BOTTOM,\n  menuPosition: Dropdown.menuPositions.ABSOLUTE,\n  noOptionsMessage: NOOP,\n  clearable: true,\n  size: SIZES.MEDIUM,\n  extraStyles: defaultCustomStyles,\n  tabIndex: \"0\",\n  onOptionRemove: undefined,\n  id: DROPDOWN_ID,\n  autoFocus: false,\n  closeMenuOnSelect: undefined,\n  closeMenuOnScroll: false,\n  ref: undefined,\n  withMandatoryDefaultOptions: false,\n  insideOverflowContainer: false,\n  insideOverflowWithTransformContainer: false,\n  tooltipContent: \"\",\n  disabled: false,\n  readOnly: false,\n  isLoading: false,\n  loadingMessage: undefined,\n  ariaLabel: undefined,\n  filterOption: undefined\n};\n\nDropdown.propTypes = {\n  /**\n   * Custom style\n   */\n  className: PropTypes.string,\n  /** ClassName to be added to dropdown option wrapper (dropdown-wrapper__option--reset) */\n  optionWrapperClassName: PropTypes.string,\n  /** ClassName to be added to dropdown single value wrapper (dropdown-wrapper__single-value--reset) */\n  singleValueWrapperClassName: PropTypes.string,\n  /** ClassName to be added to dropdown menu wrapper (dropdown-menu-wrapper) */\n  dropdownMenuWrapperClassName: PropTypes.string,\n  /**\n   * Placeholder to show when no value was selected\n   */\n  placeholder: PropTypes.string,\n  /**\n   * If set to true, dropdown will be disabled\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If set to true, dropdown won't be editable\n   */\n  readOnly: PropTypes.bool,\n  /**\n   * Called when menu is opened\n   */\n  onMenuOpen: PropTypes.func,\n  /**\n   * Called when menu is closed\n   */\n  onMenuClose: PropTypes.func,\n  /**\n   * Called when key is pressed in the dropdown\n   */\n  onKeyDown: PropTypes.func,\n  /**\n   * Called when focused\n   */\n  onFocus: PropTypes.func,\n  /**\n   * Called when blurred\n   */\n  onBlur: PropTypes.func,\n  /**\n   * Called when selected value has changed\n   */\n  onChange: PropTypes.func,\n  /**\n   * Called when the dropdown's input changes.\n   */\n  onInputChange: PropTypes.func,\n  /**\n   * If true, search in options will be enabled\n   */\n  searchable: PropTypes.bool,\n  /**\n   * The dropdown options\n   */\n  options: PropTypes.arrayOf(PropTypes.object),\n  /**\n   * Text to display when there are no options\n   */\n  noOptionsMessage: PropTypes.func,\n  /**\n   * If set to true, the menu will open when focused\n   */\n  openMenuOnFocus: PropTypes.bool,\n  /**\n   * If set to true, the menu will open when clicked\n   */\n  openMenuOnClick: PropTypes.bool,\n  /**\n   * If set to true, clear button will be added\n   */\n  clearable: PropTypes.bool,\n  /**\n   * custom option render function\n   */\n  optionRenderer: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n  /**\n   * custom value render function\n   */\n  valueRenderer: PropTypes.func,\n  /**\n   * custom menu render function\n   */\n  menuRenderer: PropTypes.func,\n  /**\n   * Default placement of the Dropdown menu in relation to its control. Use \"auto\" to flip the menu when there isn't enough space below the control.\n   */\n  menuPlacement: PropTypes.oneOf(Object.values(DROPDOWN_MENU_PLACEMENT)),\n  /**\n   * The CSS position value of the menu, when \"fixed\" extra layout management might be required\n   * Fixed position can be used to solve the issue of positioning Dropdown inside overflow container like Modal or Dialog\n   */\n  menuPosition: PropTypes.oneOf(Object.values(DROPDOWN_MENU_POSITION)),\n  /**\n   * If set to true, the dropdown will be in Right to Left mode\n   */\n  rtl: PropTypes.bool,\n  /**\n   * Set default selected value\n   */\n  defaultValue: PropTypes.oneOfType([\n    PropTypes.arrayOf(\n      PropTypes.shape({\n        label: PropTypes.string.isRequired,\n        value: PropTypes.string.isRequired\n      })\n    ),\n    PropTypes.shape({\n      label: PropTypes.string.isRequired,\n      value: PropTypes.string.isRequired\n    })\n  ]),\n  /**\n   * The component's value.\n   * When passed, makes this a [controlled](https://reactjs.org/docs/forms.html#controlled-components) component.\n   */\n  value: PropTypes.oneOfType([\n    PropTypes.arrayOf(\n      PropTypes.shape({\n        label: PropTypes.string.isRequired,\n        value: PropTypes.string.isRequired\n      })\n    ),\n    PropTypes.shape({\n      label: PropTypes.string.isRequired,\n      value: PropTypes.string.isRequired\n    })\n  ]),\n  /**\n   * Select menu size from `Dropdown.size` - Dropdown.sizes.LARGE | Dropdown.sizes.MEDIUM | Dropdown.sizes.SMALL\n   */\n  size: PropTypes.string,\n  /**\n   * If provided Dropdown will work in async mode. Can be either promise or callback\n   */\n  asyncOptions: PropTypes.oneOfType([\n    PropTypes.func, // callback\n    PropTypes.shape({\n      then: PropTypes.func.isRequired,\n      catch: PropTypes.func.isRequired\n    }) // Promise\n  ]),\n  /**\n   * If set to true, fetched async options will be cached\n   */\n  cacheOptions: PropTypes.bool,\n  /**\n   * If set, `asyncOptions` will be invoked with its value on mount and the resolved results will be loaded\n   */\n  defaultOptions: PropTypes.oneOfType([PropTypes.bool, PropTypes.arrayOf(PropTypes.object)]),\n  /**\n   * If set to true, the menu will use virtualization. Virtualized async works only with\n   */\n  isVirtualized: PropTypes.bool,\n  /**\n   * Whether the menu should use a portal, and where it should attach\n   */\n  menuPortalTarget: PropTypes.oneOfType([PropTypes.element, PropTypes.object]),\n  /**\n   * Custom function to override existing styles (similar to `react-select`'s `style` prop), for example: `base => ({...base, color: 'red'})`, where `base` is the component's default styles\n   */\n  extraStyles: PropTypes.func,\n  /**\n   * Maximum height of the menu before scrolling\n   */\n  maxMenuHeight: PropTypes.number,\n  /**\n   * Tab index for keyboard navigation purposes\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  /**\n   * ID for the select container\n   */\n  id: PropTypes.string,\n  /**\n   * focusAuto when component mount\n   */\n  autoFocus: PropTypes.bool,\n  /**\n   * If set to true, the dropdown will be in multi-select mode.\n   * When in multi-select mode, the selected value will be an array,\n   * and it will be displayed as our [`<Chips>`](/?path=/docs/components-chips--sandbox) component.\n   */\n  multi: PropTypes.bool,\n  /**\n   * If set to true together with `multi`, it will make the dropdown expand to multiple lines when new values are selected.\n   */\n  multiline: PropTypes.bool,\n  /**\n   Pass closeMenuOnSelect to close the multi choose any time an options is chosen.\n   */\n  closeMenuOnSelect: PropTypes.bool,\n  // Won't be needed once we upgrade to react-select ^5.5 https://github.com/JedWatson/react-select/issues/4088#issuecomment-1276835389\n  /**\n   * If menu should be closed on scroll - helpful for some tricky use cases\n   * @default false, but true when insideOverflowContainer or insideOverflowWithTransformContainer are true\n   */\n  closeMenuOnScroll: PropTypes.bool,\n  /**\n   * callback to be called when `multiline` is `true` and the option is removed\n   */\n  onOptionRemove: PropTypes.func,\n  /**\n   Pass Ref for reference of the actual dropdown component\n   */\n  ref: PropTypes.func,\n  /**\n   The options set by default will be set as mandatory and the user will not be able to cancel their selection\n   */\n  withMandatoryDefaultOptions: PropTypes.bool,\n  /**\n   * Override the built-in logic to detect whether an option is selected.\n   */\n  isOptionSelected: PropTypes.func,\n  /**\n   * For display the drop down menu in overflow hidden/scroll container.\n   */\n  insideOverflowContainer: PropTypes.bool,\n  /**\n   * For display the drop down menu in overflow hidden/scroll container which contains transform css function usage.\n   */\n  insideOverflowWithTransformContainer: PropTypes.bool,\n  /**\n   * When content is passed, the dropdown will include a tooltip on the dropdown's value.\n   */\n  tooltipContent: PropTypes.string,\n  /**\n   * Display the drop down with loading state.\n   */\n  isLoading: PropTypes.bool,\n  /**\n   * Overrides the built-in logic of loading message design\n   */\n  loadingMessage: PropTypes.func,\n  /**\n   * aria-label attribute for dropdown\n   */\n  ariaLabel: PropTypes.string,\n  /**\n   * Overrides the built-in logic of tab selecting value (default: true)\n   */\n  tabSelectsValue: PropTypes.bool,\n  /**\n   * Overrides the build-in search filter logic - https://react-select.com/advanced#custom-filter-logic\n   * createFilter function is available at Dropdown.createFilter\n   */\n  filterOption: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n};\n\nexport default Dropdown;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}