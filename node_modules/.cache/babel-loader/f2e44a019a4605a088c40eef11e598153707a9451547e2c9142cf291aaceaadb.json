{"ast":null,"code":"import { jsx as r } from \"react/jsx-runtime\";\nimport { useCallback as e } from \"react\";\nimport t from \"react-inlinesvg\";\nimport o from \"../../../hooks/useIconScreenReaderAccessProps.js\";\nimport { ComponentDefaultTestId as s } from \"../../../tests/constants.js\";\nimport { getTestId as i } from \"../../../tests/testIds.js\";\nfunction a(r) {\n  var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : \"currentColor\";\n  return r.replace(/fill=\".*?\"/g, 'fill=\"'.concat(e, '\"'));\n}\nvar n = function (n) {\n  var c = n.className,\n    l = n.ref,\n    m = n.src,\n    f = n.onClick,\n    u = n.replaceToCurrentColor,\n    d = void 0 !== u && u,\n    p = n.customColor,\n    C = n.id,\n    v = n[\"data-testid\"],\n    b = o({\n      isClickable: n.clickable,\n      label: n.ariaLabel,\n      isDecorationOnly: n.ariaHidden\n    }),\n    g = e(function (r) {\n      return d ? a(r, \"currentColor\") : p ? a(r, p) : r;\n    }, [d, p]);\n  return \"string\" != typeof m ? null : r(t, Object.assign({\n    innerRef: l\n  }, b, {\n    onClick: f,\n    src: m,\n    className: c,\n    preProcessor: g,\n    id: C,\n    \"data-testid\": v || i(s.SVG_ICON, C)\n  }));\n};\nexport { n as default };","map":{"version":3,"names":["a","r","e","arguments","length","replace","concat","n","CustomSvgIcon$1","c","className","l","ref","m","src","f","onClick","u","replaceToCurrentColor","d","p","customColor","C","id","v","b","o","isClickable","clickable","label","ariaLabel","isDecorationOnly","ariaHidden","g","t","Object","assign","innerRef","preProcessor","i","s","SVG_ICON","default"],"sources":["/Users/huynhmannguyen/Documents/GitHub/Huy_app/node_modules/monday-ui-react-core/src/components/Icon/CustomSvgIcon/CustomSvgIcon.tsx"],"sourcesContent":["import React, { FunctionComponent, useCallback, AriaRole, Ref } from \"react\";\nimport SVG from \"react-inlinesvg\";\nimport useIconScreenReaderAccessProps from \"../../../hooks/useIconScreenReaderAccessProps\";\nimport VibeComponentProps from \"../../../types/VibeComponentProps\";\nimport { ComponentDefaultTestId } from \"../../../tests/constants\";\nimport { getTestId } from \"../../../tests/test-ids-utils\";\n\nfunction modifySvgCode(svg: string, color = \"currentColor\") {\n  return svg.replace(/fill=\".*?\"/g, `fill=\"${color}\"`);\n}\n\ninterface CustomSvgIconProps extends VibeComponentProps {\n  onClick?: (event: React.MouseEvent) => void;\n  src: string | object;\n  ariaLabel?: string;\n  tabIndex?: number;\n  role?: AriaRole;\n  ariaHidden?: boolean;\n  clickable?: boolean;\n  replaceToCurrentColor?: boolean;\n  customColor?: string;\n  ref?: Ref<SVGElement>;\n}\n\nconst CustomSvgIcon: FunctionComponent<CustomSvgIconProps> = ({\n  className,\n  ref,\n  src,\n  onClick,\n  clickable,\n  ariaLabel,\n  ariaHidden,\n  replaceToCurrentColor = false,\n  customColor,\n  id,\n  \"data-testid\": dataTestId\n}) => {\n  const screenReaderAccessProps = useIconScreenReaderAccessProps({\n    isClickable: clickable,\n    label: ariaLabel,\n    isDecorationOnly: ariaHidden\n  });\n\n  const svgProcessor = useCallback(\n    (svg: string) => {\n      if (replaceToCurrentColor) return modifySvgCode(svg, \"currentColor\");\n      if (customColor) return modifySvgCode(svg, customColor);\n      return svg;\n    },\n    [replaceToCurrentColor, customColor]\n  );\n\n  if (typeof src !== \"string\") return null;\n\n  return (\n    <SVG\n      innerRef={ref}\n      {...screenReaderAccessProps}\n      onClick={onClick}\n      src={src}\n      className={className}\n      preProcessor={svgProcessor}\n      id={id}\n      data-testid={dataTestId || getTestId(ComponentDefaultTestId.SVG_ICON, id)}\n    />\n  );\n};\n\nexport default CustomSvgIcon;\n"],"mappings":";;;;;;AAOA,SAASA,EAAcC,CAAA;EAAmC,IAAtBC,CAAA,GAAKC,SAAA,CAAAC,MAAA,mBAAAD,SAAA,MAAAA,SAAA,MAAG;EAC1C,OAAOF,CAAA,CAAII,OAAA,CAAQ,wBAAaC,MAAA,CAAWJ,CAAA,EAAK,KAClD;AAAA;AAeA,IA4CAK,CAAA,GA5C6D,SAAAC,CAA1CD,CAAA;EAYd,IAXHE,CAAA,GAASF,CAAA,CAATG,SAAA;IACAC,CAAA,GAAGJ,CAAA,CAAHK,GAAA;IACAC,CAAA,GAAGN,CAAA,CAAHO,GAAA;IACAC,CAAA,GAAOR,CAAA,CAAPS,OAAA;IAGUC,CAAA,GAAAV,CAAA,CACVW,qBAAA;IAAAC,CAAA,QAAwB,MAAHF,CAAA,IAAQA,CAAA;IAC7BG,CAAA,GAAWb,CAAA,CAAXc,WAAA;IACAC,CAAA,GAAEf,CAAA,CAAFgB,EAAA;IACeC,CAAA,GAAUjB,CAAA,CAAzB;IAEMkB,CAAA,GAA0BC,CAAA,CAA+B;MAC7DC,WAAA,EATOpB,CAAA,CAATqB,SAAA;MAUEC,KAAA,EATOtB,CAAA,CAATuB,SAAA;MAUEC,gBAAA,EATQxB,CAAA,CAAVyB;IAAA;IAYMC,CAAA,GAAe/B,CAAA,CACnB,UAACD,CAAA;MACC,OAAIkB,CAAA,GAA8BnB,CAAA,CAAcC,CAAA,EAAK,kBACjDmB,CAAA,GAAoBpB,CAAA,CAAcC,CAAA,EAAKmB,CAAA,IACpCnB,CACT;IAAA,GACA,CAACkB,CAAA,EAAuBC,CAAA;EAG1B,OAAmB,mBAARP,CAAA,GAAyB,OAGlCZ,CAAA,CAACiC,CAAA,EAAAC,MAAA,CAAAC,MAAA;IACCC,QAAA,EAAU1B;EAAA,GACNc,CAAA;IACJT,OAAA,EAASD,CAAA;IACTD,GAAA,EAAKD,CAAA;IACLH,SAAA,EAAWD,CAAA;IACX6B,YAAA,EAAcL,CAAA;IACdV,EAAA,EAAID,CAAA;IAAA,eACSE,CAAA,IAAce,CAAA,CAAUC,CAAA,CAAuBC,QAAA,EAAUnB,CAAA;EAAA,GAG5E;AAAA;AAAA,SAAAf,CAAA,IAAAmC,OAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}