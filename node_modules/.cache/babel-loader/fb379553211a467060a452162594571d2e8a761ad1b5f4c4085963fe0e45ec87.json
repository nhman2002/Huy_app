{"ast":null,"code":"import { jsxs as s, jsx as i } from \"react/jsx-runtime\";\nimport e from \"classnames\";\nimport o from \"../../IconButton/IconButton.js\";\nimport t from \"../../Icon/Icons/components/CloseSmall.js\";\nimport a from \"../../Icon/Icon.js\";\nimport { NOOP as n } from \"../../../utils/function-utils.js\";\nimport { getTestId as c } from \"../../../tests/testIds.js\";\nimport { ComponentDefaultTestId as r } from \"../../../tests/constants.js\";\nimport l from \"../../Text/Text.js\";\nimport m from \"../../Heading/Heading.js\";\nimport d from \"../../Flex/Flex.js\";\nimport p from \"./ModalHeader.module.scss.js\";\nvar j = function (j) {\n  var f = j.title,\n    g = j.children,\n    u = j.titleClassName,\n    x = j.description,\n    N = void 0 === x ? \"\" : x,\n    b = j.descriptionClassName,\n    v = j.icon,\n    L = j.closeModal,\n    T = void 0 === L ? n : L,\n    I = j.iconSize,\n    S = void 0 === I ? 24 : I,\n    A = j.iconClassName,\n    O = j.closeButtonAriaLabel,\n    h = void 0 === O ? \"close\" : O,\n    y = j.id,\n    M = j[\"data-testid\"];\n  return s(\"div\", Object.assign({\n    className: e(p.container, j.className),\n    \"data-testid\": M || c(r.MODAL_HEADER, y)\n  }, {\n    children: [g || s(d, Object.assign({\n      align: d.align.START,\n      gap: d.gaps.SMALL,\n      className: u\n    }, {\n      children: [v && i(a, {\n        className: e(p.icon, A),\n        icon: v,\n        iconType: a.type.SVG,\n        iconSize: S,\n        ignoreFocusStyle: !0,\n        clickable: !1\n      }), i(m, Object.assign({\n        id: y,\n        maxLines: 2\n      }, {\n        children: f\n      }))]\n    })), N && i(l, Object.assign({\n      type: l.types.TEXT2,\n      maxLines: 2,\n      className: e(p.description, b)\n    }, {\n      children: N\n    })), i(\"div\", Object.assign({\n      className: e(p.closeButton)\n    }, {\n      children: i(o, {\n        onClick: T,\n        ariaLabel: h,\n        icon: t,\n        kind: o.kinds.TERTIARY,\n        size: o.sizes.SMALL\n      }, \"xxs\")\n    }))]\n  }));\n};\nObject.assign(j, {\n  displayName: \"ModalHeader\"\n});\nvar f = j;\nexport { f as default };","map":{"version":3,"names":["j","ModalHeader","f","title","g","children","u","titleClassName","x","description","N","b","descriptionClassName","v","icon","L","closeModal","T","n","I","iconSize","S","A","iconClassName","O","closeButtonAriaLabel","h","y","id","M","s","Object","assign","className","e","p","container","c","r","MODAL_HEADER","d","align","START","gap","gaps","SMALL","i","a","iconType","type","SVG","ignoreFocusStyle","clickable","m","maxLines","l","types","TEXT2","closeButton","o","onClick","ariaLabel","t","kind","kinds","TERTIARY","size","sizes","displayName","default"],"sources":["/Users/huynhmannguyen/Documents/GitHub/Huy_app/node_modules/monday-ui-react-core/src/components/Modal/ModalHeader/ModalHeader.tsx"],"sourcesContent":["import React, { FC } from \"react\";\nimport cx from \"classnames\";\nimport IconButton from \"../../IconButton/IconButton\";\nimport CloseSmall from \"../../Icon/Icons/components/CloseSmall\";\nimport Icon, { IconSubComponentProps } from \"../../Icon/Icon\";\nimport VibeComponentProps from \"../../../types/VibeComponentProps\";\nimport { NOOP } from \"../../../utils/function-utils\";\nimport { ElementContent } from \"src/types/ElementContent\";\nimport { getTestId } from \"../../../tests/test-ids-utils\";\nimport { ComponentDefaultTestId } from \"../../../tests/constants\";\nimport Text from \"../../Text/Text\";\nimport Heading from \"../../Heading/Heading\";\nimport Flex from \"../../Flex/Flex\";\nimport styles from \"./ModalHeader.module.scss\";\n\nexport interface ModalHeaderProps extends VibeComponentProps {\n  /**\n   * Heading of the modal - using string is a recommended standard, as it provides well-defined styles. Using it with JSX content should be according to design guidelines.\n   */\n  title: ElementContent;\n  /**\n   * Slot for the heading of the modal for maximum flexibility. Using it should be according to design and typography guidelines\n   */\n  children?: ElementContent;\n  /**\n   * Description of the modal - pure string description is a recommended standard, use JSX ability only if there is a need to add links\n   */\n  description?: ElementContent;\n  /**\n   * Icon to be rendered before the title\n   */\n  icon?: string | React.FunctionComponent<IconSubComponentProps> | null;\n  /**\n   * Class name for the wrapper\n   */\n  className?: string;\n  /**\n   * Class name for the title\n   */\n  titleClassName?: string;\n  /**\n   * closes the Modal. No need to provide it, it is being provided by the modal\n   */\n  closeModal?: () => void;\n  /**  /**\n   * ID for the title, needed for accessibility. No need to provide it, it is being provided by the modal\n   */\n  id?: string;\n  /**\n   * Class name for the description\n   */\n  descriptionClassName?: string;\n  /**\n   * Size of the icon\n   */\n  iconSize?: number;\n  /**\n   * class name for the icon\n   */\n  iconClassName?: string;\n  /**\n   * Aria label for the close button\n   */\n  closeButtonAriaLabel?: string;\n  /**\n   * Should close button be hidden or not\n   */\n  hideCloseButton?: boolean;\n}\n\nconst ModalHeader: FC<ModalHeaderProps> = ({\n  className,\n  title,\n  children,\n  titleClassName,\n  description = \"\",\n  descriptionClassName,\n  icon,\n  closeModal = NOOP,\n  iconSize = 24,\n  iconClassName,\n  // TODO remove hideCloseButton on the next breaking changes\n  // eslint-disable-next-line\n  hideCloseButton,\n  closeButtonAriaLabel = \"close\",\n  id,\n  \"data-testid\": dataTestId\n}) => {\n  return (\n    <div\n      className={cx(styles.container, className)}\n      data-testid={dataTestId || getTestId(ComponentDefaultTestId.MODAL_HEADER, id)}\n    >\n      {children ? (\n        children\n      ) : (\n        <Flex align={Flex.align.START} gap={Flex.gaps.SMALL} className={titleClassName}>\n          {icon && (\n            <Icon\n              className={cx(styles.icon, iconClassName)}\n              icon={icon}\n              iconType={Icon.type.SVG}\n              iconSize={iconSize}\n              ignoreFocusStyle\n              clickable={false}\n            />\n          )}\n          <Heading id={id} maxLines={2}>\n            {title}\n          </Heading>\n        </Flex>\n      )}\n      {description && (\n        <Text type={Text.types.TEXT2} maxLines={2} className={cx(styles.description, descriptionClassName)}>\n          {description}\n        </Text>\n      )}\n\n      <div className={cx(styles.closeButton)}>\n        <IconButton\n          key=\"xxs\"\n          onClick={closeModal}\n          ariaLabel={closeButtonAriaLabel}\n          icon={CloseSmall}\n          kind={IconButton.kinds.TERTIARY}\n          size={IconButton.sizes.SMALL}\n        />\n      </div>\n    </div>\n  );\n};\n\nObject.assign(ModalHeader, {\n  displayName: \"ModalHeader\"\n});\n\nexport default ModalHeader;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}