{"ast":null,"code":"import { slicedToArray as e, defineProperty as o } from \"../../../_virtual/_rollupPluginBabelHelpers.js\";\nimport { jsx as i, jsxs as t } from \"react/jsx-runtime\";\nimport r, { forwardRef as n, useRef as s, useState as a, useCallback as d, useMemo as l, useLayoutEffect as g } from \"react\";\nimport c from \"classnames\";\nimport { camelCase as p } from \"lodash-es\";\nimport { isForwardRef as m } from \"react-is\";\nimport u from \"../Dialog/Dialog.js\";\nimport h from \"../DialogContentContainer/DialogContentContainer.js\";\nimport f from \"../Tooltip/Tooltip.js\";\nimport { backwardCompatibilityForProperties as T } from \"../../helpers/backwardCompatibilityForProperties.js\";\nimport C from \"../../hooks/useMergeRef.js\";\nimport { BUTTON_ICON_SIZE as v } from \"../Button/ButtonConstants.js\";\nimport { withStaticProps as E } from \"../../types/withStaticProps.js\";\nimport { MenuButtonSize as S, MenuButtonComponentPosition as w } from \"./MenuButtonConstants.js\";\nimport { HideShowEvent as j } from \"../Dialog/consts/dialog-show-hide-event.js\";\nimport { NOOP as b } from \"../../utils/function-utils.js\";\nimport { getStyle as M } from \"../../helpers/typesciptCssModulesHelper.js\";\nimport { getTestId as P, ComponentDefaultTestId as O } from \"../../tests/testIds.js\";\nimport y from \"./MenuButton.module.scss.js\";\nimport A from \"../Icon/Icons/components/Menu.js\";\nimport { AnimationType as N } from \"../../constants/dialog.js\";\nvar D = [f.hideShowTriggers.MOUSE_ENTER],\n  I = [j.CLICK, j.ENTER],\n  R = [],\n  _ = {\n    main: 8,\n    secondary: 0\n  },\n  z = n(function (n, E) {\n    var w = n.id,\n      j = n.className,\n      B = n.componentClassName,\n      L = n.openDialogComponentClassName,\n      H = n.children,\n      x = n.component,\n      K = void 0 === x ? A : x,\n      U = n.componentPosition,\n      k = void 0 === U ? z.componentPositions.START : U,\n      F = n.size,\n      Y = void 0 === F ? S.SMALL : F,\n      W = n.open,\n      X = void 0 !== W && W,\n      V = n.onClick,\n      q = void 0 === V ? b : V,\n      G = n.zIndex,\n      J = void 0 === G ? null : G,\n      Q = n.ariaLabel,\n      Z = void 0 === Q ? \"Menu\" : Q,\n      $ = n.closeDialogOnContentClick,\n      ee = void 0 !== $ && $,\n      oe = n.dialogOffset,\n      ie = void 0 === oe ? _ : oe,\n      te = n.dialogPosition,\n      re = void 0 === te ? u.positions.BOTTOM_START : te,\n      ne = n.dialogClassName,\n      se = n.dialogPaddingSize,\n      ae = void 0 === se ? h.sizes.MEDIUM : se,\n      de = n.dialogShowTriggerIgnoreClass,\n      le = n.dialogHideTriggerIgnoreClass,\n      ge = n.onMenuHide,\n      ce = void 0 === ge ? b : ge,\n      pe = n.onMenuShow,\n      me = void 0 === pe ? b : pe,\n      ue = n.disabled,\n      he = void 0 !== ue && ue,\n      fe = n.text,\n      Te = n.tooltipContent,\n      Ce = n.tooltipProps,\n      ve = n.disabledReason,\n      Ee = n.tooltipTriggers,\n      Se = void 0 === Ee ? [z.hideTriggers.MOUSE_LEAVE] : Ee,\n      we = n.tooltipPosition,\n      je = void 0 === we ? z.dialogPositions.RIGHT : we,\n      be = n.startingEdge,\n      Me = void 0 === be ? \"bottom\" : be,\n      Pe = n.removeTabCloseTrigger,\n      Oe = void 0 !== Pe && Pe,\n      ye = n.tooltipReferenceClassName,\n      Ae = n.hideWhenReferenceHidden,\n      Ne = void 0 !== Ae && Ae,\n      De = n.dialogContainerSelector,\n      Ie = n.active,\n      Re = n.triggerElement,\n      _e = void 0 === Re ? \"button\" : Re,\n      ze = n[\"data-testid\"],\n      Be = s(null),\n      Le = C(E, Be),\n      He = a(X),\n      xe = e(He, 2),\n      Ke = xe[0],\n      Ue = xe[1],\n      ke = null != Ie ? Ie : Ke,\n      Fe = d(function (e) {\n        if (e && \"Escape\" === e.key) {\n          Ue(!1);\n          var o = Be.current;\n          window.requestAnimationFrame(function () {\n            o.focus();\n          });\n        }\n      }, [Be, Ue]),\n      Ye = d(function (e, o) {\n        Ue(!1), ce();\n        var i = Be.current;\n        window.requestAnimationFrame(function () {\n          i && o === u.hideShowTriggers.ESCAPE_KEY && i.focus();\n        });\n      }, [Ue, ce, Be]),\n      We = d(function () {\n        Ue(!0), me();\n      }, [Ue, me]),\n      Xe = l(function () {\n        var e = new Set([u.hideShowTriggers.CLICK_OUTSIDE, u.hideShowTriggers.TAB_KEY, u.hideShowTriggers.ESCAPE_KEY]);\n        return ee && (e.add(u.hideShowTriggers.CONTENT_CLICK), e.add(u.hideShowTriggers.ENTER)), Oe && e.delete(u.hideShowTriggers.TAB_KEY), [r.Children.toArray(H).map(function (o) {\n          if (!r.isValidElement(o)) return null;\n          var i = {};\n          return o.type && o.type.supportFocusOnMount && (i.focusOnMount = !0, e.delete(u.hideShowTriggers.ESCAPE_KEY)), o.type && o.type.isMenu && (i.onClose = Fe), r.cloneElement(o, i);\n        }), Array.from(e)];\n      }, [H, Fe, ee, Oe]),\n      Ve = e(Xe, 2),\n      qe = Ve[0],\n      Ge = Ve[1],\n      Je = l(function () {\n        return 0 === qe.length ? null : i(h, Object.assign({\n          size: ae,\n          type: h.types.POPOVER\n        }, {\n          children: qe\n        }));\n      }, [qe, ae]),\n      Qe = l(function () {\n        return Object.assign(Object.assign({}, _), ie);\n      }, [ie]),\n      Ze = K,\n      $e = l(function () {\n        switch (Y) {\n          case S.XXS:\n          case S.XS:\n            return 16;\n          case S.SMALL:\n          case S.MEDIUM:\n          case S.LARGE:\n            return v;\n          default:\n            return 24;\n        }\n      }, [Y]),\n      eo = Ze ? i(Ze, {\n        size: \"\" + $e,\n        role: \"img\",\n        \"aria-hidden\": \"true\"\n      }) : null;\n    g(function () {\n      Ue(X);\n    }, [X, Ue]);\n    var oo = T([Te, ve]),\n      io = T([j, B]),\n      to = \"button\" === _e ? {\n        ref: Le\n      } : {\n        active: ke,\n        disabled: he,\n        ref: m(_e) ? Le : void 0\n      };\n    return i(f, Object.assign({\n      content: oo,\n      position: je,\n      showTrigger: D,\n      hideTrigger: Se,\n      referenceWrapperClassName: ye,\n      hideWhenReferenceHidden: Ne\n    }, Ce, {\n      children: i(u, Object.assign({\n        wrapperClassName: ne,\n        position: re,\n        containerSelector: De,\n        startingEdge: Me,\n        animationType: N.EXPAND,\n        content: Je,\n        moveBy: Qe,\n        showTrigger: he ? R : I,\n        hideTrigger: Ge,\n        showTriggerIgnoreClass: de,\n        hideTriggerIgnoreClass: le,\n        useDerivedStateFromProps: !0,\n        onDialogDidShow: We,\n        onDialogDidHide: Ye,\n        zIndex: J,\n        isOpen: Ke,\n        hideWhenReferenceHidden: Ne\n      }, {\n        children: t(_e, Object.assign({\n          id: w,\n          \"data-testid\": ze || P(O.MENU_BUTTON, w),\n          type: \"button\",\n          className: c(y.wrapper, io, M(y, p(\"size-\".concat(Y))), o(o(o(o({}, y.active, ke), M(y, L), Ke && L), y.disabled, he), y.text, fe)),\n          \"aria-haspopup\": \"true\",\n          \"aria-expanded\": Ke,\n          \"aria-label\": !fe && Z,\n          onMouseUp: function (e) {\n            he ? e.currentTarget.blur() : q(e);\n          },\n          \"aria-disabled\": he\n        }, to, {\n          children: [k === z.componentPositions.START && eo, fe && i(\"span\", Object.assign({\n            className: y.innerText\n          }, {\n            children: fe\n          })), k === z.componentPositions.END && eo]\n        }))\n      }))\n    }));\n  }),\n  B = E(z, {\n    sizes: S,\n    paddingSizes: h.sizes,\n    dialogPositions: u.positions,\n    hideTriggers: u.hideShowTriggers,\n    componentPositions: w\n  });\nexport { B as default };","map":{"version":3,"names":["D","f","hideShowTriggers","MOUSE_ENTER","I","j","CLICK","ENTER","R","_","main","secondary","z","n","E","w","id","className","B","componentClassName","L","openDialogComponentClassName","H","children","x","component","K","A","U","componentPosition","k","componentPositions","START","F","size","Y","S","SMALL","W","open","X","V","onClick","q","b","G","zIndex","J","Q","ariaLabel","Z","$","closeDialogOnContentClick","ee","oe","dialogOffset","ie","te","dialogPosition","re","u","positions","BOTTOM_START","ne","dialogClassName","se","dialogPaddingSize","ae","h","sizes","MEDIUM","de","dialogShowTriggerIgnoreClass","le","dialogHideTriggerIgnoreClass","ge","onMenuHide","ce","pe","onMenuShow","me","ue","disabled","he","fe","text","Te","tooltipContent","Ce","tooltipProps","ve","disabledReason","Ee","tooltipTriggers","Se","hideTriggers","MOUSE_LEAVE","we","tooltipPosition","je","dialogPositions","RIGHT","be","startingEdge","Me","Pe","removeTabCloseTrigger","Oe","ye","tooltipReferenceClassName","Ae","hideWhenReferenceHidden","Ne","De","dialogContainerSelector","Ie","active","Re","triggerElement","_e","ze","Be","s","Le","C","He","a","xe","e","Ke","Ue","ke","Fe","d","key","o","current","window","requestAnimationFrame","focus","Ye","i","ESCAPE_KEY","We","Xe","l","Set","CLICK_OUTSIDE","TAB_KEY","add","CONTENT_CLICK","delete","r","Children","toArray","map","isValidElement","type","supportFocusOnMount","focusOnMount","isMenu","onClose","cloneElement","Array","from","Ve","qe","Ge","Je","length","Object","assign","types","POPOVER","Qe","Ze","$e","XXS","XS","LARGE","v","eo","role","g","oo","T","io","to","ref","m","content","position","showTrigger","hideTrigger","referenceWrapperClassName","wrapperClassName","containerSelector","animationType","N","EXPAND","moveBy","showTriggerIgnoreClass","hideTriggerIgnoreClass","useDerivedStateFromProps","onDialogDidShow","onDialogDidHide","isOpen","t","P","O","MENU_BUTTON","c","y","wrapper","M","p","concat","onMouseUp","currentTarget","blur","innerText","END","paddingSizes","default"],"sources":["/Users/huynhmannguyen/Documents/GitHub/Huy_app/node_modules/monday-ui-react-core/src/components/MenuButton/MenuButton.tsx"],"sourcesContent":["import React, { forwardRef, useCallback, useLayoutEffect, useMemo, useRef, useState } from \"react\";\nimport cx from \"classnames\";\nimport { camelCase } from \"lodash-es\";\nimport { isForwardRef } from \"react-is\";\nimport Dialog, { DialogEvent } from \"../Dialog/Dialog\";\nimport DialogContentContainer from \"../DialogContentContainer/DialogContentContainer\";\nimport Tooltip, { TooltipProps } from \"../Tooltip/Tooltip\";\nimport { backwardCompatibilityForProperties } from \"../../helpers/backwardCompatibilityForProperties\";\nimport useMergeRef from \"../../hooks/useMergeRef\";\nimport { BUTTON_ICON_SIZE } from \"../Button/ButtonConstants\";\nimport { ElementContent, VibeComponent, VibeComponentProps, withStaticProps } from \"../../types\";\nimport { MenuButtonComponentPosition, MenuButtonSize } from \"./MenuButtonConstants\";\nimport { AnimationType, DialogOffset, DialogPosition } from \"../../constants\";\nimport { HideShowEvent } from \"../Dialog/consts/dialog-show-hide-event\";\nimport { NOOP } from \"../../utils/function-utils\";\nimport { DialogSize } from \"../DialogContentContainer/DialogContentContainerConstants\";\nimport { Menu } from \"../Icon/Icons\";\nimport { getStyle } from \"../../helpers/typesciptCssModulesHelper\";\nimport { ComponentDefaultTestId, getTestId } from \"../../tests/test-ids-utils\";\nimport { MenuChild } from \"../Menu/Menu/MenuConstants\";\nimport styles from \"./MenuButton.module.scss\";\n\nconst TOOLTIP_SHOW_TRIGGER = [Tooltip.hideShowTriggers.MOUSE_ENTER];\nconst DIALOG_SHOW_TRIGGER = [HideShowEvent.CLICK, HideShowEvent.ENTER];\nconst EMPTY_ARRAY: HideShowEvent[] = [];\nconst MOVE_BY = { main: 8, secondary: 0 };\n\ninterface MenuButtonProps extends VibeComponentProps {\n  /**\n   * @deprecated - use className instead\n   */\n  componentClassName?: string;\n  /**\n   * Control the button's selected state\n   */\n  active?: boolean;\n  /**\n   *Class name to add to the button when the dialog is open\n   */\n  openDialogComponentClassName?: string;\n  /**\n   * Receives React Component\n   */\n  component?: () => JSX.Element;\n  size?: MenuButtonSize;\n  open?: boolean;\n  onClick?: (event: React.MouseEvent) => void;\n  zIndex?: number;\n  ariaLabel?: string;\n  closeDialogOnContentClick?: boolean;\n  /*\n    Class name to provide the element which wraps the popover/modal/dialog\n   */\n  dialogClassName?: string;\n  /**\n   * main - `dialogOffset.main` - main axis offset; `dialogOffset.secondary` secondary axis offset\n   */\n  dialogOffset?: DialogOffset;\n  dialogPaddingSize?: DialogSize;\n  dialogPosition?: DialogPosition;\n  dialogShowTriggerIgnoreClass?: string;\n  dialogHideTriggerIgnoreClass?: string;\n  /**\n   * the container selector in which to append the dialog\n   * for examples: \"body\" , \".my-class\", \"#my-id\"\n   */\n  dialogContainerSelector?: string;\n  /**\n   * Dialog Alignment\n   */\n  startingEdge?: string;\n  /*\n    Callback function to be called when the menu is shown\n   */\n  onMenuShow?: () => void;\n  /*\n  Callback function to be called when the menu is shown\n */\n  onMenuHide?: () => void;\n  /**\n   * Text to be displayed after the icon\n   */\n  text?: string;\n  disabled?: boolean;\n  tooltipContent?: string;\n  /**\n   Remove \"Tab\" key from the hide trigger\n   */\n  removeTabCloseTrigger?: boolean;\n  /**\n   is an array with the content of types:\n   CLICK, CLICK_OUTSIDE, ESCAPE_KEY, TAB_KEY, MOUSE_ENTER, MOUSE_LEAVE,\n   ENTER, MOUSE_DOWN, FOCUS, BLUR, CONTENT_CLICK\n   */\n  tooltipTriggers?: HideShowEvent | HideShowEvent[];\n  /**\n   * the disabled/tooltip position of the menu button - one of the MenuButton.dialogPositions\n   */\n  tooltipPosition?: DialogPosition;\n  /**\n   * Tooltip Element Wrapper ClassName\n   */\n  tooltipReferenceClassName?: string;\n  tooltipProps?: Partial<TooltipProps>;\n  /**\n   * When the MenuButton is hidden hide the dialog and tooltip as well\n   */\n  hideWhenReferenceHidden?: boolean;\n  /**\n   * @deprecated - use tooltipContent instead\n   */\n  disabledReason?: string;\n  children?: ElementContent;\n  /**\n   * Specifies whether to render the component before or after the text\n   */\n  componentPosition?: (typeof MenuButtonComponentPosition)[keyof typeof MenuButtonComponentPosition];\n  /**\n   * Element to be used as the trigger element for the Menu - default is button\n   */\n  triggerElement?: React.ElementType;\n}\n\nconst MenuButton: VibeComponent<MenuButtonProps> & {\n  sizes?: typeof MenuButtonSize;\n  paddingSizes?: typeof DialogContentContainer.sizes;\n  dialogPositions?: typeof DialogPosition;\n  hideTriggers?: typeof Dialog.hideShowTriggers;\n  componentPositions?: typeof MenuButtonComponentPosition;\n} = forwardRef(\n  (\n    {\n      id,\n      className,\n      // Backward compatibility for props naming\n      componentClassName,\n      openDialogComponentClassName,\n      children,\n      component = Menu,\n      componentPosition = MenuButton.componentPositions.START,\n      size = MenuButtonSize.SMALL,\n      open = false,\n      onClick = NOOP,\n      zIndex = null,\n      ariaLabel = \"Menu\",\n      closeDialogOnContentClick = false,\n      dialogOffset = MOVE_BY,\n      dialogPosition = Dialog.positions.BOTTOM_START,\n      dialogClassName,\n      dialogPaddingSize = DialogContentContainer.sizes.MEDIUM,\n      dialogShowTriggerIgnoreClass,\n      dialogHideTriggerIgnoreClass,\n      onMenuHide = NOOP,\n      onMenuShow = NOOP,\n      disabled = false,\n      text,\n      tooltipContent,\n      tooltipProps,\n      // Backward compatibility for props naming\n      disabledReason,\n      tooltipTriggers = [MenuButton.hideTriggers.MOUSE_LEAVE],\n      tooltipPosition = MenuButton.dialogPositions.RIGHT,\n      startingEdge = \"bottom\",\n      removeTabCloseTrigger = false,\n      tooltipReferenceClassName,\n      hideWhenReferenceHidden = false,\n      dialogContainerSelector,\n      active,\n      triggerElement: TriggerElement = \"button\",\n      \"data-testid\": dataTestId\n    },\n    ref\n  ) => {\n    const componentRef = useRef(null);\n    const mergedRef = useMergeRef(ref, componentRef);\n\n    const [isOpen, setIsOpen] = useState(open);\n    const isActive = active ?? isOpen;\n\n    const onMenuDidClose = useCallback(\n      (event: React.KeyboardEvent) => {\n        if (event && event.key === \"Escape\") {\n          setIsOpen(false);\n          const button = componentRef.current;\n          window.requestAnimationFrame(() => {\n            button.focus();\n          });\n        }\n      },\n      [componentRef, setIsOpen]\n    );\n\n    const onDialogDidHide = useCallback(\n      (event: DialogEvent, hideEvent: string) => {\n        setIsOpen(false);\n        onMenuHide();\n        const button = componentRef.current;\n        window.requestAnimationFrame(() => {\n          if (button && hideEvent === Dialog.hideShowTriggers.ESCAPE_KEY) {\n            button.focus();\n          }\n        });\n      },\n      [setIsOpen, onMenuHide, componentRef]\n    );\n\n    const onDialogDidShow = useCallback(() => {\n      setIsOpen(true);\n      onMenuShow();\n    }, [setIsOpen, onMenuShow]);\n\n    const [clonedChildren, hideTrigger] = useMemo(() => {\n      const triggers = new Set([\n        Dialog.hideShowTriggers.CLICK_OUTSIDE,\n        Dialog.hideShowTriggers.TAB_KEY,\n        Dialog.hideShowTriggers.ESCAPE_KEY\n      ]);\n\n      if (closeDialogOnContentClick) {\n        triggers.add(Dialog.hideShowTriggers.CONTENT_CLICK);\n        triggers.add(Dialog.hideShowTriggers.ENTER);\n      }\n\n      if (removeTabCloseTrigger) {\n        triggers.delete(Dialog.hideShowTriggers.TAB_KEY);\n      }\n      const childrenArr = React.Children.toArray(children) as MenuChild[];\n      const cloned = childrenArr.map(child => {\n        if (!React.isValidElement(child)) return null;\n\n        const newProps: { focusOnMount?: boolean; onClose?: (event: React.KeyboardEvent) => void } = {};\n        if (child.type && child.type.supportFocusOnMount) {\n          newProps.focusOnMount = true;\n          triggers.delete(Dialog.hideShowTriggers.ESCAPE_KEY);\n        }\n\n        if (child.type && child.type.isMenu) {\n          newProps.onClose = onMenuDidClose;\n        }\n\n        return React.cloneElement(child, newProps);\n      });\n      return [cloned, Array.from(triggers)];\n    }, [children, onMenuDidClose, closeDialogOnContentClick, removeTabCloseTrigger]);\n\n    const content = useMemo(() => {\n      if (clonedChildren.length === 0) return null;\n      return (\n        <DialogContentContainer size={dialogPaddingSize} type={DialogContentContainer.types.POPOVER}>\n          {clonedChildren}\n        </DialogContentContainer>\n      );\n    }, [clonedChildren, dialogPaddingSize]);\n\n    const computedDialogOffset = useMemo(\n      () => ({\n        ...MOVE_BY,\n        ...dialogOffset\n      }),\n      [dialogOffset]\n    );\n\n    const onMouseUp = (event: React.MouseEvent<HTMLElement>) => {\n      if (disabled) {\n        event.currentTarget.blur();\n        return;\n      }\n      onClick(event);\n    };\n\n    const Icon = component;\n    const iconSize = useMemo(() => {\n      switch (size) {\n        case MenuButtonSize.XXS:\n        case MenuButtonSize.XS:\n          return 16;\n        case MenuButtonSize.SMALL:\n        case MenuButtonSize.MEDIUM:\n        case MenuButtonSize.LARGE:\n          return BUTTON_ICON_SIZE;\n        default:\n          return 24;\n      }\n    }, [size]);\n    const icon = Icon ? <Icon size={iconSize.toString()} role=\"img\" aria-hidden=\"true\" /> : null;\n\n    useLayoutEffect(() => {\n      setIsOpen(open);\n    }, [open, setIsOpen]);\n\n    const overrideTooltipContent = backwardCompatibilityForProperties([tooltipContent, disabledReason]);\n    const overrideClassName = backwardCompatibilityForProperties([className, componentClassName]);\n\n    // Trigger element props, which are only relevant for \"button\" element, but might be needed for other elements e.g. Button\n    const triggerElementProps =\n      TriggerElement === \"button\"\n        ? {\n            ref: mergedRef\n          }\n        : {\n            active: isActive,\n            disabled: disabled,\n            ref: isForwardRef(TriggerElement) ? mergedRef : undefined\n          };\n\n    return (\n      <Tooltip\n        content={overrideTooltipContent}\n        position={tooltipPosition}\n        showTrigger={TOOLTIP_SHOW_TRIGGER}\n        hideTrigger={tooltipTriggers}\n        referenceWrapperClassName={tooltipReferenceClassName}\n        hideWhenReferenceHidden={hideWhenReferenceHidden}\n        {...tooltipProps}\n      >\n        <Dialog\n          wrapperClassName={dialogClassName}\n          position={dialogPosition}\n          containerSelector={dialogContainerSelector}\n          startingEdge={startingEdge}\n          animationType={AnimationType.EXPAND}\n          content={content}\n          moveBy={computedDialogOffset}\n          showTrigger={disabled ? EMPTY_ARRAY : DIALOG_SHOW_TRIGGER}\n          hideTrigger={hideTrigger}\n          showTriggerIgnoreClass={dialogShowTriggerIgnoreClass}\n          hideTriggerIgnoreClass={dialogHideTriggerIgnoreClass}\n          useDerivedStateFromProps={true}\n          onDialogDidShow={onDialogDidShow}\n          onDialogDidHide={onDialogDidHide}\n          zIndex={zIndex}\n          isOpen={isOpen}\n          hideWhenReferenceHidden={hideWhenReferenceHidden}\n        >\n          <TriggerElement\n            id={id}\n            data-testid={dataTestId || getTestId(ComponentDefaultTestId.MENU_BUTTON, id)}\n            type=\"button\"\n            className={cx(styles.wrapper, overrideClassName, getStyle(styles, camelCase(`size-${size}`)), {\n              [styles.active]: isActive,\n              [getStyle(styles, openDialogComponentClassName)]: isOpen && openDialogComponentClassName,\n              [styles.disabled]: disabled,\n              [styles.text]: text\n            })}\n            aria-haspopup=\"true\"\n            aria-expanded={isOpen}\n            aria-label={!text && ariaLabel}\n            onMouseUp={onMouseUp}\n            aria-disabled={disabled}\n            {...triggerElementProps}\n          >\n            {componentPosition === MenuButton.componentPositions.START && icon}\n            {text && <span className={styles.innerText}>{text}</span>}\n            {componentPosition === MenuButton.componentPositions.END && icon}\n          </TriggerElement>\n        </Dialog>\n      </Tooltip>\n    );\n  }\n);\n\nexport default withStaticProps(MenuButton, {\n  sizes: MenuButtonSize,\n  paddingSizes: DialogContentContainer.sizes,\n  dialogPositions: Dialog.positions,\n  hideTriggers: Dialog.hideShowTriggers,\n  componentPositions: MenuButtonComponentPosition\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}