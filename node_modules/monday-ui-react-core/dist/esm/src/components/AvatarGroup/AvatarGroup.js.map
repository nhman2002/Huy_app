{"version":3,"file":"AvatarGroup.js","sources":["../../../../../src/components/AvatarGroup/AvatarGroup.tsx"],"sourcesContent":["import React, { ReactElement, useMemo } from \"react\";\nimport cx from \"classnames\";\nimport { AvatarProps } from \"../Avatar/Avatar\";\nimport AvatarGroupCounter from \"./AvatarGroupCounter\";\nimport VibeComponentProps from \"../../types/VibeComponentProps\";\nimport { AvatarSize, AvatarType } from \"../Avatar/AvatarConstants\";\nimport { CounterColor } from \"../Counter/CounterConstants\";\nimport { avatarOnClick } from \"./AvatarGroupHelper\";\nimport { TooltipProps } from \"../Tooltip/Tooltip\";\nimport styles from \"./AvatarGroup.module.scss\";\n\nexport type AvatarGroupCounterVisualProps = {\n  color?: CounterColor.LIGHT | CounterColor.DARK;\n  count?: number;\n  prefix?: string;\n  maxDigits?: number;\n  ariaLabelItemsName?: string;\n};\n\ninterface AvatarGroupProps extends VibeComponentProps {\n  avatarClassName?: string;\n  /**\n   * Array of `Avatar` components\n   */\n  children?: ReactElement<AvatarProps> | ReactElement<AvatarProps>[];\n  size?: AvatarSize;\n  type?: AvatarType;\n  max?: number;\n  /**\n   * 4 `Counter.props` for customization + ariaLabelItemsName for specifying the \"items\" name in aria label\n   */\n  counterProps?: AvatarGroupCounterVisualProps;\n  /**\n   * `Tooltip.props`: props for custom counter tooltip\n   */\n  counterTooltipCustomProps?: TooltipProps;\n  /**\n   * Using counter default tooltip virtualized list for rendering only visible items (performance optimization)\n   */\n  counterTooltipIsVirtualizedList?: boolean;\n  /**\n   * If true, padding will be removed from the container\n   */\n  // TODO remove this prop in the next major release, should be no padding by default\n  removePadding?: boolean;\n}\n\nconst AvatarGroup: React.FC<AvatarGroupProps> = ({\n  className,\n  avatarClassName,\n  id,\n  children,\n  size,\n  type,\n  max = 5,\n  counterProps,\n  counterTooltipCustomProps,\n  counterTooltipIsVirtualizedList = false,\n  removePadding = false\n}) => {\n  const { displayAvatars, counterTooltipAvatars } = useMemo(() => {\n    if (!children) {\n      return {};\n    }\n    const childrenArray = Array.isArray(children) ? children : [children];\n    return {\n      displayAvatars: childrenArray.slice(0, max).map((avatar, index) => {\n        return React.cloneElement(avatar, {\n          key: index,\n          ...avatar?.props,\n          size: size || avatar?.props?.size,\n          type: type || avatar?.props?.type,\n          className: cx(styles.avatarContainer, avatarClassName),\n          onClick: (event: React.MouseEvent | React.KeyboardEvent) => avatarOnClick(event, avatar.props)\n        });\n      }),\n      counterTooltipAvatars: childrenArray.slice(max)\n    };\n  }, [avatarClassName, children, max, size, type]);\n\n  if (!children) {\n    return null;\n  }\n\n  return (\n    <div className={cx(styles.avatarGroupContainer, className, { [styles.noPadding]: removePadding })} id={id}>\n      {displayAvatars}\n      <AvatarGroupCounter\n        counterTooltipAvatars={counterTooltipAvatars}\n        counterProps={counterProps}\n        counterTooltipCustomProps={counterTooltipCustomProps}\n        counterTooltipIsVirtualizedList={counterTooltipIsVirtualizedList}\n        size={size}\n        type={type}\n      />\n    </div>\n  );\n};\n\nexport default AvatarGroup;\n"],"names":["AvatarGroup$1","_ref","className","avatarClassName","id","children","size","type","_ref$max","max","counterProps","counterTooltipCustomProps","_ref$counterTooltipIs","counterTooltipIsVirtualizedList","_ref$removePadding","removePadding","_useMemo","useMemo","childrenArray","Array","isArray","displayAvatars","slice","map","avatar","index","React","cloneElement","key","props","_a","_b","cx","styles","avatarContainer","onClick","event","avatarOnClick","counterTooltipAvatars","_jsxs","Object","assign","avatarGroupContainer","_defineProperty","noPadding","_jsx","AvatarGroupCounter"],"mappings":"yUA+CA,IAoDAA,EApDgD,SAA/BC,GAYZ,IAXHC,EAASD,EAATC,UACAC,EAAeF,EAAfE,gBACAC,EAAEH,EAAFG,GACAC,EAAQJ,EAARI,SACAC,EAAIL,EAAJK,KACAC,EAAIN,EAAJM,KAAIC,EAAAP,EACJQ,IAAAA,OAAM,IAAHD,EAAG,EAACA,EACPE,EAAYT,EAAZS,aACAC,EAAyBV,EAAzBU,0BAAyBC,EAAAX,EACzBY,gCAAAA,OAAkC,IAAHD,GAAQA,EAAAE,EAAAb,EACvCc,cAAAA,OAAgB,IAAHD,GAAQA,EAErBE,EAAkDC,GAAQ,WACxD,IAAKZ,EACH,MAAO,GAET,IAAMa,EAAgBC,MAAMC,QAAQf,GAAYA,EAAW,CAACA,GAC5D,MAAO,CACLgB,eAAgBH,EAAcI,MAAM,EAAGb,GAAKc,KAAI,SAACC,EAAQC,WACvD,OAAOC,EAAMC,aAAaH,+BACxBI,IAAKH,GACFD,aAAA,EAAAA,EAAQK,OAAK,CAChBvB,KAAMA,YAAQwB,EAAAN,aAAA,EAAAA,EAAQK,4BAAOvB,MAC7BC,KAAMA,IAAuB,QAAfwB,EAAAP,aAAM,EAANA,EAAQK,aAAO,IAAAE,OAAA,EAAAA,EAAAxB,MAC7BL,UAAW8B,EAAGC,EAAOC,gBAAiB/B,GACtCgC,QAAS,SAACC,GAA6C,OAAKC,EAAcD,EAAOZ,EAAOK,MAAM,IAElG,IACAS,sBAAuBpB,EAAcI,MAAMb,GAE/C,GAAG,CAACN,EAAiBE,EAAUI,EAAKH,EAAMC,IAlBlCc,EAAcL,EAAdK,eAAgBiB,EAAqBtB,EAArBsB,sBAoBxB,OAAKjC,EAKHkC,EAAK,MAAAC,OAAAC,OAAA,CAAAvC,UAAW8B,EAAGC,EAAOS,qBAAsBxC,EAASyC,KAAKV,EAAOW,UAAY7B,IAAkBX,GAAIA,GAAE,CAAAC,SAAA,CACtGgB,EACDwB,EAACC,EAAkB,CACjBR,sBAAuBA,EACvB5B,aAAcA,EACdC,0BAA2BA,EAC3BE,gCAAiCA,EACjCP,KAAMA,EACNC,KAAMA,QAZH,IAgBX"}