{"version":3,"file":"Combobox.js","sources":["../../../../../src/components/Combobox/Combobox.tsx"],"sourcesContent":["/* eslint-disable jsx-a11y/click-events-have-key-events */\nimport { camelCase } from \"lodash-es\";\nimport cx from \"classnames\";\nimport React, { useRef, useState, forwardRef, useMemo, useCallback } from \"react\";\nimport { isFunction, noop as NOOP } from \"lodash-es\";\nimport { getStyle } from \"../../helpers/typesciptCssModulesHelper\";\nimport { ComponentDefaultTestId, getTestId } from \"../../tests/test-ids-utils\";\nimport useMergeRef from \"../../hooks/useMergeRef\";\nimport Search from \"../Search/Search\";\nimport { BASE_SIZES } from \"../../constants\";\nimport Button from \"../Button/Button\";\nimport Text from \"../Text/Text\";\nimport ComboboxOption from \"./components/ComboboxOption/ComboboxOption\";\nimport { defaultFilter } from \"./ComboboxService\";\nimport { ComboboxItems } from \"./components/ComboboxItems/ComboboxItems\";\nimport { StickyCategoryHeader } from \"./components/StickyCategoryHeader/StickyCategoryHeader\";\nimport { useItemsData, useKeyboardNavigation } from \"./ComboboxHelpers/ComboboxHelpers\";\nimport { getOptionId } from \"./helpers\";\nimport { ElementContent, SubIcon, VibeComponentProps, withStaticProps } from \"../../types\";\nimport { IComboboxCategoryMap, IComboboxItem, IComboboxOption } from \"./components/ComboboxConstants\";\nimport styles from \"./Combobox.module.scss\";\n\nexport interface ComboboxProps extends VibeComponentProps {\n  className?: string;\n  optionClassName?: string;\n  searchWrapperClassName?: string;\n  /**\n   * Placeholder to show when no value was selected\n   */\n  placeholder?: string;\n  /**\n   * Unique element id\n   */\n  id?: string;\n  /**\n   * A message that will be displayed inside the combo box when no results are found\n   */\n  noResultsMessage?: string;\n  disabled?: boolean;\n  options?: IComboboxOption[];\n  categories?: IComboboxCategoryMap;\n  /**\n   * Divider between categories sections\n   */\n  withCategoriesDivider?: boolean;\n  size?: (typeof BASE_SIZES)[keyof typeof BASE_SIZES];\n  optionLineHeight?: number;\n  optionsListHeight?: number;\n  autoFocus?: boolean;\n  /**\n   * Callback that called after clicking on the add new combo box button.\n   * @param {string} _filterValue\n   */\n  onAddNew?: (value: string) => void;\n  /**\n   * The label of the button that appears at the end of the combo box when the search does not return appropriate options\n   */\n  addNewLabel?: ((label: string) => ElementContent) | string;\n  filter?: (filterValue: string, options: IComboboxOption[]) => IComboboxOption[];\n  /**\n   * Default search input\n   */\n  defaultFilter?: string;\n  disableFilter?: boolean;\n  onFilterChanged?: (value: string) => void;\n  /**\n   * Display the combo box with loading state\n   */\n  loading?: boolean;\n  /**\n   * on mouse hover callback for option\n   */\n  // onOptionHover?: PropTypes.func,\n  onOptionHover?: (event: React.MouseEvent, index: number, option: IComboboxOption) => void;\n  /**\n   * on mouse leave callback for option\n   */\n  // onOptionLeave?: PropTypes.func,\n  onOptionLeave?: () => void;\n  /**\n   * Allowed to the following behavior: scrolling automatically to the combo box's selected option\n   */\n  shouldScrollToSelectedItem?: boolean;\n  noResultsRenderer?: () => JSX.Element;\n  stickyCategories?: boolean;\n  /** By default, the first option will be selected, when focusing selecting the first option, or when changing items */\n  defaultVisualFocusFirstIndex?: boolean;\n  /** Clear the filter/search on selection (click or enter) */\n  clearFilterOnSelection?: boolean;\n  /** Replace the regular appearance of combo box option with custom renderer. */\n  optionRenderer?: (option: IComboboxOption) => JSX.Element;\n  /** Maximum options count without scroll */\n  maxOptionsWithoutScroll?: number;\n  /**\n   * Using virtualized list for rendering only the items which visible to the user in any given user (performance optimization)\n   */\n  renderOnlyVisibleOptions?: boolean;\n  /**\n   * On option click callback\n   */\n  onClick?: (optionData: IComboboxOption) => void;\n  /**\n   * Custom search icon\n   */\n  searchIcon?: SubIcon;\n  searchInputAriaLabel?: string;\n}\n\nconst Combobox: React.FC<ComboboxProps> & {\n  sizes?: typeof BASE_SIZES;\n  iconTypes?: typeof ComboboxOption.iconTypes;\n} = forwardRef(\n  (\n    {\n      className = \"\",\n      optionClassName = \"\",\n      searchWrapperClassName,\n      searchIcon,\n      id = \"\",\n      placeholder = \"\",\n      size = Combobox.sizes.MEDIUM,\n      defaultVisualFocusFirstIndex,\n      optionLineHeight = 32,\n      optionsListHeight,\n      autoFocus = false,\n      disabled = false,\n      options = [],\n      categories,\n      withCategoriesDivider = false,\n      noResultsMessage = \"No results found\",\n      onAddNew,\n      addNewLabel = \"Add new\",\n      onClick = (_optionData: IComboboxOption) => {},\n      filter = defaultFilter,\n      disableFilter = false,\n      onFilterChanged,\n      loading = false,\n      onOptionHover = NOOP,\n      onOptionLeave = NOOP,\n      shouldScrollToSelectedItem = true,\n      noResultsRenderer,\n      stickyCategories = false,\n      optionRenderer = null,\n      renderOnlyVisibleOptions = false,\n      clearFilterOnSelection = false,\n      maxOptionsWithoutScroll,\n      defaultFilter: defaultFilterValue = \"\",\n      searchInputAriaLabel = \"Search for content\",\n      \"data-testid\": dataTestId\n    },\n    ref\n  ) => {\n    const componentRef = useRef(null);\n    const inputRef = useRef(null);\n    const mergedRef = useMergeRef(ref, componentRef);\n\n    const [filterValue, setFilterValue] = useState(defaultFilterValue);\n    const onChangeCallback = useCallback(\n      (value: string) => {\n        if (onFilterChanged) {\n          onFilterChanged(value);\n        }\n        setFilterValue(value);\n      },\n      [setFilterValue, onFilterChanged]\n    );\n\n    const onOptionHoverCB = useCallback(\n      (event: React.MouseEvent, index: number, option: IComboboxOption) => {\n        onOptionHover(event, index, option);\n      },\n      [onOptionHover]\n    );\n\n    const filteredOptions: IComboboxOption[] = useMemo(() => {\n      if (disableFilter) {\n        return options;\n      }\n      return filter(filterValue, options);\n    }, [options, filterValue, filter, disableFilter]);\n\n    const [activeOptionIndex, setActiveOptionIndex] = useState(-1);\n\n    const isChildSelectable = useCallback(\n      (index: number) => {\n        return index !== undefined && filteredOptions[index] && !filteredOptions[index].disabled;\n      },\n      [filteredOptions]\n    );\n\n    const onAddNewCallback = useCallback(() => {\n      onAddNew && onAddNew(filterValue);\n      // clear filter after adding\n      setFilterValue(\"\");\n    }, [onAddNew, filterValue, setFilterValue]);\n\n    const hasResults = filteredOptions.length > 0;\n    const hasFilter = filterValue.length > 0;\n\n    function getAddNewLabel() {\n      if (isFunction(addNewLabel)) {\n        return addNewLabel(filterValue);\n      }\n      return addNewLabel;\n    }\n\n    function renderNoResults() {\n      if (noResultsRenderer) {\n        return noResultsRenderer();\n      }\n\n      return (\n        <div className={styles.comboboxNoResults}>\n          <div className={styles.comboboxMessageWrapper}>\n            <span className={styles.comboboxMessage}>{noResultsMessage}</span>\n          </div>\n          {onAddNew && !disabled && (\n            <Button className={styles.addNewButton} size={size} kind={Button.kinds.TERTIARY} onClick={onAddNewCallback}>\n              <span className={styles.buttonLabel}>{getAddNewLabel()}</span>\n            </Button>\n          )}\n        </div>\n      );\n    }\n\n    const [activeCategoryLabel, setActiveCategoryLabel] = useState<string>();\n\n    const onActiveCategoryChanged = useCallback(\n      (categoryData: IComboboxItem) => {\n        if (categoryData?.category?.label !== activeCategoryLabel) {\n          setActiveCategoryLabel(categoryData?.category?.label);\n        }\n      },\n      [activeCategoryLabel]\n    );\n\n    const { items, itemsMap, selectableItems } = useItemsData({\n      categories,\n      options: filteredOptions,\n      filterValue,\n      withCategoriesDivider,\n      optionLineHeight\n    });\n\n    const overrideOnClick = useCallback(\n      (_event: React.MouseEvent | React.KeyboardEvent, itemIndex: number) => {\n        onClick(selectableItems[itemIndex]);\n        if (isChildSelectable(itemIndex)) {\n          setActiveOptionIndex(itemIndex);\n        }\n        if (clearFilterOnSelection) {\n          // clear filter after adding\n          onChangeCallback(\"\");\n        }\n      },\n      [onClick, selectableItems, isChildSelectable, clearFilterOnSelection, onChangeCallback]\n    );\n\n    const {\n      visualFocusItemIndex,\n      visualFocusItemId,\n      onOptionClick: overrideOnOptionClick\n    } = useKeyboardNavigation({\n      getOptionId,\n      defaultVisualFocusFirstIndex,\n      onClick: overrideOnClick,\n      isChildSelectable,\n      options: selectableItems,\n      inputRef\n    });\n\n    return (\n      <Text\n        type={Text.types.TEXT2}\n        ref={mergedRef}\n        className={cx(styles.combobox, className, getStyle(styles, camelCase(\"size-\" + size)), {\n          [styles.empty]: !hasResults,\n          [styles.stickyCategory]: stickyCategories\n        })}\n        id={id}\n        data-testid={dataTestId || getTestId(ComponentDefaultTestId.COMBOBOX, id)}\n        ellipsis={false}\n      >\n        <div className={styles.comboboxList} style={{ maxHeight: optionsListHeight }} role=\"listbox\">\n          <Search\n            ref={inputRef}\n            value={filterValue}\n            wrapperClassName={cx(styles.comboboxSearchWrapper, searchWrapperClassName)}\n            className={styles.comboboxSearch}\n            inputAriaLabel={searchInputAriaLabel}\n            activeDescendant={visualFocusItemId}\n            id=\"combobox-search\"\n            placeholder={placeholder}\n            size={size}\n            disabled={disabled}\n            onChange={onChangeCallback}\n            autoFocus={autoFocus}\n            loading={loading}\n            iconName={searchIcon}\n          />\n          {stickyCategories && <StickyCategoryHeader label={activeCategoryLabel} />}\n          <ComboboxItems\n            stickyCategories={stickyCategories}\n            categories={categories}\n            options={items}\n            itemsMap={itemsMap}\n            optionClassName={optionClassName}\n            optionRenderer={optionRenderer}\n            activeItemIndex={activeOptionIndex}\n            onActiveCategoryChanged={onActiveCategoryChanged}\n            onOptionClick={overrideOnOptionClick}\n            onOptionEnter={onOptionHoverCB}\n            onOptionLeave={onOptionLeave}\n            optionLineHeight={optionLineHeight}\n            shouldScrollToSelectedItem={shouldScrollToSelectedItem}\n            renderOnlyVisibleOptions={renderOnlyVisibleOptions}\n            maxOptionsWithoutScroll={maxOptionsWithoutScroll}\n            visualFocusItemIndex={visualFocusItemIndex}\n          />\n        </div>\n        {hasFilter && !hasResults && !loading && renderNoResults()}\n      </Text>\n    );\n  }\n);\n\n// Locate loading next to search icon\n// color it with --secondary-text-color\n// size it like the icon - we think it's 16px - make sure it's not fat\n\nexport default withStaticProps(Combobox, {\n  sizes: BASE_SIZES,\n  iconTypes: ComboboxOption.iconTypes\n});\n"],"names":["Combobox","forwardRef","_ref","ref","_ref$className","className","_ref$optionClassName","optionClassName","searchWrapperClassName","searchIcon","_ref$id","id","_ref$placeholder","placeholder","_ref$size","size","sizes","MEDIUM","defaultVisualFocusFirstIndex","_ref$optionLineHeight","optionLineHeight","optionsListHeight","_ref$autoFocus","autoFocus","_ref$disabled","disabled","_ref$options","options","categories","_ref$withCategoriesDi","withCategoriesDivider","_ref$noResultsMessage","noResultsMessage","onAddNew","_ref$addNewLabel","addNewLabel","_ref$onClick","onClick","_optionData","_ref$filter","filter","defaultFilter","_ref$disableFilter","disableFilter","onFilterChanged","_ref$loading","loading","_ref$onOptionHover","onOptionHover","NOOP","_ref$onOptionLeave","onOptionLeave","_ref$shouldScrollToSe","shouldScrollToSelectedItem","noResultsRenderer","_ref$stickyCategories","stickyCategories","_ref$optionRenderer","optionRenderer","_ref$renderOnlyVisibl","renderOnlyVisibleOptions","_ref$clearFilterOnSel","clearFilterOnSelection","maxOptionsWithoutScroll","_ref$defaultFilter","defaultFilterValue","_ref$searchInputAriaL","searchInputAriaLabel","dataTestId","componentRef","useRef","inputRef","mergedRef","useMergeRef","_useState","useState","_useState2","_slicedToArray","filterValue","setFilterValue","onChangeCallback","useCallback","value","onOptionHoverCB","event","index","option","filteredOptions","useMemo","_useState3","_useState4","activeOptionIndex","setActiveOptionIndex","isChildSelectable","undefined","onAddNewCallback","hasResults","length","hasFilter","_useState5","_useState6","activeCategoryLabel","setActiveCategoryLabel","onActiveCategoryChanged","categoryData","_a","category","label","_b","_useItemsData","useItemsData","items","itemsMap","selectableItems","overrideOnClick","_event","itemIndex","_useKeyboardNavigatio","useKeyboardNavigation","getOptionId","visualFocusItemIndex","visualFocusItemId","overrideOnOptionClick","onOptionClick","_jsxs","Text","Object","assign","type","types","TEXT2","cx","styles","combobox","getStyle","camelCase","_defineProperty","empty","stickyCategory","getTestId","ComponentDefaultTestId","COMBOBOX","ellipsis","children","comboboxList","style","maxHeight","role","_jsx","Search","wrapperClassName","comboboxSearchWrapper","comboboxSearch","inputAriaLabel","activeDescendant","onChange","iconName","StickyCategoryHeader","ComboboxItems","activeItemIndex","onOptionEnter","comboboxNoResults","comboboxMessageWrapper","comboboxMessage","Button","addNewButton","kind","kinds","TERTIARY","buttonLabel","isFunction","withStaticProps","BASE_SIZES","iconTypes","ComboboxOption"],"mappings":"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"}