{"version":3,"file":"FieldLabel.js","sources":["../../../../../src/components/FieldLabel/FieldLabel.tsx"],"sourcesContent":["import cx from \"classnames\";\nimport React, { FC, ForwardedRef, forwardRef } from \"react\";\nimport Icon from \"../Icon/Icon\";\nimport VibeComponentProps from \"../../types/VibeComponentProps\";\nimport styles from \"./FieldLabel.module.scss\";\n\ninterface FieldLabelProps extends VibeComponentProps {\n  icon?: string | React.FunctionComponent | null;\n  iconLabel?: string;\n  labelText?: string;\n  labelFor?: string;\n  iconClassName?: string;\n  labelClassName?: string;\n  requiredAsterisk?: boolean;\n}\n\nconst FieldLabel: FC<FieldLabelProps> = forwardRef(\n  (\n    {\n      icon = \"\",\n      iconLabel = \"\",\n      labelText = \"\",\n      labelFor = \"\",\n      iconClassName = \"\",\n      labelClassName = \"\",\n      requiredAsterisk = false\n    },\n    ref: ForwardedRef<HTMLLabelElement>\n  ) => {\n    if (!labelText) {\n      return null;\n    }\n\n    return (\n      <section className={cx(styles.labelComponentWrapper)}>\n        <Icon\n          icon={icon}\n          className={cx(styles.labelComponentIcon, iconClassName)}\n          id={labelFor}\n          clickable={false}\n          iconLabel={iconLabel}\n          iconType={Icon.type.ICON_FONT}\n        />\n        <label htmlFor={labelFor} ref={ref} className={cx(styles.labelComponentText, labelClassName)}>\n          {labelText}\n          {requiredAsterisk && <span className={styles.requiredAsterisk}> *</span>}{\" \"}\n          {/* Render asterisk based on the prop */}\n        </label>\n      </section>\n    );\n  }\n);\n\nexport default FieldLabel;\n"],"names":["FieldLabel","forwardRef","_ref","ref","_ref$icon","icon","_ref$iconLabel","iconLabel","_ref$labelText","labelText","_ref$labelFor","labelFor","_ref$iconClassName","iconClassName","_ref$labelClassName","labelClassName","_ref$requiredAsterisk","requiredAsterisk","_jsxs","Object","assign","className","cx","styles","labelComponentWrapper","children","_jsx","Icon","labelComponentIcon","id","clickable","iconType","type","ICON_FONT","htmlFor","labelComponentText"],"mappings":"yLAgBMA,IAAAA,EAAkCC,GACtC,SAAAC,EAUEC,GACE,IAAAC,EAAAF,EATAG,KAAAA,OAAO,IAAHD,EAAG,GAAEA,EAAAE,EAAAJ,EACTK,UAAAA,OAAY,IAAHD,EAAG,GAAEA,EAAAE,EAAAN,EACdO,UAAAA,OAAY,IAAHD,EAAG,GAAEA,EAAAE,EAAAR,EACdS,SAAAA,OAAW,IAAHD,EAAG,GAAEA,EAAAE,EAAAV,EACbW,cAAAA,OAAgB,IAAHD,EAAG,GAAEA,EAAAE,EAAAZ,EAClBa,eAAAA,OAAiB,IAAHD,EAAG,GAAEA,EAAAE,EAAAd,EACnBe,iBAAAA,OAAmB,IAAHD,GAAQA,EAI1B,OAAKP,EAKHS,EAAS,UAAAC,OAAAC,OAAA,CAAAC,UAAWC,EAAGC,EAAOC,wBAAsB,CAAAC,SAAA,CAClDC,EAACC,EAAI,CACHtB,KAAMA,EACNgB,UAAWC,EAAGC,EAAOK,mBAAoBf,GACzCgB,GAAIlB,EACJmB,WAAW,EACXvB,UAAWA,EACXwB,SAAUJ,EAAKK,KAAKC,YAEtBf,EAAA,QAAAC,OAAAC,OAAA,CAAOc,QAASvB,EAAUR,IAAKA,EAAKkB,UAAWC,EAAGC,EAAOY,mBAAoBpB,IAAe,CAAAU,SAAA,CACzFhB,EACAQ,GAAoBS,EAAM,OAAAP,OAAAC,OAAA,CAAAC,UAAWE,EAAON,kBAA2B,CAAAQ,SAAA,QAAE,YAfvE,IAoBX"}