{"version":3,"file":"MenuDivider.js","sources":["../../../../../../src/components/Menu/MenuDivider/MenuDivider.tsx"],"sourcesContent":["import { ComponentDefaultTestId, getTestId } from \"../../../tests/test-ids-utils\";\nimport cx from \"classnames\";\nimport Divider from \"../../Divider/Divider\";\nimport { backwardCompatibilityForProperties } from \"../../../helpers/backwardCompatibilityForProperties\";\nimport { VibeComponentProps } from \"../../../types\";\nimport { FC } from \"react\";\nimport styles from \"./MenuDivider.module.scss\";\n\ninterface MenuDividerProps extends VibeComponentProps {\n  /**\n   * @deprecated - use className instead\n   */\n  classname?: string;\n}\n\nconst MenuDivider: FC<MenuDividerProps> & { isMenuChild?: boolean } = ({\n  // Backward compatibility for props naming\n  classname,\n  className,\n  id,\n  \"data-testid\": dataTestId\n}) => {\n  const overrideClassName = backwardCompatibilityForProperties([className, classname]);\n  return (\n    <Divider\n      className={cx(styles.menuChildDivider, overrideClassName)}\n      data-testid={dataTestId || getTestId(ComponentDefaultTestId.MENU_DIVIDER, id)}\n    />\n  );\n};\n\nObject.assign(MenuDivider, {\n  isMenuChild: true\n});\n\nexport default MenuDivider;\n"],"names":["MenuDivider","_ref","id","dataTestId","overrideClassName","backwardCompatibilityForProperties","className","classname","_jsx","Divider","cx","styles","menuChildDivider","getTestId","ComponentDefaultTestId","MENU_DIVIDER","Object","assign","isMenuChild","MenuDivider$1"],"mappings":"oVAeA,IAAMA,EAAgE,SAArDC,GAMZ,IAFHC,EAAED,EAAFC,GACeC,EAAUF,EAAzB,eAEMG,EAAoBC,EAAmC,CAJpDJ,EAATK,UADSL,EAATM,YAMA,OACEC,EAACC,EACC,CAAAH,UAAWI,EAAGC,EAAOC,iBAAkBR,GAAkB,cAC5CD,GAAcU,EAAUC,EAAuBC,aAAcb,IAGhF,EAEAc,OAAOC,OAAOjB,EAAa,CACzBkB,aAAa,IAGf,IAAAC,EAAenB"}