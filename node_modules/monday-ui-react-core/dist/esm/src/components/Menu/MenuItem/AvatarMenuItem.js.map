{"version":3,"file":"AvatarMenuItem.js","sources":["../../../../../../src/components/Menu/MenuItem/AvatarMenuItem.tsx"],"sourcesContent":["import React, { ForwardedRef, forwardRef, useCallback } from \"react\";\nimport MenuItem, { MenuItemProps } from \"./MenuItem\";\nimport Avatar, { AvatarProps } from \"../../Avatar/Avatar\";\nimport VibeComponentProps from \"../../../types/VibeComponentProps\";\n\ninterface AvatarMenuItemProps extends VibeComponentProps {\n  avatarProps?: AvatarProps;\n  menuItemProps?: MenuItemProps;\n}\n\n/**\n * MenuItem with Avatar instead of Icon\n */\nconst AvatarMenuItem: React.FC<AvatarMenuItemProps & { isMenuChild?: boolean; isSelectable?: boolean }> = forwardRef(\n  ({ avatarProps, menuItemProps, ...embeddedMenuItemProps }, ref: ForwardedRef<HTMLElement>) => {\n    const renderAvatar = useCallback(() => <Avatar {...avatarProps} />, [avatarProps]);\n    return <MenuItem {...embeddedMenuItemProps} {...menuItemProps} icon={renderAvatar} ref={ref} />;\n  }\n);\n\nObject.assign(AvatarMenuItem, {\n  isMenuChild: true,\n  isSelectable: true\n});\n\nexport default AvatarMenuItem;\n"],"names":["AvatarMenuItem","forwardRef","_a","ref","avatarProps","menuItemProps","embeddedMenuItemProps","__rest","renderAvatar","useCallback","_jsx","Avatar","Object","assign","MenuItem","icon","isMenuChild","isSelectable"],"mappings":"uNAaMA,IAAAA,EAAoGC,GACxG,SAACC,EAA0DC,OAAxDC,EAA0BF,EAA1BE,YAAaC,EAAaH,EAAbG,cAAkBC,EAAqBC,EAAAL,EAAtD,iCACOM,EAAeC,GAAY,WAAA,OAAMC,EAACC,EAAMC,OAAAC,OAAA,CAAA,EAAKT,MAAiB,CAACA,IACrE,OAAOM,EAACI,EAAaF,OAAAC,OAAA,CAAA,EAAAP,EAA2BD,EAAa,CAAEU,KAAMP,EAAcL,IAAKA,IAC1F,IAGFS,OAAOC,OAAOb,EAAgB,CAC5BgB,aAAa,EACbC,cAAc"}