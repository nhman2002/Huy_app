{"version":3,"file":"Modal.js","sources":["../../../../../src/components/Modal/Modal.tsx"],"sourcesContent":["import React, { cloneElement, FC, ReactElement, useCallback, useMemo } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport cx from \"classnames\";\nimport { useA11yDialog } from \"./a11yDialog\";\nimport ModalContent from \"./ModalContent/ModalContent\";\nimport ModalHeader from \"./ModalHeader/ModalHeader\";\nimport useBodyScrollLock from \"./useBodyScrollLock\";\nimport useShowHideModal from \"./useShowHideModal\";\nimport { isModalContent, isModalFooter, isModalHeader, ModalWidth, validateTitleProp } from \"./ModalHelper\";\nimport { NOOP } from \"../../utils/function-utils\";\nimport { withStaticProps } from \"../../types\";\nimport { getTestId } from \"../../tests/test-ids-utils\";\nimport { ComponentDefaultTestId } from \"../../tests/constants\";\nimport styles from \"./Modal.module.scss\";\n\ninterface ModalProps {\n  /**\n   * Id of the modal, used internally and for accessibility\n   */\n  id?: string;\n  \"data-testid\": string;\n  /**\n   * Show/hide the Dialog\n   */\n  show: boolean;\n  /**\n   * Heading for the modal, mandatory when ModalHeader isn't provided in children\n   */\n  title?: string;\n  /**\n   * Description for the modal title\n   */\n  description?: string;\n  /**\n   * Called when the modal is closed (by close button/click outside/esc key)\n   */\n  onClose: () => void;\n  /**\n   *  Makes the dialog behave like a modal (preventing closing on click outside of\n   *  ESC key)..\n   */\n  alertDialog?: boolean;\n  /**\n   *  Used for the fromOrigin animation\n   */\n  triggerElement?: Element;\n  /**\n   *  Set the modal's width. Can be one of the presets or any custom size\n   */\n  width?: typeof ModalWidth | string;\n  /**\n   *  Hide the modal close button\n   */\n  hideCloseButton?: boolean;\n  /**\n   *  Aria label for the close button\n   */\n  closeButtonAriaLabel?: string;\n  /**\n   *  Add gaps between parts of the modal\n   */\n  contentSpacing?: boolean;\n  /**\n   *  classNames for specific parts of the dialog\n   */\n  classNames?: {\n    container?: string;\n    overlay?: string;\n    modal?: string;\n  };\n  /**\n   *  Dialog content\n   */\n  children?: ReactElement | ReactElement[];\n  /**\n   * z-index attribute of the container\n   */\n  zIndex?: number;\n}\n\nconst Modal: FC<ModalProps> & { width?: typeof ModalWidth } = ({\n  classNames = { container: \"\", overlay: \"\", modal: \"\" },\n  id,\n  show,\n  title = \"\",\n  description = \"\",\n  onClose = NOOP,\n  alertDialog = false,\n  children,\n  triggerElement,\n  width = ModalWidth.DEFAULT,\n  // TODO remove hideCloseButton on the next breaking changes\n  // eslint-disable-next-line\n  hideCloseButton = false,\n  closeButtonAriaLabel = \"Close\",\n  contentSpacing = false,\n  zIndex = 10000,\n  \"data-testid\": dataTestId\n}) => {\n  const childrenArray: ReactElement[] = useMemo(\n    () => (children ? (React.Children.toArray(children) as ReactElement[]) : []),\n    [children]\n  );\n  validateTitleProp(title, childrenArray);\n\n  const [instance, attr] = useA11yDialog({\n    id,\n    alertDialog\n  });\n\n  const closeIfNotAlertType = useCallback(() => {\n    if (!alertDialog) {\n      onClose?.();\n    }\n  }, [alertDialog, onClose]);\n\n  // lock body scroll when modal is open\n  useBodyScrollLock({ instance });\n\n  // show/hide and animate the modal\n  useShowHideModal({\n    instance,\n    show,\n    triggerElement,\n    onClose,\n    alertDialog\n  });\n\n  const header = useMemo(() => {\n    const { id } = attr.title;\n    const header = childrenArray.find(isModalHeader);\n    if (header) {\n      return cloneElement(header, { id, closeModal: onClose });\n    }\n    return (\n      <ModalHeader\n        title={title}\n        description={description}\n        closeModal={onClose}\n        id={id}\n        closeButtonAriaLabel={closeButtonAriaLabel}\n      />\n    );\n  }, [attr.title, childrenArray, title, description, onClose, closeButtonAriaLabel]);\n\n  const content = useMemo(() => {\n    return (\n      childrenArray.find(isModalContent) || (\n        <ModalContent>{childrenArray.filter(child => !isModalHeader(child) && !isModalFooter(child))}</ModalContent>\n      )\n    );\n  }, [childrenArray]);\n\n  const footer = useMemo(() => {\n    return childrenArray.find(isModalFooter) || null;\n  }, [childrenArray]);\n\n  const customWidth = width !== ModalWidth.DEFAULT && width !== ModalWidth.FULL_WIDTH;\n\n  const dialog = ReactDOM.createPortal(\n    <div\n      {...attr.container}\n      className={cx(styles.container, classNames.container)}\n      data-testid={dataTestId || getTestId(ComponentDefaultTestId.MODAL, id)}\n      style={{ \"--monday-modal-z-index\": zIndex }}\n    >\n      {/* eslint-disable-next-line jsx-a11y/click-events-have-key-events */}\n      <div\n        onClick={closeIfNotAlertType}\n        className={cx(styles.overlay, classNames.overlay)}\n        data-testid={ComponentDefaultTestId.MODAL_OVERLAY}\n      />\n      <div\n        {...attr.dialog}\n        className={cx(styles.dialog, classNames.modal, {\n          [styles.default]: width === ModalWidth.DEFAULT,\n          [styles.full]: width === ModalWidth.FULL_WIDTH,\n          [styles.spacing]: contentSpacing\n        })}\n        style={{ width: customWidth ? width : null }}\n      >\n        {header}\n        {content}\n        {footer}\n      </div>\n    </div>,\n    document.body\n  );\n\n  return ReactDOM.createPortal(dialog, document.body);\n};\n\nexport default withStaticProps(Modal, {\n  width: ModalWidth\n});\n"],"names":["withStaticProps","_ref","_ref$classNames","classNames","container","overlay","modal","id","show","_ref$title","title","_ref$description","description","_ref$onClose","onClose","NOOP","_ref$alertDialog","alertDialog","children","triggerElement","_ref$width","width","ModalWidth","DEFAULT","_ref$closeButtonAriaL","closeButtonAriaLabel","_ref$contentSpacing","contentSpacing","_ref$zIndex","zIndex","dataTestId","childrenArray","useMemo","React","Children","toArray","validateTitleProp","_useA11yDialog","useA11yDialog","_useA11yDialog2","_slicedToArray","instance","attr","closeIfNotAlertType","useCallback","useBodyScrollLock","useShowHideModal","header","find","isModalHeader","cloneElement","closeModal","_jsx","ModalHeader","content","isModalContent","ModalContent","filter","child","isModalFooter","footer","customWidth","FULL_WIDTH","dialog","ReactDOM","createPortal","_jsxs","Object","assign","className","cx","styles","getTestId","ComponentDefaultTestId","MODAL","style","onClick","MODAL_OVERLAY","_defineProperty","default","full","spacing","document","body"],"mappings":"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"}