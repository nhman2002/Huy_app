{"version":3,"file":"SliderInfixHooks.js","sources":["../../../../../src/components/Slider/SliderInfixHooks.tsx"],"sourcesContent":["import React, { CSSProperties, ReactElement } from \"react\";\nimport Icon from \"../../components/Icon/Icon\";\nimport { InfixKind } from \"./SliderConstants\";\nimport { useSliderInfix, useSliderSelection } from \"./SliderContext\";\nimport SelectionIndicator from \"./SelectionIndicator\";\nimport { IconType } from \"../Icon/IconConstants\";\n\nconst defaultIconProps = {\n  clickable: false,\n  iconSize: 18,\n  ignoreFocusStyle: true\n};\n\nexport function useSliderInfixComponent(kind: InfixKind): [boolean, string[], ReactElement, CSSProperties] {\n  const isPostfix = kind === InfixKind.POSTFIX;\n  const { prefix, postfix, indicateSelection, selectionIndicatorWidth } = useSliderInfix();\n  const { ranged, value, valueText } = useSliderSelection();\n  const infix = isPostfix ? postfix : prefix;\n\n  if (indicateSelection && (isPostfix || ranged)) {\n    return [true, [], <SelectionIndicator key={kind} kind={kind} />, { width: selectionIndicatorWidth }];\n  }\n  if (typeof infix === \"object\" && (infix as { icon: IconType }).icon) {\n    const { icon, ...restIconProps } = infix as { icon: IconType };\n    const iconProps = { ...defaultIconProps, ...restIconProps };\n    return [true, [], <Icon key=\"infix-icon\" icon={icon} {...iconProps} />, {}];\n  }\n  if (typeof infix === \"function\") {\n    return [true, [], infix(value, valueText), {}];\n  }\n  if (typeof infix === \"string\") {\n    return [true, [\"txt\"], <>{infix}</>, {}];\n  }\n  if (typeof infix === \"undefined\") {\n    return [false, [], null, {}];\n  }\n  return [true, [], <>{infix}</>, {}];\n}\n"],"names":["defaultIconProps","clickable","iconSize","ignoreFocusStyle","useSliderInfixComponent","kind","isPostfix","InfixKind","POSTFIX","_useSliderInfix","useSliderInfix","prefix","postfix","indicateSelection","selectionIndicatorWidth","_useSliderSelection","useSliderSelection","value","valueText","infix","ranged","_jsx","SelectionIndicator","width","_typeof","icon","restIconProps","__rest","iconProps","Object","assign","Icon","_Fragment","children"],"mappings":"sXAOA,IAAMA,EAAmB,CACvBC,WAAW,EACXC,SAAU,GACVC,kBAAkB,GAGd,SAAUC,EAAwBC,GACtC,IAAMC,EAAYD,IAASE,EAAUC,QACrCC,EAAwEC,IAAhEC,EAAMF,EAANE,OAAQC,EAAOH,EAAPG,QAASC,EAAiBJ,EAAjBI,kBAAmBC,EAAuBL,EAAvBK,wBAC5CC,EAAqCC,IAArBC,EAAKF,EAALE,MAAOC,EAASH,EAATG,UACjBC,EAAQb,EAAYM,EAAUD,EAEpC,GAAIE,IAAsBP,GAHZS,EAANK,QAIN,MAAO,EAAC,EAAM,GAAIC,EAACC,GAA8BjB,KAAMA,GAAZA,GAAsB,CAAEkB,MAAOT,IAE5E,GAAqB,WAAjBU,EAAOL,IAAuBA,EAA6BM,KAAM,CAC7D,IAAEA,EAA2BN,EAA3BM,KAASC,EAAaC,EAAKR,EAA7B,CAA0B,SAC1BS,EAAiBC,OAAAC,OAAAD,OAAAC,OAAA,GAAA9B,GAAqB0B,GAC5C,MAAO,EAAC,EAAM,GAAIL,EAACU,EAAsBF,OAAAC,OAAA,CAAAL,KAAMA,GAAUG,GAA7B,cAA4C,CAAE,EAC3E,CACD,MAAqB,mBAAVT,EACF,EAAC,EAAM,GAAIA,EAAMF,EAAOC,GAAY,CAAA,GAExB,iBAAVC,EACF,EAAC,EAAM,CAAC,OAAQE,EAAAW,EAAA,CAAAC,SAAGd,IAAW,CAAE,QAEpB,IAAVA,EACF,EAAC,EAAO,GAAI,KAAM,CAAE,GAEtB,EAAC,EAAM,GAAIE,EAAGW,EAAA,CAAAC,SAAAd,IAAW,CAAE,EACpC"}