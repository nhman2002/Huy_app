import{jsx as e}from"react/jsx-runtime";import t from"classnames";import{camelCase as s}from"lodash-es";import a,{forwardRef as r,useRef as i,useMemo as o}from"react";import n from"../../../hooks/useMergeRef.js";import{TabPanelsAnimationDirection as m}from"./TabPanelsConstants.js";import{getTestId as c,ComponentDefaultTestId as l}from"../../../tests/testIds.js";import{getStyle as p}from"../../../helpers/typesciptCssModulesHelper.js";import{withStaticProps as d}from"../../../types/withStaticProps.js";import f from"./TabPanels.module.scss.js";var u=r((function(r,d){var u=r.className,v=r.id,b=r.activeTabId,j=void 0===b?0:b,h=r.animationDirection,P=void 0===h?m.RTL:h,T=r.children,g=r.renderOnlyActiveTab,N=void 0!==g&&g,O=r["data-testid"],x=i(null),y=n(d,x),A=o((function(){return a.Children.map(T,(function(e,r){var i=j===r;if(N&&!i)return null;var o=i?"active":"non-active",n=i?"animation-direction-".concat(P):"";return a.cloneElement(e,Object.assign(Object.assign({index:r},e.props),{className:t(f.tabPanel,[p(f,o)],[p(f,s(n))],e.props.className)}))})).filter(Boolean)}),[T,j,N,P]);return e("div",Object.assign({ref:y,className:t(f.tabPanelsWrapper,u),id:v,"data-testid":O||c(l.TAB_PANELS,v)},{children:A}))}));Object.assign(u,{isTabPanels:!0});var v=d(u,{animationDirections:m});export{v as default};
//# sourceMappingURL=TabPanels.js.map
