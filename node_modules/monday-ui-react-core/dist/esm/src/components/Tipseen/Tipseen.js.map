{"version":3,"file":"Tipseen.js","sources":["../../../../../src/components/Tipseen/Tipseen.tsx"],"sourcesContent":["import { forwardRef, Fragment, ReactElement, useEffect, useRef, useState } from \"react\";\nimport cx from \"classnames\";\nimport { AnimationType, DialogPosition, EMPTY_ARR, HideShowEvent, JustifyType } from \"../../constants\";\nimport useMergeRef from \"../../hooks/useMergeRef\";\nimport Tooltip from \"../../components/Tooltip/Tooltip\";\nimport Button from \"../../components/Button/Button\";\nimport IconButton from \"../../components/IconButton/IconButton\";\nimport CloseSmall from \"../../components/Icon/Icons/components/CloseSmall\";\nimport TipseenTitle from \"./TipseenTitle\";\nimport { TIPSEEN_CLOSE_BUTTON_ARIA_LABEL, TipseenCloseButtonTheme } from \"./TipseenConstants\";\nimport { ElementContent, VibeComponent, VibeComponentProps, withStaticProps } from \"../../types\";\nimport { MoveBy } from \"../../types/MoveBy\";\nimport { Modifier } from \"react-popper\";\nimport { backwardCompatibilityForProperties } from \"../../helpers/backwardCompatibilityForProperties\";\nimport { ComponentDefaultTestId } from \"../../tests/constants\";\nimport { getTestId } from \"../../tests/test-ids-utils\";\nimport Text from \"../Text/Text\";\nimport styles from \"./Tipseen.module.scss\";\n\ninterface TipseenProps extends VibeComponentProps {\n  /**\n   * Classname for overriding TipseenTitle styles\n   */\n  titleClassName?: string;\n  position?: DialogPosition;\n  animationType?: AnimationType;\n  hideDelay?: number;\n  showDelay?: number;\n  title?: string;\n  /**\n   * @deprecated - use hideCloseButton instead\n   */\n  isCloseButtonHidden?: boolean;\n  hideCloseButton?: boolean;\n  children?: ReactElement;\n  containerSelector?: string;\n  hideTrigger?: HideShowEvent | Array<HideShowEvent>;\n  showTrigger?: HideShowEvent | Array<HideShowEvent>;\n  justify?: JustifyType;\n  width?: number;\n  moveBy?: MoveBy;\n  hideWhenReferenceHidden?: boolean;\n  /**\n   * when false, the arrow of the tooltip is hidden\n   */\n  tip?: boolean;\n  /** Class name for a tooltip's arrow */\n  tooltipArrowClassName?: string;\n  /**\n   * PopperJS Modifiers type\n   * https://popper.js.org/docs/v2/modifiers/\n   */\n  modifiers?: Array<Modifier<unknown>>;\n  closeAriaLabel?: string;\n  onClose?: () => void;\n  // Better be required, but it might be a breaking change\n  content?: ElementContent;\n  /**\n   * Control the color of the Tipseen close button. Dark theme can be usfull while presenting bright images under the tipseen image\n   */\n  closeButtonTheme?: TipseenCloseButtonTheme;\n  floating?: boolean;\n}\n\nconst Tipseen: VibeComponent<TipseenProps> & {\n  closeButtonThemes?: typeof TipseenCloseButtonTheme;\n  positions?: typeof DialogPosition;\n  animationTypes?: typeof AnimationType;\n  justifyTypes?: typeof JustifyType;\n  hideShowTriggers?: typeof HideShowEvent;\n} = forwardRef(\n  (\n    {\n      className,\n      id,\n      position = DialogPosition.BOTTOM,\n      animationType = AnimationType.EXPAND,\n      hideDelay = 0,\n      showDelay = 0,\n      title,\n      titleClassName,\n      hideCloseButton,\n      // Backward compatability for hideCloseButton\n      isCloseButtonHidden,\n      closeButtonTheme = TipseenCloseButtonTheme.LIGHT,\n      onClose,\n      closeAriaLabel,\n      children = null,\n      content,\n      justify = JustifyType.CENTER,\n      containerSelector,\n      hideTrigger = EMPTY_ARR,\n      showTrigger = EMPTY_ARR,\n      width,\n      moveBy,\n      hideWhenReferenceHidden = false,\n      tip = true,\n      tooltipArrowClassName,\n      modifiers = EMPTY_ARR,\n      floating = false,\n      \"data-testid\": dataTestId\n    },\n    ref\n  ) => {\n    const defaultDelayOpen =\n      Array.isArray(showTrigger) && Array.isArray(hideTrigger) && showTrigger.length === 0 && showDelay > 0;\n\n    const componentRef = useRef(null);\n    const mergedRef = useMergeRef(ref, componentRef);\n    const [delayedOpen, setDelayOpen] = useState(!defaultDelayOpen);\n    const overrideCloseAriaLabel = closeAriaLabel || TIPSEEN_CLOSE_BUTTON_ARIA_LABEL;\n    const overrideHideCloseButton = backwardCompatibilityForProperties([hideCloseButton, isCloseButtonHidden], false);\n\n    useEffect(() => {\n      let timeout: NodeJS.Timeout;\n      if (showDelay) {\n        timeout = setTimeout(() => {\n          setDelayOpen(true);\n        }, showDelay);\n      }\n      return () => {\n        clearTimeout(timeout);\n      };\n    }, [showDelay, setDelayOpen]);\n\n    const TipseenWrapper = ref || id ? \"div\" : Fragment;\n    const tooltipContent = (\n      <div>\n        <div className={cx(styles.tipseenHeader)}>\n          {overrideHideCloseButton ? null : (\n            <IconButton\n              hideTooltip\n              className={cx(styles.tipseenCloseButton, {\n                [styles.dark]: closeButtonTheme === TipseenCloseButtonTheme.DARK\n              })}\n              onClick={onClose}\n              size={Button.sizes.XS}\n              kind={Button.kinds.TERTIARY}\n              color={Button.colors.ON_PRIMARY_COLOR}\n              ariaLabel={overrideCloseAriaLabel}\n              icon={CloseSmall}\n            />\n          )}\n          <TipseenTitle text={title} className={cx(styles.tipseenTitle, titleClassName)} />\n        </div>\n        <Text color={Text.colors.ON_PRIMARY} type={Text.types.TEXT2} element=\"p\" className={cx(styles.tipseenContent)}>\n          {content}\n        </Text>\n      </div>\n    );\n\n    return (\n      <TipseenWrapper ref={mergedRef} id={id} data-testid={dataTestId || getTestId(ComponentDefaultTestId.TIPSEEN, id)}>\n        <Tooltip\n          className={cx(styles.tipseenWrapper, className, {\n            [styles.tipseenWrapperWithoutCustomWidth]: !width,\n            [styles.floating]: floating\n          })}\n          arrowClassName={tooltipArrowClassName}\n          style={width ? { width } : undefined}\n          shouldShowOnMount={!defaultDelayOpen}\n          position={position}\n          animationType={animationType}\n          hideDelay={hideDelay}\n          showDelay={showDelay}\n          hideTrigger={hideTrigger}\n          showTrigger={showTrigger}\n          content={tooltipContent}\n          theme={Tooltip.themes.Primary}\n          justify={justify}\n          containerSelector={containerSelector}\n          disableDialogSlide={false}\n          moveBy={moveBy}\n          hideWhenReferenceHidden={hideWhenReferenceHidden}\n          tip={tip && !floating}\n          modifiers={modifiers}\n          open={defaultDelayOpen ? delayedOpen : undefined}\n          forceRenderWithoutChildren={floating}\n        >\n          {children}\n        </Tooltip>\n      </TipseenWrapper>\n    );\n  }\n);\n\nexport default withStaticProps(Tipseen, {\n  closeButtonThemes: TipseenCloseButtonTheme,\n  positions: DialogPosition,\n  animationTypes: AnimationType,\n  justifyTypes: JustifyType,\n  hideShowTriggers: HideShowEvent\n});\n"],"names":["withStaticProps","forwardRef","_ref","ref","className","id","_ref$position","position","DialogPosition","BOTTOM","_ref$animationType","animationType","AnimationType","EXPAND","_ref$hideDelay","hideDelay","_ref$showDelay","showDelay","title","titleClassName","hideCloseButton","isCloseButtonHidden","_ref$closeButtonTheme","closeButtonTheme","TipseenCloseButtonTheme","LIGHT","onClose","closeAriaLabel","_ref$children","children","content","_ref$justify","justify","JustifyType","CENTER","containerSelector","_ref$hideTrigger","hideTrigger","EMPTY_ARR","_ref$showTrigger","showTrigger","width","moveBy","_ref$hideWhenReferenc","hideWhenReferenceHidden","_ref$tip","tip","tooltipArrowClassName","_ref$modifiers","modifiers","_ref$floating","floating","dataTestId","defaultDelayOpen","Array","isArray","length","componentRef","useRef","mergedRef","useMergeRef","_useState","useState","_useState2","_slicedToArray","delayedOpen","setDelayOpen","overrideCloseAriaLabel","TIPSEEN_CLOSE_BUTTON_ARIA_LABEL","overrideHideCloseButton","backwardCompatibilityForProperties","useEffect","timeout","setTimeout","clearTimeout","TipseenWrapper","Fragment","tooltipContent","_jsxs","cx","styles","tipseenHeader","_jsx","IconButton","hideTooltip","tipseenCloseButton","_defineProperty","dark","DARK","onClick","size","Button","sizes","XS","kind","kinds","TERTIARY","color","colors","ON_PRIMARY_COLOR","ariaLabel","icon","CloseSmall","TipseenTitle","text","tipseenTitle","Text","Object","assign","ON_PRIMARY","type","types","TEXT2","element","tipseenContent","getTestId","ComponentDefaultTestId","TIPSEEN","Tooltip","tipseenWrapper","tipseenWrapperWithoutCustomWidth","arrowClassName","style","undefined","shouldShowOnMount","theme","themes","Primary","disableDialogSlide","open","forceRenderWithoutChildren","closeButtonThemes","positions","animationTypes","justifyTypes","hideShowTriggers","HideShowEvent"],"mappings":"0pCAgEA,IA0HeA,EAAAA,EApHXC,GACF,SAAAC,EA+BEC,GACE,IA9BAC,EAASF,EAATE,UACAC,EAAEH,EAAFG,GAAEC,EAAAJ,EACFK,SAAAA,OAAQ,IAAAD,EAAGE,EAAeC,OAAMH,EAAAI,EAAAR,EAChCS,cAAAA,OAAa,IAAAD,EAAGE,EAAcC,OAAMH,EAAAI,EAAAZ,EACpCa,UAAAA,OAAY,IAAHD,EAAG,EAACA,EAAAE,EAAAd,EACbe,UAAAA,OAAY,IAAHD,EAAG,EAACA,EACbE,EAAKhB,EAALgB,MACAC,EAAcjB,EAAdiB,eACAC,EAAelB,EAAfkB,gBAEAC,EAAmBnB,EAAnBmB,oBAAmBC,EAAApB,EACnBqB,iBAAAA,OAAgB,IAAAD,EAAGE,EAAwBC,MAAKH,EAChDI,EAAOxB,EAAPwB,QACAC,EAAczB,EAAdyB,eAAcC,EAAA1B,EACd2B,SAAAA,OAAW,IAAHD,EAAG,KAAIA,EACfE,EAAO5B,EAAP4B,QAAOC,EAAA7B,EACP8B,QAAAA,OAAO,IAAAD,EAAGE,EAAYC,OAAMH,EAC5BI,EAAiBjC,EAAjBiC,kBAAiBC,EAAAlC,EACjBmC,YAAAA,OAAcC,IAAHF,EAAGE,EAASF,EAAAG,GAAArC,EACvBsC,YAAAA,QAAcF,IAAHC,GAAGD,EAASC,GACvBE,GAAKvC,EAALuC,MACAC,GAAMxC,EAANwC,OAAMC,GAAAzC,EACN0C,wBAAAA,QAA0B,IAAHD,IAAQA,GAAAE,GAAA3C,EAC/B4C,IAAAA,QAAM,IAAHD,IAAOA,GACVE,GAAqB7C,EAArB6C,sBAAqBC,GAAA9C,EACrB+C,UAAAA,QAAYX,IAAHU,GAAGV,EAASU,GAAAE,GAAAhD,EACrBiD,SAAAA,QAAW,IAAHD,IAAQA,GACDE,GAAUlD,EAAzB,eAIImD,GACJC,MAAMC,QAAQf,KAAgBc,MAAMC,QAAQlB,IAAuC,IAAvBG,GAAYgB,QAAgBvC,EAAY,EAEhGwC,GAAeC,EAAO,MACtBC,GAAYC,EAAYzD,EAAKsD,IACnCI,GAAoCC,GAAUT,IAAiBU,GAAAC,EAAAH,GAAA,GAAxDI,GAAWF,GAAA,GAAEG,GAAYH,GAAA,GAC1BI,GAAyBxC,GAAkByC,EAC3CC,GAA0BC,EAAmC,CAAClD,EAAiBC,IAAsB,GAE3GkD,GAAU,WACR,IAAIC,EAMJ,OALIvD,IACFuD,EAAUC,YAAW,WACnBP,IAAa,EACd,GAAEjD,IAEE,WACLyD,aAAaF,GAEjB,GAAG,CAACvD,EAAWiD,KAEf,IAAMS,GAAiBxE,GAAOE,EAAK,MAAQuE,EACrCC,GACJC,EAAA,MAAA,CAAAjD,SAAA,CACEiD,uBAAK1E,UAAW2E,EAAGC,EAAOC,gBAAc,CAAApD,SAAA,CACrCwC,GAA0B,KACzBa,EAACC,EACC,CAAAC,aACA,EAAAhF,UAAW2E,EAAGC,EAAOK,mBAAkBC,EAAA,CAAA,EACpCN,EAAOO,KAAOhE,IAAqBC,EAAwBgE,OAE9DC,QAAS/D,EACTgE,KAAMC,EAAOC,MAAMC,GACnBC,KAAMH,EAAOI,MAAMC,SACnBC,MAAON,EAAOO,OAAOC,iBACrBC,UAAWjC,GACXkC,KAAMC,IAGVpB,EAACqB,EAAa,CAAAC,KAAMtF,EAAOd,UAAW2E,EAAGC,EAAOyB,aAActF,SAEhE+D,EAACwB,EAAIC,OAAAC,OAAA,CAACX,MAAOS,EAAKR,OAAOW,WAAYC,KAAMJ,EAAKK,MAAMC,MAAOC,QAAQ,IAAI7G,UAAW2E,EAAGC,EAAOkC,2BAC3FpF,QAKP,OACEoD,EAACP,GAAcgC,OAAAC,OAAA,CAACzG,IAAKwD,GAAWtD,GAAIA,EAAE,cAAe+C,IAAc+D,EAAUC,EAAuBC,QAAShH,IAC3G,CAAAwB,SAAAqD,EAACoC,EACCX,OAAAC,OAAA,CAAAxG,UAAW2E,EAAGC,EAAOuC,eAAgBnH,EAASkF,EAAAA,EAAA,CAAA,EAC3CN,EAAOwC,kCAAoC/E,IAC3CuC,EAAO7B,SAAWA,KAErBsE,eAAgB1E,GAChB2E,MAAOjF,GAAQ,CAAEA,MAAAA,SAAUkF,EAC3BC,mBAAoBvE,GACpB9C,SAAUA,EACVI,cAAeA,EACfI,UAAWA,EACXE,UAAWA,EACXoB,YAAaA,EACbG,YAAaA,GACbV,QAAS+C,GACTgD,MAAOP,EAAQQ,OAAOC,QACtB/F,QAASA,EACTG,kBAAmBA,EACnB6F,oBAAoB,EACpBtF,OAAQA,GACRE,wBAAyBA,GACzBE,IAAKA,KAAQK,GACbF,UAAWA,GACXgF,KAAM5E,GAAmBY,QAAc0D,EACvCO,2BAA4B/E,IAAQ,CAAAtB,SAEnCA,OAIT,IAGsC,CACtCsG,kBAAmB3G,EACnB4G,UAAW5H,EACX6H,eAAgBzH,EAChB0H,aAAcrG,EACdsG,iBAAkBC"}