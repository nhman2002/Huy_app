import{__rest as o}from"../../../_virtual/_tslib.js";import{jsx as t}from"react/jsx-runtime";import s,{forwardRef as r,useContext as i,useRef as e}from"react";import a from"classnames";import l from"../../hooks/useMergeRef.js";import{getTestId as m}from"../../tests/testIds.js";import{ComponentDefaultTestId as p}from"../../tests/constants.js";import{TypographyColor as n,TypographyAlign as d}from"./TypographyConstants.js";import{useTooltipProps as c,useEllipsisClass as f}from"./TypographyHooks.js";import T from"../Tooltip/Tooltip.js";import{TypographyContext as j}from"./utils/TypographyContext.js";import h from"./Typography.module.scss.js";var u=r((function(r,u){var v=r.className,g=r.id,y=r.children,x=r.tooltipProps,R=r["data-testid"],b=void 0===R?m(p.TEXT,g):R,w=r.element,N=void 0===w?"span":w,P=r.color,k=void 0===P?n.PRIMARY:P,A=r.align,C=void 0===A?d.START:A,E=r.ellipsis,I=void 0===E||E,L=r.maxLines,M=void 0===L?1:L,O=r.withoutTooltip,_=void 0!==O&&O,H=r.role,S=o(r,["className","id","children","tooltipProps","data-testid","element","color","align","ellipsis","maxLines","withoutTooltip","role"]),X=i(j).overflowTolerance,Y=e(null),q=l(u,Y),z=1===M,B=f(q,I,M),D=B.ref,F=B.class,G=c(Y,_,I,x,y,z,X);return t(T,Object.assign({},G,{children:s.createElement(N,Object.assign({id:g,"data-testid":b,className:a(h.typography,h[k],h[C],F,v),ref:D,role:H},S),y)}))}));export{u as default};
//# sourceMappingURL=Typography.js.map
