import{defineProperty as r}from"../../../../_virtual/_rollupPluginBabelHelpers.js";import{jsx as t}from"react/jsx-runtime";import{getTestId as e,ComponentDefaultTestId as s}from"../../../tests/testIds.js";import i from"classnames";import{useRef as o}from"react";import n from"../../Tooltip/Tooltip.js";import a from"../../../hooks/useIsOverflowing/useIsOverflowing.js";import m from"./AlertBannerText.module.scss.js";import{HideShowEvent as l}from"../../../constants/dialog.js";var f=[l.MOUSE_ENTER],p=[l.MOUSE_LEAVE],d=function(l){var d=l.text,c=l.marginLeft,g=void 0!==c&&c,T=l.id,u=l["data-testid"],j=o(null),E=i(m.bannerText,r({},m.marginLeft,g)),O=a({ref:j});return t(n,Object.assign({position:n.positions.BOTTOM,content:O&&d,showTrigger:f,hideTrigger:p},{children:t("div",Object.assign({ref:j,className:E,id:T,"data-testid":u||e(s.ALERT_BANNER_TEXT,T)},{children:t("span",{children:d})}))}))};Object.assign(d,{isAlertBannerItem:!0,isAlertBannerText:!0});var c=d;export{c as default};
//# sourceMappingURL=AlertBannerText.js.map
