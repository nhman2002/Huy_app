{"version":3,"file":"BreadcrumbsBar.js","sources":["../../../../../src/components/BreadcrumbsBar/BreadcrumbsBar.tsx"],"sourcesContent":["import cx from \"classnames\";\nimport React, { FC, ReactElement } from \"react\";\nimport { ComponentDefaultTestId, getTestId } from \"../../tests/test-ids-utils\";\nimport NavigationChevronRight from \"../Icon/Icons/components/NavigationChevronRight\";\nimport { BreadcrumbsBarType } from \"./BreadcrumbsConstants\";\nimport { BreadcrumbItemProps } from \"./BreadcrumbItem/BreadcrumbItem\";\nimport { withStaticProps, VibeComponentProps } from \"../../types\";\nimport styles from \"./BreadcrumbsBar.module.scss\";\n\nexport interface BreadcrumbBarProps extends VibeComponentProps {\n  /** The type of the bar is responsible for whether it will be navigational or for indication only  */\n  type: BreadcrumbsBarType;\n  children: ReactElement<BreadcrumbItemProps> | ReactElement<BreadcrumbItemProps>[];\n}\n\nconst BreadcrumbsBar: FC<BreadcrumbBarProps> & { types?: typeof BreadcrumbsBarType } = ({\n  className,\n  children,\n  type = BreadcrumbsBar.types.INDICATION,\n  id,\n  \"data-testid\": dataTestId\n}) => (\n  <nav\n    aria-label=\"Breadcrumb\"\n    className={cx(styles.breadcrumbsBar, className)}\n    id={id}\n    data-testid={dataTestId || getTestId(ComponentDefaultTestId.BREADCRUMBS_BAR, id)}\n  >\n    <ol>\n      {children &&\n        React.Children.map(children, (child, index) =>\n          React.isValidElement(child)\n            ? [\n                index > 0 && <NavigationChevronRight className={styles.separatorIcon} size=\"14\" aria-hidden=\"true\" />,\n                React.cloneElement(child, {\n                  ...child?.props,\n                  isClickable: type !== BreadcrumbsBar.types.INDICATION\n                })\n              ]\n            : null\n        )}\n    </ol>\n  </nav>\n);\n\nexport default withStaticProps(BreadcrumbsBar, {\n  types: BreadcrumbsBarType\n});\n"],"names":["withStaticProps","BreadcrumbsBar","_ref","children","_ref$type","type","types","INDICATION","id","dataTestId","_jsx","Object","assign","className","cx","styles","breadcrumbsBar","getTestId","ComponentDefaultTestId","BREADCRUMBS_BAR","React","Children","map","child","index","isValidElement","NavigationChevronRight","separatorIcon","size","cloneElement","props","isClickable","BreadcrumbsBarType"],"mappings":"uZAeA,IA8BeA,EAAAA,GA9BwE,SAAjFC,EAAcC,GAAA,IAElBC,EAAQD,EAARC,SAAQC,EAAAF,EACRG,KAAAA,OAAOJ,IAAHG,EAAGH,EAAeK,MAAMC,WAAUH,EACtCI,EAAEN,EAAFM,GACeC,EAAUP,EAAzB,eAAa,OAEbQ,EACa,MAAAC,OAAAC,OAAA,CAAA,aAAA,aACXC,UAAWC,EAAGC,EAAOC,eARdd,EAATW,WASEL,GAAIA,gBACSC,GAAcQ,EAAUC,EAAuBC,gBAAiBX,IAE7E,CAAAL,SAAAO,EAAA,KAAA,CAAAP,SACGA,GACCiB,EAAMC,SAASC,IAAInB,GAAU,SAACoB,EAAOC,GAAK,OACxCJ,EAAMK,eAAeF,GACjB,CACEC,EAAQ,GAAKd,EAACgB,GAAuBb,UAAWE,EAAOY,cAAeC,KAAK,KAAI,cAAa,SAC5FR,EAAMS,aAAaN,iCACdA,aAAK,EAALA,EAAOO,OACV,CAAAC,YAAa1B,IAASJ,EAAeK,MAAMC,eAG/C,IAAI,QAGV,GAGuC,CAC7CD,MAAO0B"}