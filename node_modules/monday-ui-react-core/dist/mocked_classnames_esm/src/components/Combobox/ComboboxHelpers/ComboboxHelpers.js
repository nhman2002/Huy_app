import{defineProperty as e}from"../../../../_virtual/_rollupPluginBabelHelpers.js";import{__rest as o}from"../../../../_virtual/_tslib.js";import{jsx as t}from"react/jsx-runtime";import{useMemo as i}from"react";import n from"classnames";import r from"../components/ComboboxOption/ComboboxOption.js";import s from"../components/ComboboxCategory/ComboboxCategory.js";import a from"../../Divider/Divider.js";import{COMBOBOX_DIVIDER_ITEM as c,COMBOBOX_CATEGORY_ITEM as l,COMBOBOX_OPTION_ITEM as m}from"../components/ComboboxConstants.js";import d from"../../../hooks/useActiveDescendantListFocus/index.js";import{getOptionsByCategories as u}from"../ComboboxService.js";import p from"../components/ComboboxItems/ComboboxItems.module.scss.js";import g from"./ComboboxHelpers.module.scss.js";function h(o){var t=o.categories,r=o.options,s=o.filterValue,a=o.withCategoriesDivider,c=o.optionLineHeight;return i((function(){var o=[],i=[],l=new Map;if(t){var m=u(r,t,s),d=0;Object.keys(m).forEach((function(r,s){var u=a&&0!==s;u&&o.push(v({categoryId:r}));var g=m[r].length>0,h=0===s,f=b({categoryId:r,categoryData:t[r],withDivider:u,className:n(e(e(e({},p.categoryWithOptions,g),p.categoryWithoutOptions,!g),p.firstCategory,h))});o.push(f),l.set(r,f),m[r].forEach((function(e){var t=I({height:c,option:e,index:d,categoryId:f.id});l.set(t.id,t),o.push(t),i.push(e),d++}))}))}else i=r,o=r.map((function(e,o){return I({height:c,option:e,index:o})}));return{items:o,itemsMap:l,selectableItems:i}}),[t,r,s,a,c])}function f(e){var o=e.defaultVisualFocusFirstIndex,t=e.inputRef,n=e.onClick,r=e.isChildSelectable,s=e.options,a=e.getOptionId,c=i((function(){return s.map((function(e,o){return a(null==e?void 0:e.id,o)}))}),[a,s]),l=d({defaultVisualFocusFirstIndex:o,focusedElementRef:t,focusedElementRole:d.roles.COMBOBOX,itemsIds:c,onItemClick:n,isItemSelectable:r,isIgnoreSpaceAsItemSelection:!0});return{visualFocusItemIndex:l.visualFocusItemIndex,visualFocusItemId:l.visualFocusItemId,onOptionClick:l.onItemClickCallback}}function v(e){return{type:c,height:17,id:"".concat(e.categoryId,"-divider")}}function b(e){return{height:32,type:l,category:e.categoryData,id:e.categoryId,withDivider:e.withDivider,className:e.className}}function I(e){var o=e.option,t=e.index;return{type:m,height:e.height,belongToCategory:!0,index:t,option:o,id:o.id||""+t,optionRenderer:e.optionRenderer,isActive:e.isActive,optionLineHeight:e.optionLineHeight,shouldScrollToSelectedItem:e.shouldScrollToSelectedItem,categoryId:e.categoryId}}function y(e){var i,r,s=e.item,a=e.style,d=e.optionEvents,u=e.optionRenderData,p=e.isVirtualized,h=e.stickyCategories,f=s.type,v=o(s,["type"]);switch(f){case c:r=C({id:v.id,height:v.height});break;case l:r=x({id:v.id,category:v.category,className:v.className}),h&&!p&&(i=g.sticky);break;case m:r=O(Object.assign(Object.assign(Object.assign({},v),d),u))}return t("div",Object.assign({className:n(g.comboboxItemContainer,i),style:a},{children:r}),v.id)}function C(e){return t("div",Object.assign({className:g.dividerContainer,style:{height:e.height}},{children:t(a,{className:g.divider},e.id)}))}function x(e){return t(s,{category:e.category,className:e.className},e.id)}function O(e){var o=e.index,i=e.onOptionEnter;return t(r,{className:e.className,index:o,option:e.option,optionRenderer:e.optionRenderer,scrollRef:e.scrollRef,isActive:e.activeItemIndex===o,visualFocus:o===e.visualFocusItemIndex,onOptionClick:e.onOptionClick,onOptionHover:i,onOptionLeave:e.onOptionLeave,onOptionEnter:i,optionLineHeight:e.optionLineHeight,shouldScrollWhenActive:e.shouldScrollToSelectedItem},e.id)}export{x as categoryItemRenderer,y as comboboxItemRenderer,b as createCategoryItemObject,v as createDividerItemObject,I as createOptionItemObject,C as dividerItemRenderer,O as optionItemRenderer,h as useItemsData,f as useKeyboardNavigation};
//# sourceMappingURL=ComboboxHelpers.js.map
