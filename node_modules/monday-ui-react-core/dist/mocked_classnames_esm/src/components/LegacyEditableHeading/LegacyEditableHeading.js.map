{"version":3,"file":"LegacyEditableHeading.js","sources":["../../../../../src/components/LegacyEditableHeading/LegacyEditableHeading.tsx"],"sourcesContent":["import { camelCase } from \"lodash-es\";\nimport { getStyle } from \"../../helpers/typesciptCssModulesHelper\";\nimport { ComponentDefaultTestId, getTestId } from \"../../tests/test-ids-utils\";\nimport cx from \"classnames\";\nimport React, { useCallback, useEffect, useLayoutEffect, useRef, useState } from \"react\";\nimport Heading, { HeadingProps } from \"../LegacyHeading/LegacyHeading\";\nimport Clickable from \"../Clickable/Clickable\";\nimport EditableInput, { EditableInputProps } from \"../EditableInput/EditableInput\";\nimport usePrevious from \"../../hooks/usePrevious\";\nimport { InputType } from \"../EditableInput/EditableInputConstants\";\nimport { HeadingSizes, HeadingTypes } from \"../LegacyHeading/LegacyHeadingConstants\";\nimport { Sizes } from \"../../constants\";\nimport { withStaticProps } from \"../../types\";\nimport headingStyles from \"../LegacyHeading/LegacyHeading.module.scss\";\nimport styles from \"./LegacyEditableHeading.module.scss\";\nimport { backwardCompatibilityForProperties } from \"../../helpers/backwardCompatibilityForProperties\";\n\nexport interface EditableHeadingProps extends EditableInputProps, HeadingProps {\n  displayPlaceholderInTextMode?: boolean;\n  inputAriaLabel?: string;\n  errorClass?: string;\n  headingClassName?: string;\n  inputClassName?: string;\n  /**\n   * @deprecated - use \"data-testid\" instead\n   */\n  dataTestId?: string;\n  \"data-testid\"?: string;\n  editing?: boolean;\n  disabled?: boolean;\n  errorClassTimeout?: number;\n  style?: React.CSSProperties;\n  onStartEditing?: (event: React.KeyboardEvent) => void;\n  tooltip?: string;\n  insetFocus?: boolean;\n  contentRenderer?: React.FC;\n}\n\n/**\n * @deprecated - use EditableHeading from 'monday-ui-react-core/next'\n */\nconst LegacyEditableHeading: React.FC<EditableHeadingProps> & {\n  sizes?: typeof Sizes;\n  types?: typeof HeadingTypes;\n} = props => {\n  const {\n    id = \"\",\n    className,\n    inputClassName = \"\",\n    dataTestId: backwardCompatabilityDataTestId = \"\",\n    \"data-testid\": dataTestId = \"\",\n    value,\n    editing,\n    disabled,\n    onFinishEditing,\n    onCancelEditing,\n    onIgnoreBlurEvent,\n    errorClassTimeout = 2000,\n    style,\n    customColor,\n    onStartEditing,\n    contentRenderer,\n    tooltip,\n    autoSize = true,\n    highlightTerm = null,\n    insetFocus = false,\n    size = HeadingSizes.LARGE,\n    displayPlaceholderInTextMode = true,\n    suggestEditOnHover = true,\n    type = Heading.types.h1\n  } = props;\n\n  const overrideDataTestId = backwardCompatibilityForProperties([dataTestId, backwardCompatabilityDataTestId]);\n\n  // State\n  const [isEditing, setIsEditing] = useState(editing && !disabled);\n  const [isError, setIsError] = useState(false);\n  const [valueState, setValueState] = useState(value || \"\");\n  const prevValue = usePrevious(value);\n\n  // Refs\n  const ref = useRef(null);\n\n  // Callbacks\n  const onClick = useCallback(\n    (event: React.KeyboardEvent) => {\n      if (disabled || isEditing) return;\n      setIsEditing(true);\n      onStartEditing && onStartEditing(event);\n    },\n    [isEditing, disabled, setIsEditing, onStartEditing]\n  );\n\n  const onFinishEditingCallback = useCallback(\n    (newValue: string, event: React.KeyboardEvent | React.FocusEvent) => {\n      setIsEditing(false);\n      setValueState(newValue);\n      onFinishEditing?.(newValue, event);\n    },\n    [onFinishEditing, setIsEditing, setValueState]\n  );\n\n  const onCancelEditingCallback = useCallback(\n    (event: React.KeyboardEvent) => {\n      setIsEditing(false);\n      onCancelEditing?.(event);\n    },\n    [onCancelEditing, setIsEditing]\n  );\n\n  const onIgnoreBlurEventCallback = useCallback(\n    (value: string) => {\n      onIgnoreBlurEvent?.(value);\n    },\n    [onIgnoreBlurEvent]\n  );\n\n  const clearErrorState = useCallback(() => {\n    setIsError(false);\n  }, [setIsError]);\n\n  const onInputErrorCallback = useCallback(() => {\n    setIsError(true);\n  }, [setIsError]);\n\n  const onInputSuccessCallback = useCallback(() => {\n    clearErrorState();\n  }, [clearErrorState]);\n\n  // Effects\n  useEffect(() => {\n    // Update value if changed from props\n    if (!editing && value !== prevValue && value !== valueState) {\n      setValueState(value);\n    }\n  }, [editing, value, prevValue, valueState, setValueState]);\n\n  useEffect(() => {\n    // update isEditing state if \"editing\" prop changed\n    setIsEditing(editing);\n  }, [editing]);\n\n  useLayoutEffect(() => {\n    if (!editing && !valueState && value) {\n      // When user entered empty value - rollback to value from props\n      setValueState(value);\n    }\n  }, [editing, value, prevValue, valueState, setValueState]);\n\n  useEffect(() => {\n    let timer: ReturnType<typeof setTimeout>;\n    if (isError) {\n      timer = setTimeout(clearErrorState, errorClassTimeout);\n    }\n    return () => timer && clearTimeout(timer);\n  }, [isError, setIsError, clearErrorState, errorClassTimeout]);\n\n  const renderContentComponent = () => {\n    const valueOrPlaceholder = valueState || props.placeholder || \"\";\n    const contentProps = {\n      value: displayPlaceholderInTextMode ? valueOrPlaceholder : valueState,\n      type,\n      customColor,\n      suggestEditOnHover: suggestEditOnHover && !disabled,\n      tooltipPosition: props.tooltipPosition,\n      ellipsisMaxLines: props.ellipsisMaxLines,\n      nonEllipsisTooltip: props.tooltip,\n      size: size as Sizes,\n      highlightTerm,\n      className: cx(styles.headingComponent, props.headingClassName)\n    };\n\n    if (contentRenderer) {\n      return contentRenderer(contentProps);\n    }\n    // eslint-disable-next-line react/jsx-props-no-spreading\n    return <Heading {...contentProps} />;\n  };\n\n  const getInputProps = () => {\n    const textAreaType = props.ellipsisMaxLines > 1 ? InputType.TEXT_AREA : undefined;\n    const inputType = props.inputType || textAreaType;\n    return {\n      value: valueState,\n      className: cx(\n        getStyle(headingStyles, camelCase(\"element-type-\" + type)),\n        getStyle(headingStyles, camelCase(\"size-\" + size)),\n        inputClassName\n      ),\n      isValidValue: props.isValidValue,\n      onChange: props.onChange,\n      onKeyDown: props.onKeyDown,\n      onKeyPress: props.onKeyPress,\n      onClick: props.onClick,\n      customColor,\n      onTabHandler: props.onTabHandler,\n      onArrowKeyDown: props.onArrowKeyDown,\n      autoComplete: props.autoComplete,\n      maxLength: props.maxLength,\n      placeholder: props.placeholder,\n      shouldFocusOnMount: props.shouldFocusOnMount,\n      selectOnMount: props.selectOnMount,\n      onBlur: props.onBlur,\n      onFocus: props.onFocus,\n      inputType,\n      ignoreBlurClass: props.ignoreBlurClass,\n      autoSize,\n      textareaSubmitOnEnter: props.textareaSubmitOnEnter,\n      onFinishEditing: onFinishEditingCallback,\n      onCancelEditing: onCancelEditingCallback,\n      onIgnoreBlurEvent: onIgnoreBlurEventCallback,\n      onError: onInputErrorCallback,\n      onSuccess: onInputSuccessCallback,\n      ariaLabel: props.inputAriaLabel\n    };\n  };\n\n  const renderInputComponent = () => {\n    const inputProps = getInputProps();\n    // eslint-disable-next-line react/jsx-props-no-spreading\n    return <EditableInput {...inputProps} />;\n  };\n\n  const shouldEdit = !disabled && isEditing;\n\n  return (\n    <div\n      ref={ref}\n      style={style}\n      className={cx(styles.editableHeadingWrapper, className, {\n        [styles.insetFocus]: insetFocus\n      })}\n      aria-label={`${value} ${tooltip || \"\"}`}\n      id={id}\n      data-testid={overrideDataTestId || getTestId(ComponentDefaultTestId.EDITABLE_HEADING, id)}\n    >\n      <Clickable role={shouldEdit ? \"button\" : \"input\"} onClick={onClick} disabled={disabled}>\n        {shouldEdit ? renderInputComponent() : renderContentComponent()}\n      </Clickable>\n    </div>\n  );\n};\n\nexport default withStaticProps(LegacyEditableHeading, {\n  types: HeadingTypes,\n  sizes: HeadingSizes\n});\n"],"names":["withStaticProps","props","_props$id","id","className","_props$inputClassName","inputClassName","_props$dataTestId","dataTestId","_props$dataTestid","value","editing","disabled","onFinishEditing","onCancelEditing","onIgnoreBlurEvent","_props$errorClassTime","errorClassTimeout","style","customColor","onStartEditing","contentRenderer","tooltip","_props$autoSize","autoSize","_props$highlightTerm","highlightTerm","_props$insetFocus","insetFocus","_props$size","size","HeadingSizes","LARGE","_props$displayPlaceho","displayPlaceholderInTextMode","_props$suggestEditOnH","suggestEditOnHover","_props$type","type","Heading","types","h1","overrideDataTestId","backwardCompatibilityForProperties","_useState","useState","_useState2","_slicedToArray","isEditing","setIsEditing","_useState3","_useState4","isError","setIsError","_useState5","_useState6","valueState","setValueState","prevValue","usePrevious","ref","useRef","onClick","useCallback","event","onFinishEditingCallback","newValue","onCancelEditingCallback","onIgnoreBlurEventCallback","clearErrorState","onInputErrorCallback","onInputSuccessCallback","useEffect","useLayoutEffect","timer","setTimeout","clearTimeout","contentProps","inputType","inputProps","shouldEdit","_jsx","Object","assign","cx","styles","editableHeadingWrapper","_defineProperty","concat","getTestId","ComponentDefaultTestId","EDITABLE_HEADING","children","Clickable","role","ellipsisMaxLines","InputType","TEXT_AREA","undefined","getStyle","headingStyles","camelCase","isValidValue","onChange","onKeyDown","onKeyPress","onTabHandler","onArrowKeyDown","autoComplete","maxLength","placeholder","shouldFocusOnMount","selectOnMount","onBlur","onFocus","ignoreBlurClass","textareaSubmitOnEnter","onError","onSuccess","ariaLabel","inputAriaLabel","EditableInput","tooltipPosition","nonEllipsisTooltip","headingComponent","headingClassName","HeadingTypes","sizes"],"mappings":"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"}