import{jsx as e}from"react/jsx-runtime";import t,{forwardRef as i,useRef as n,useCallback as s}from"react";import r from"../../../hooks/useMergeRef.js";import{GridKeyboardNavigationContext as o}from"../../GridKeyboardNavigationContext/GridKeyboardNavigationContext.js";import{useMenuGridItemNavContext as a}from"./useMenuGridItemNavContext.js";import{useFocusGridItemByActiveStatus as d}from"./useFocusGridItemByActiveStatus.js";import{useFocusWithin as c}from"../../../hooks/useFocusWithin.js";import{getTestId as l,ComponentDefaultTestId as u}from"../../../tests/testIds.js";var m=i((function(i,m){var v=i.className,I=i.id,x=i.children,f=i.index,b=i.activeItemIndex,p=void 0===b?-1:b,g=i.closeMenu,h=i.getNextSelectableIndex,j=i.getPreviousSelectableIndex,M=i.setActiveItemIndex,S=i.setSubMenuIsOpenByIndex,N=i.isUnderSubMenu,y=void 0!==N&&N,C=i.disabled,G=void 0!==C&&C,O=i.useDocumentEventListeners,E=void 0!==O&&O,R=i["data-testid"],P=n(null),A=r(m,P),D=n(),F=x&&t.Children.only(x);F||console.error("MenuGridItem can accept only a single element as first level child, this element is not valid: ",F);var U=s((function(e){S(f,e),e&&M(f)}),[f,M,S]),W=c({onFocusWithinChange:U}).focusWithinProps;d({wrapperRef:P,childRef:D,activeItemIndex:p,index:f,useDocumentEventListeners:E});var k=a({wrapperRef:P,setActiveItemIndex:M,getPreviousSelectableIndex:j,getNextSelectableIndex:h,activeItemIndex:p,isUnderSubMenu:y,closeMenu:g});return e("section",Object.assign({ref:A,className:v,id:I,"data-testid":R||l(u.MENU_GRID_ITEM,I),tabIndex:-1,role:"grid"},W,{children:e(o.Provider,Object.assign({value:k},{children:t.cloneElement(F,Object.assign(Object.assign({},null==F?void 0:F.props),{disabled:G,ref:D}))}))}))}));Object.assign(m,{isMenuChild:!0,isSelectable:!0});var v=m;export{v as default};
//# sourceMappingURL=MenuGridItem.js.map
