{"version":3,"file":"MenuItem.js","sources":["../../../../../../src/components/Menu/MenuItem/MenuItem.tsx"],"sourcesContent":["/* eslint-disable react/jsx-props-no-spreading */\nimport React, { ForwardedRef, forwardRef, useCallback, useEffect, useLayoutEffect, useMemo, useRef } from \"react\";\nimport cx from \"classnames\";\nimport { isFunction } from \"lodash-es\";\nimport { ComponentDefaultTestId, getTestId } from \"../../../tests/test-ids-utils\";\nimport { DialogPosition } from \"../../../constants/positions\";\nimport Text from \"../../Text/Text\";\nimport Tooltip, { TooltipProps } from \"../../../components/Tooltip/Tooltip\";\nimport Icon from \"../../../components/Icon/Icon\";\nimport DialogContentContainer from \"../../../components/DialogContentContainer/DialogContentContainer\";\nimport useMergeRef from \"../../../hooks/useMergeRef\";\nimport useIsOverflowing from \"../../../hooks/useIsOverflowing/useIsOverflowing\";\nimport usePopover from \"../../../hooks/usePopover\";\nimport { backwardCompatibilityForProperties } from \"../../../helpers/backwardCompatibilityForProperties\";\nimport useMenuItemMouseEvents from \"./hooks/useMenuItemMouseEvents\";\nimport useMenuItemKeyboardEvents from \"./hooks/useMenuItemKeyboardEvents\";\nimport { SubIcon, VibeComponent, VibeComponentProps, withStaticProps } from \"../../../types\";\nimport { IconType } from \"../../Icon/IconConstants\";\nimport { TAB_INDEX_FOCUS_WITH_JS_ONLY, TooltipPosition } from \"./MenuItemConstants\";\nimport { CloseMenuOption, MenuChild } from \"../Menu/MenuConstants\";\nimport Label from \"../../Label/Label\";\nimport styles from \"./MenuItem.module.scss\";\nimport { DropdownChevronRight } from \"../../Icon/Icons\";\nimport IconButton from \"../../IconButton/IconButton\";\nimport Divider from \"../../Divider/Divider\";\nimport { DirectionType } from \"../../Divider/DividerConstants\";\nimport useIsMouseEnter from \"../../../hooks/useIsMouseEnter\";\n\nexport interface MenuItemProps extends VibeComponentProps {\n  title?: string;\n  label?: string;\n  icon?: SubIcon;\n  iconType?: IconType;\n  iconBackgroundColor?: string;\n  disabled?: boolean;\n  disableReason?: string;\n  selected?: boolean;\n  onClick?: (event: React.MouseEvent | React.KeyboardEvent) => void;\n  activeItemIndex?: number;\n  setActiveItemIndex?: (index: number) => void;\n  index?: number;\n  key?: string;\n  isParentMenuVisible?: boolean;\n  resetOpenSubMenuIndex?: () => void;\n  hasOpenSubMenu?: boolean;\n  setSubMenuIsOpenByIndex?: (index: number, isOpen: boolean) => void;\n  useDocumentEventListeners?: boolean;\n  tooltipContent?: string;\n  tooltipPosition?: TooltipPosition;\n  tooltipShowDelay?: number;\n  tooltipProps?: Partial<TooltipProps>;\n  onMouseLeave?: (event: React.MouseEvent) => void;\n  onMouseEnter?: (event: React.MouseEvent) => void;\n  /**\n   * @deprecated - use className instead\n   */\n  classname?: string;\n  /**\n   * Class name which is added to div which wraps an Icon\n   */\n  iconWrapperClassName?: string;\n  isInitialSelectedState?: boolean;\n  shouldScrollMenu?: boolean;\n  closeMenu?: (option: CloseMenuOption) => void;\n  menuRef?: React.RefObject<HTMLElement>;\n  children?: MenuChild | MenuChild[];\n  /**\n   * Type of menu item with sub menu, which has two click/hover options-\n   *    1. click on the main menu item will trigger onClick\n   *    2. click/hover on icon button will open the sub menu\n   */\n  splitMenuItem?: boolean;\n}\n\nconst MenuItem: VibeComponent<MenuItemProps> & {\n  iconType?: typeof Icon.type;\n  tooltipPositions?: typeof DialogPosition;\n  isSelectable?: boolean;\n  isMenuChild?: boolean;\n} = forwardRef(\n  (\n    {\n      className,\n      // Backward compatibility for props naming\n      classname,\n      iconWrapperClassName,\n      title = \"\",\n      label = \"\",\n      icon = \"\",\n      menuRef,\n      iconType,\n      iconBackgroundColor,\n      disabled = false,\n      disableReason,\n      selected = false,\n      onClick,\n      activeItemIndex = -1,\n      setActiveItemIndex,\n      index,\n      key,\n      id,\n      children,\n      isParentMenuVisible = false,\n      resetOpenSubMenuIndex,\n      hasOpenSubMenu = false,\n      setSubMenuIsOpenByIndex,\n      closeMenu,\n      useDocumentEventListeners = false,\n      tooltipContent,\n      tooltipPosition = MenuItem.tooltipPositions.RIGHT,\n      tooltipShowDelay = 300,\n      tooltipProps,\n      isInitialSelectedState,\n      onMouseEnter,\n      onMouseLeave,\n      shouldScrollMenu,\n      \"data-testid\": dataTestId,\n      splitMenuItem = false\n    },\n    ref: ForwardedRef<HTMLElement>\n  ) => {\n    const overrideClassName = backwardCompatibilityForProperties([className, classname]);\n    const isActive = activeItemIndex === index;\n    const hasChildren = !!children;\n    const isSubMenuOpen = hasChildren && isActive && hasOpenSubMenu;\n    const shouldShowSubMenu = hasChildren && isParentMenuVisible && isSubMenuOpen;\n    const submenuChild: MenuChild = children && React.Children.only(children);\n    let menuChild;\n    if (submenuChild && submenuChild.type && submenuChild.type.isMenu) {\n      menuChild = submenuChild;\n    } else if (submenuChild) {\n      console.error(\n        \"menu item can accept only menu element as first level child, this element is not valid: \",\n        submenuChild\n      );\n    }\n\n    const titleRef = useRef();\n    const childRef = useRef<HTMLElement>();\n    const referenceElementRef = useRef(null);\n    const iconButtonElementRef = useRef(null);\n    const popperElementRef = useRef(null);\n    const popperElement = popperElementRef.current;\n    const referenceElement = referenceElementRef.current;\n    const childElement = childRef.current;\n    const mergedRef = useMergeRef(ref, referenceElementRef);\n\n    const isMouseEnterMenuItem = useIsMouseEnter({ ref: referenceElementRef });\n    const isMouseEnterIconButton = useIsMouseEnter({ ref: iconButtonElementRef });\n\n    const isTitleHoveredAndOverflowing = useIsOverflowing({ ref: titleRef });\n\n    const { styles: popoverStyles, attributes: popoverAttributes } = usePopover(referenceElement, popperElement, {\n      isOpen: isSubMenuOpen\n    });\n    useEffect(() => {\n      if (isActive && shouldScrollMenu && referenceElement) {\n        if (referenceElement.scrollIntoViewIfNeeded) {\n          referenceElement.scrollIntoViewIfNeeded({ behaviour: \"smooth\" });\n        } else {\n          referenceElement.scrollIntoView?.({ behavior: \"smooth\", block: \"center\" });\n        }\n      }\n    }, [isActive, referenceElement, shouldScrollMenu]);\n\n    const isMouseEnter = useMenuItemMouseEvents({\n      ref: referenceElementRef,\n      splitMenuItemIconButtonRef: iconButtonElementRef,\n      resetOpenSubMenuIndex,\n      setSubMenuIsOpenByIndex,\n      isActive,\n      setActiveItemIndex,\n      index,\n      hasChildren,\n      splitMenuItem\n    });\n\n    const { onClickCallback } = useMenuItemKeyboardEvents({\n      onClick,\n      disabled,\n      isActive,\n      index,\n      setActiveItemIndex,\n      hasChildren,\n      shouldShowSubMenu,\n      setSubMenuIsOpenByIndex,\n      menuRef,\n      isMouseEnter,\n      closeMenu,\n      useDocumentEventListeners,\n      splitMenuItem,\n      isMouseEnterMenuItem,\n      isMouseEnterIconButton\n    });\n\n    useLayoutEffect(() => {\n      if (useDocumentEventListeners) return;\n\n      if (shouldShowSubMenu && childElement) {\n        requestAnimationFrame(() => {\n          childElement.focus();\n        });\n      }\n    }, [shouldShowSubMenu, childElement, useDocumentEventListeners]);\n\n    useEffect(() => {\n      if (useDocumentEventListeners) return;\n      if (isActive) {\n        referenceElement?.focus();\n      }\n    }, [isActive, referenceElement, useDocumentEventListeners]);\n\n    const closeSubMenu = useCallback(\n      (options: { propagate?: boolean } = {}) => {\n        setSubMenuIsOpenByIndex(index, false);\n        if (options.propagate) {\n          closeMenu(options);\n        }\n      },\n      [setSubMenuIsOpenByIndex, index, closeMenu]\n    );\n\n    const renderSubMenuIconIfNeeded = () => {\n      if (!hasChildren) return null;\n\n      return splitMenuItem ? (\n        <div className={styles.subMenuIconWrapper}>\n          <Divider direction={DirectionType.VERTICAL} className={styles.divider} />\n          <IconButton\n            icon={DropdownChevronRight}\n            className={styles.splitMenuItemIconButton}\n            kind={IconButton.kinds.TERTIARY}\n            size={null} // Customizing size via className\n            iconClassName={cx(styles.iconButton, { [styles.disabled]: disabled })}\n            tabIndex={-1}\n            ref={iconButtonElementRef}\n            active={shouldShowSubMenu}\n            disabled={disabled}\n          />\n        </div>\n      ) : (\n        <div className={styles.subMenuIconWrapper}>\n          <Icon\n            clickable={false}\n            icon={DropdownChevronRight}\n            iconLabel={title}\n            className={styles.subMenuIcon}\n            ignoreFocusStyle\n            iconSize={18}\n          />\n        </div>\n      );\n    };\n\n    const [iconWrapperStyle, iconStyle] = useMemo(() => {\n      return iconBackgroundColor\n        ? [\n            {\n              backgroundColor: iconBackgroundColor,\n              borderRadius: \"4px\",\n              opacity: disabled ? 0.4 : 1\n            },\n            { color: \"var(--text-color-on-primary)\" }\n          ]\n        : [];\n    }, [iconBackgroundColor, disabled]);\n\n    const renderMenuItemIconIfNeeded = () => {\n      if (!icon) return null;\n\n      let finalIconType = iconType;\n      if (!finalIconType) {\n        finalIconType = isFunction(icon) ? Icon.type.SVG : Icon.type.ICON_FONT;\n      }\n\n      return (\n        <div className={cx(styles.iconWrapper, iconWrapperClassName)} style={iconWrapperStyle}>\n          <Icon\n            iconType={finalIconType}\n            clickable={false}\n            icon={icon}\n            iconLabel={title}\n            className={styles.icon}\n            ignoreFocusStyle\n            style={iconStyle}\n            iconSize={18}\n          />\n        </div>\n      );\n    };\n\n    const a11yProps = useMemo(() => {\n      if (!children) return {};\n      return {\n        \"aria-haspopup\": true,\n        \"aria-expanded\": hasOpenSubMenu\n      };\n    }, [children, hasOpenSubMenu]);\n\n    const shouldShowTooltip = isTitleHoveredAndOverflowing || disabled || tooltipContent;\n\n    const finalTooltipContent = useMemo(() => {\n      if (disabled) return disableReason;\n      if (tooltipContent) return tooltipContent;\n      return title;\n    }, [disableReason, disabled, title, tooltipContent]);\n\n    return (\n      // eslint-disable-next-line jsx-a11y/click-events-have-key-events\n      <Text\n        element=\"li\"\n        type={Text.types.TEXT2}\n        {...a11yProps}\n        key={key}\n        id={id}\n        data-testid={dataTestId || getTestId(ComponentDefaultTestId.MENU_ITEM, index)}\n        className={cx(styles.item, overrideClassName, {\n          [styles.disabled]: disabled,\n          [styles.focused]: isActive,\n          [styles.selected]: selected,\n          [styles.initialSelected]: isInitialSelectedState,\n          [styles.splitMenuItem]: splitMenuItem\n        })}\n        ref={mergedRef}\n        onClick={onClickCallback}\n        role=\"menuitem\"\n        aria-current={isActive}\n        onMouseLeave={onMouseLeave}\n        onMouseEnter={onMouseEnter}\n        tabIndex={TAB_INDEX_FOCUS_WITH_JS_ONLY}\n      >\n        {renderMenuItemIconIfNeeded()}\n        <Tooltip\n          content={shouldShowTooltip ? finalTooltipContent : null}\n          position={tooltipPosition}\n          showDelay={tooltipShowDelay}\n          // Tooltip should be on a whole MenuItem, but it's a breaking change - should be fixed in the next major and then this can be removed\n          moveBy={icon && tooltipPosition === Tooltip.positions.LEFT ? { main: 30 } : undefined}\n          {...tooltipProps}\n        >\n          <div ref={titleRef} className={styles.title}>\n            {title}\n          </div>\n        </Tooltip>\n        {label && <Label kind={Label.kinds.LINE} text={label} />}\n        {renderSubMenuIconIfNeeded()}\n        <div\n          style={{ ...popoverStyles.popper, visibility: shouldShowSubMenu ? \"visible\" : \"hidden\" }}\n          // eslint-disable-next-line react/jsx-props-no-spreading\n          {...popoverAttributes.popper}\n          ref={popperElementRef}\n        >\n          {menuChild && shouldShowSubMenu && (\n            <DialogContentContainer>\n              {React.cloneElement(menuChild, {\n                ...menuChild?.props,\n                isVisible: shouldShowSubMenu,\n                isSubMenu: true,\n                onClose: closeSubMenu,\n                ref: childRef,\n                useDocumentEventListeners\n              })}\n            </DialogContentContainer>\n          )}\n        </div>\n      </Text>\n    );\n  }\n);\n\nObject.assign(MenuItem, {\n  isSelectable: true,\n  isMenuChild: true\n});\n\nexport default withStaticProps(MenuItem, {\n  iconType: Icon.type,\n  tooltipPositions: DialogPosition\n});\n"],"names":["MenuItem","forwardRef","_ref","ref","menuChild","iconWrapperClassName","_ref$title","title","_ref$label","label","_ref$icon","icon","menuRef","iconType","iconBackgroundColor","_ref$disabled","disabled","disableReason","_ref$selected","selected","onClick","_ref$activeItemIndex","activeItemIndex","setActiveItemIndex","index","key","id","children","_ref$isParentMenuVisi","isParentMenuVisible","resetOpenSubMenuIndex","_ref$hasOpenSubMenu","hasOpenSubMenu","setSubMenuIsOpenByIndex","closeMenu","_ref$useDocumentEvent","useDocumentEventListeners","tooltipContent","_ref$tooltipPosition","tooltipPosition","tooltipPositions","RIGHT","_ref$tooltipShowDelay","tooltipShowDelay","tooltipProps","isInitialSelectedState","onMouseEnter","onMouseLeave","shouldScrollMenu","dataTestId","_ref$splitMenuItem","splitMenuItem","overrideClassName","backwardCompatibilityForProperties","className","classname","isActive","hasChildren","isSubMenuOpen","shouldShowSubMenu","submenuChild","React","Children","only","type","isMenu","console","error","titleRef","useRef","childRef","referenceElementRef","iconButtonElementRef","popperElementRef","popperElement","current","referenceElement","childElement","mergedRef","useMergeRef","isMouseEnterMenuItem","useIsMouseEnter","isMouseEnterIconButton","isTitleHoveredAndOverflowing","useIsOverflowing","_usePopover","usePopover","isOpen","popoverStyles","styles","popoverAttributes","attributes","useEffect","scrollIntoViewIfNeeded","behaviour","_a","scrollIntoView","call","behavior","block","isMouseEnter","useMenuItemMouseEvents","splitMenuItemIconButtonRef","onClickCallback","useMenuItemKeyboardEvents","useLayoutEffect","requestAnimationFrame","focus","closeSubMenu","useCallback","options","arguments","length","undefined","propagate","_useMemo","useMemo","backgroundColor","borderRadius","opacity","color","_useMemo2","_slicedToArray","iconWrapperStyle","iconStyle","a11yProps","shouldShowTooltip","finalTooltipContent","_createElement","Text","element","types","TEXT2","getTestId","ComponentDefaultTestId","MENU_ITEM","cx","item","_defineProperty","focused","initialSelected","role","tabIndex","TAB_INDEX_FOCUS_WITH_JS_ONLY","finalIconType","isFunction","Icon","SVG","ICON_FONT","_jsx","Object","assign","iconWrapper","style","clickable","iconLabel","ignoreFocusStyle","iconSize","renderMenuItemIconIfNeeded","Tooltip","content","position","showDelay","moveBy","positions","LEFT","main","Label","kind","kinds","LINE","text","_jsxs","subMenuIconWrapper","Divider","direction","DirectionType","VERTICAL","divider","IconButton","DropdownChevronRight","splitMenuItemIconButton","TERTIARY","size","iconClassName","iconButton","active","subMenuIcon","popper","visibility","DialogContentContainer","cloneElement","props","isVisible","isSubMenu","onClose","isSelectable","isMenuChild","withStaticProps","DialogPosition"],"mappings":"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"}