{"version":3,"file":"ResponsiveList.js","sources":["../../../../../src/components/ResponsiveList/ResponsiveList.jsx"],"sourcesContent":["import cx from \"classnames\";\nimport React, { useRef, forwardRef, useMemo } from \"react\";\nimport PropTypes from \"prop-types\";\nimport useMergeRef from \"../../hooks/useMergeRef\";\nimport MenuButton from \"../MenuButton/MenuButton\";\nimport useElementsOverflowingIndex from \"../../hooks/useElementsOverflowingIndex\";\nimport { ComponentDefaultTestId, getTestId } from \"../../tests/test-ids-utils\";\nimport styles from \"./ResponsiveList.module.scss\";\n\nconst DEFAULT_MINIMAL_MARGIN = 32;\nconst EMPTY_ARRAY = [];\n\nconst ResponsiveList = forwardRef(\n  (\n    {\n      id,\n      className,\n      rootClassName,\n      children,\n      menuButtonSize,\n      paddingSize,\n      dialogZIndex,\n      dialogClassName,\n      menuButtonClassName,\n      menuWrapperClassName,\n      resizeDebounceTime,\n      menuButtonAriaLabel,\n      menuButtonProps,\n      \"data-testid\": dataTestId\n    },\n    ref\n  ) => {\n    const componentRef = useRef(null);\n    const mergedRef = useMergeRef(ref, componentRef);\n    const index = useElementsOverflowingIndex({\n      ref: componentRef,\n      children,\n      paddingSize,\n      resizeDebounceTime,\n      ignoreLast: true\n    });\n\n    const directChildren = useMemo(() => {\n      if (index === -1) {\n        return children;\n      }\n      const childrenArray = React.Children.toArray(children);\n      return childrenArray.slice(0, index);\n    }, [children, index]);\n\n    const menuChildren = useMemo(() => {\n      if (index === -1) {\n        return EMPTY_ARRAY;\n      }\n      const childrenArray = React.Children.toArray(children);\n\n      return childrenArray.slice(index, childrenArray.length);\n    }, [children, index]);\n\n    const hiddenChildren = useMemo(() => {\n      const childrenArray = React.Children.toArray(children);\n\n      return childrenArray.map(el => el?.props?.responsiveListPlaceholder || el);\n    }, [children]);\n\n    return (\n      <div\n        className={cx(styles.responsiveListRoot, rootClassName)}\n        id={id}\n        data-testid={dataTestId || getTestId(ComponentDefaultTestId.RESPONSIVE_LIST, id)}\n      >\n        {index !== null && (\n          <div className={cx(styles.responsiveList, className)}>\n            {directChildren}\n            {!!menuChildren.length && (\n              <MenuButton\n                componentClassName={cx(styles.listMenuButton, menuButtonClassName)}\n                size={menuButtonSize}\n                openDialogComponentClassName={cx(styles.menuButtonDialog, dialogClassName)}\n                zIndex={dialogZIndex}\n                ariaLabel={menuButtonAriaLabel}\n                {...menuButtonProps}\n              >\n                <div className={cx(styles.menuWrapperFlex, menuWrapperClassName)}>{menuChildren}</div>\n              </MenuButton>\n            )}\n          </div>\n        )}\n        <div ref={mergedRef} className={cx(styles.responsiveList, styles.dummy, className)}>\n          {hiddenChildren}\n          <MenuButton\n            componentClassName={cx(styles.listMenuButton, menuButtonClassName)}\n            size={menuButtonSize}\n            openDialogComponentClassName={cx(styles.menuButtonDialog, dialogClassName)}\n            zIndex={dialogZIndex}\n            ariaLabel={menuButtonAriaLabel}\n            {...menuButtonProps}\n          >\n            <div className={cx(styles.menuWrapperFlex, menuWrapperClassName)} />\n          </MenuButton>\n        </div>\n      </div>\n    );\n  }\n);\n\nResponsiveList.menuButtonSizes = MenuButton.sizes;\nResponsiveList.propTypes = {\n  id: PropTypes.string,\n  className: PropTypes.string,\n  menuButtonClassName: PropTypes.string,\n  menuWrapperClassName: PropTypes.string,\n  /**\n   These attributes will be passed to the MenuButton\n   */\n  menuButtonProps: PropTypes.object,\n  menuButtonAriaLabel: PropTypes.string,\n  rootClassName: PropTypes.string,\n  dialogClassName: PropTypes.string,\n  menuButtonSize: PropTypes.oneOf(Object.values(ResponsiveList.menuButtonSizes)),\n  /**\n  Amount of space to save between the menu button and the content\n   */\n  paddingSize: PropTypes.number,\n  dialogZIndex: PropTypes.number,\n  /**\n   *  we use resize observer behind the scene to update the size, debounce the amount of callbacks (each callback may cause a reflow)\n   */\n  resizeDebounceTime: PropTypes.number\n};\nResponsiveList.defaultProps = {\n  id: \"\",\n  className: \"\",\n  dialogClassName: \"\",\n  menuButtonClassName: \"\",\n  menuWrapperClassName: \"\",\n  rootClassName: \"\",\n  menuButtonAriaLabel: \"More Actions\",\n  menuButtonProps: {},\n  menuButtonSize: ResponsiveList.menuButtonSizes.SMALL,\n  paddingSize: DEFAULT_MINIMAL_MARGIN,\n  dialogZIndex: 9999,\n  resizeDebounceTime: 0\n};\n\nexport default ResponsiveList;\n"],"names":["EMPTY_ARRAY","ResponsiveList","forwardRef","_ref","ref","id","className","rootClassName","children","menuButtonSize","paddingSize","dialogZIndex","dialogClassName","menuButtonClassName","menuWrapperClassName","resizeDebounceTime","menuButtonAriaLabel","menuButtonProps","dataTestId","componentRef","useRef","mergedRef","useMergeRef","index","useElementsOverflowingIndex","ignoreLast","directChildren","useMemo","React","Children","toArray","slice","menuChildren","childrenArray","length","hiddenChildren","map","el","_el$props","props","responsiveListPlaceholder","createElement","cx","styles","responsiveListRoot","getTestId","ComponentDefaultTestId","RESPONSIVE_LIST","responsiveList","MenuButton","_extends","componentClassName","listMenuButton","size","openDialogComponentClassName","menuButtonDialog","zIndex","ariaLabel","menuWrapperFlex","dummy","menuButtonSizes","sizes","defaultProps","SMALL","ResponsiveList$1"],"mappings":"kcASA,IACMA,EAAc,GAEdC,EAAiBC,GACrB,SAAAC,EAiBEC,GACG,IAhBDC,EAAEF,EAAFE,GACAC,EAASH,EAATG,UACAC,EAAaJ,EAAbI,cACAC,EAAQL,EAARK,SACAC,EAAcN,EAAdM,eACAC,EAAWP,EAAXO,YACAC,EAAYR,EAAZQ,aACAC,EAAeT,EAAfS,gBACAC,EAAmBV,EAAnBU,oBACAC,EAAoBX,EAApBW,qBACAC,EAAkBZ,EAAlBY,mBACAC,EAAmBb,EAAnBa,oBACAC,EAAed,EAAfc,gBACeC,EAAUf,EAAzB,eAIIgB,EAAeC,EAAO,MACtBC,EAAYC,EAAYlB,EAAKe,GAC7BI,EAAQC,EAA4B,CACxCpB,IAAKe,EACLX,SAAAA,EACAE,YAAAA,EACAK,mBAAAA,EACAU,YAAY,IAGRC,EAAiBC,GAAQ,WAC7B,OAAe,IAAXJ,EACKf,EAEaoB,EAAMC,SAASC,QAAQtB,GACxBuB,MAAM,EAAGR,EAChC,GAAG,CAACf,EAAUe,IAERS,EAAeL,GAAQ,WAC3B,IAAe,IAAXJ,EACF,OAAOvB,EAET,IAAMiC,EAAgBL,EAAMC,SAASC,QAAQtB,GAE7C,OAAOyB,EAAcF,MAAMR,EAAOU,EAAcC,OAClD,GAAG,CAAC1B,EAAUe,IAERY,EAAiBR,GAAQ,WAG7B,OAFsBC,EAAMC,SAASC,QAAQtB,GAExB4B,KAAI,SAAAC,GAAE,IAAAC,EAAA,OAAID,iBAAEC,EAAFD,EAAIE,aAAK,IAAAD,OAAA,EAATA,EAAWE,4BAA6BH,IACzE,GAAG,CAAC7B,IAEJ,OACEoB,EAAAa,cAAA,MAAA,CACEnC,UAAWoC,EAAGC,EAAOC,mBAAoBrC,GACzCF,GAAIA,EACJ,cAAaa,GAAc2B,EAAUC,EAAuBC,gBAAiB1C,IAElE,OAAVkB,GACCK,EAAAa,cAAA,MAAA,CAAKnC,UAAWoC,EAAGC,EAAOK,eAAgB1C,IACvCoB,IACEM,EAAaE,QACdN,EAAAa,cAACQ,EAAUC,EAAA,CACTC,mBAAoBT,EAAGC,EAAOS,eAAgBvC,GAC9CwC,KAAM5C,EACN6C,6BAA8BZ,EAAGC,EAAOY,iBAAkB3C,GAC1D4C,OAAQ7C,EACR8C,UAAWzC,GACPC,GAEJW,EAAAa,cAAA,MAAA,CAAKnC,UAAWoC,EAAGC,EAAOe,gBAAiB5C,IAAwBkB,KAK3EJ,EAAAa,cAAA,MAAA,CAAKrC,IAAKiB,EAAWf,UAAWoC,EAAGC,EAAOK,eAAgBL,EAAOgB,MAAOrD,IACrE6B,EACDP,EAAAa,cAACQ,EAAUC,EAAA,CACTC,mBAAoBT,EAAGC,EAAOS,eAAgBvC,GAC9CwC,KAAM5C,EACN6C,6BAA8BZ,EAAGC,EAAOY,iBAAkB3C,GAC1D4C,OAAQ7C,EACR8C,UAAWzC,GACPC,GAEJW,EAAAa,cAAA,MAAA,CAAKnC,UAAWoC,EAAGC,EAAOe,gBAAiB5C,OAKrD,IAGFb,EAAe2D,gBAAkBX,EAAWY,MAwB5C5D,EAAe6D,aAAe,CAC5BzD,GAAI,GACJC,UAAW,GACXM,gBAAiB,GACjBC,oBAAqB,GACrBC,qBAAsB,GACtBP,cAAe,GACfS,oBAAqB,eACrBC,gBAAiB,CAAE,EACnBR,eAAgBR,EAAe2D,gBAAgBG,MAC/CrD,YAnI6B,GAoI7BC,aAAc,KACdI,mBAAoB,GAGtB,IAAAiD,EAAe/D"}