{"version":3,"file":"Table.js","sources":["../../../../../../src/components/Table/Table/Table.tsx"],"sourcesContent":["import React, { forwardRef, ReactElement } from \"react\";\nimport cx from \"classnames\";\nimport { SubIcon, VibeComponent, VibeComponentProps, withStaticProps } from \"../../../types\";\nimport { ITableHeaderProps } from \"../TableHeader/TableHeader\";\nimport { ITableBodyProps } from \"../TableBody/TableBody\";\nimport { getTableRowLayoutStyles } from \"./tableHelpers\";\nimport { getTestId } from \"../../../tests/test-ids-utils\";\nimport { ComponentDefaultTestId } from \"../../../tests/constants\";\nimport { RowHeights, RowSizes } from \"./TableConsts\";\nimport styles from \"./Table.module.scss\";\n\nexport type TableLoadingStateType = \"long-text\" | \"medium-text\" | \"circle\" | \"rectangle\";\n\ntype Width = number | `${number}%` | `${number}px` | `${number}fr`;\n\nexport interface ITableColumn {\n  id: string;\n  title: string;\n  infoContent?: string;\n  width?: Width | { min: Width; max: Width };\n  icon?: SubIcon;\n  loadingStateType?: TableLoadingStateType;\n}\n\ninterface ITableProps extends VibeComponentProps {\n  columns: ITableColumn[];\n  dataState?: {\n    isLoading?: boolean;\n    isError?: boolean;\n  };\n  errorState: ReactElement;\n  emptyState: ReactElement;\n  style?: React.CSSProperties;\n  children?:\n    | ReactElement<ITableHeaderProps>\n    | ReactElement<ITableBodyProps>\n    | Array<ReactElement<ITableHeaderProps> | ReactElement<ITableBodyProps>>;\n  size?: RowSizes;\n  withoutBorder?: boolean;\n}\n\ninterface ITableContext {\n  columns: ITableProps[\"columns\"];\n  dataState?: ITableProps[\"dataState\"];\n  emptyState: ITableProps[\"emptyState\"];\n  errorState: ITableProps[\"errorState\"];\n  size: ITableProps[\"size\"];\n}\n\nexport const TableContext = React.createContext<ITableContext>(null);\n\nconst Table: VibeComponent<ITableProps, HTMLDivElement> & {\n  sizes?: typeof RowSizes;\n} = forwardRef(\n  (\n    {\n      id,\n      className,\n      \"data-testid\": dataTestId,\n      columns,\n      errorState,\n      emptyState,\n      dataState,\n      style,\n      children,\n      size = Table.sizes.MEDIUM,\n      withoutBorder\n    },\n    ref\n  ) => {\n    const classNames = cx(styles.table, { [styles.border]: !withoutBorder }, className);\n    const { gridTemplateColumns } = getTableRowLayoutStyles(columns);\n\n    /**\n     * The `--table-grid-template-columns` and `--table-row-size` variables will be available under each <Table /> scope\n     * and will be consumed in the stylesheets of its children (<TableHeader />, <TableRow />, <TableHeaderCell />)\n     */\n    const calculatedStyle = {\n      \"--table-grid-template-columns\": gridTemplateColumns,\n      \"--table-row-size\": `${RowHeights[size]}px`,\n      ...style\n    } as React.CSSProperties;\n\n    const testId = dataTestId || getTestId(ComponentDefaultTestId.TABLE, id);\n\n    return (\n      <TableContext.Provider value={{ columns, emptyState, errorState, dataState, size }}>\n        <div ref={ref} id={id} className={classNames} data-testid={testId} role=\"table\" style={calculatedStyle}>\n          {children}\n        </div>\n      </TableContext.Provider>\n    );\n  }\n);\n\nexport default withStaticProps(Table, { sizes: RowSizes });\n"],"names":["TableContext","React","createContext","Table","forwardRef","_ref","ref","id","className","dataTestId","columns","errorState","emptyState","dataState","style","children","_ref$size","size","sizes","MEDIUM","classNames","cx","styles","table","_defineProperty","border","withoutBorder","_getTableRowLayoutSty","getTableRowLayoutStyles","calculatedStyle","Object","assign","gridTemplateColumns","concat","RowHeights","testId","getTestId","ComponentDefaultTestId","TABLE","_jsx","Provider","value","role","withStaticProps","RowSizes"],"mappings":"whBAiDO,IAAMA,EAAeC,EAAMC,cAA6B,MAEzDC,EAEFC,GACF,SAAAC,EAcEC,GACE,IAbAC,EAAEF,EAAFE,GACAC,EAASH,EAATG,UACeC,EAAUJ,EAAzB,eACAK,EAAOL,EAAPK,QACAC,EAAUN,EAAVM,WACAC,EAAUP,EAAVO,WACAC,EAASR,EAATQ,UACAC,EAAKT,EAALS,MACAC,EAAQV,EAARU,SAAQC,EAAAX,EACRY,KAAAA,OAAOd,IAAHa,EAAGb,EAAMe,MAAMC,OAAMH,EAKrBI,EAAaC,EAAGC,EAAOC,MAAKC,EAAKF,GAAAA,EAAOG,QAJ/BpB,EAAbqB,eAIuElB,GACzEmB,EAAgCC,EAAwBlB,GAMlDmB,EAAkBC,OAAAC,OAAA,CACtB,gCAPyBJ,EAAnBK,oBAQN,sBAAkBC,OAAKC,EAAWjB,GAAK,OACpCH,GAGCqB,EAAS1B,GAAc2B,EAAUC,EAAuBC,MAAO/B,GAErE,OACEgC,EAACvC,EAAawC,SAASV,OAAAC,OAAA,CAAAU,MAAO,CAAE/B,QAAAA,EAASE,WAAAA,EAAYD,WAAAA,EAAYE,UAAAA,EAAWI,KAAAA,IAC1E,CAAAF,SAAAwB,EAAA,MAAAT,OAAAC,OAAA,CAAKzB,IAAKA,EAAKC,GAAIA,EAAIC,UAAWY,EAAyB,cAAAe,EAAQO,KAAK,QAAQ5B,MAAOe,aACpFd,OAIT,IAGa4B,EAAAA,EAAgBxC,EAAO,CAAEe,MAAO0B"}