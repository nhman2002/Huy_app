{"version":3,"file":"TableHeaderCell.js","sources":["../../../../../../src/components/Table/TableHeaderCell/TableHeaderCell.tsx"],"sourcesContent":["import React, { forwardRef } from \"react\";\nimport cx from \"classnames\";\nimport { SubIcon, VibeComponent, VibeComponentProps } from \"../../../types\";\nimport styles from \"./TableHeaderCell.module.scss\";\nimport Icon from \"../../Icon/Icon\";\nimport IconButton from \"../../IconButton/IconButton\";\nimport Info from \"../../Icon/Icons/components/Info\";\nimport { ButtonType } from \"../../Button/ButtonConstants\";\nimport Text from \"../../Text/Text\";\nimport Flex from \"../../Flex/Flex\";\nimport { getAriaSort, getNextSortState, getSortIcon } from \"../Table/tableHelpers\";\nimport Tooltip from \"../../Tooltip/Tooltip\";\nimport { getTestId } from \"../../../tests/test-ids-utils\";\nimport { ComponentDefaultTestId } from \"../../../tests/constants\";\n\nexport interface ITableHeaderCellProps extends VibeComponentProps {\n  title: string;\n  icon?: SubIcon;\n  infoContent?: string;\n  sortState?: \"asc\" | \"desc\" | \"none\";\n  onSortClicked?: (direction: \"asc\" | \"desc\" | \"none\") => void;\n  sortButtonAriaLabel?: string;\n}\n\nconst TableHeaderCell: VibeComponent<ITableHeaderCellProps, HTMLDivElement> = forwardRef(\n  (\n    {\n      id,\n      className,\n      \"data-testid\": dataTestId,\n      title,\n      onSortClicked,\n      infoContent,\n      icon,\n      sortState = \"none\",\n      sortButtonAriaLabel = \"Sort\"\n    },\n    ref\n  ) => {\n    return (\n      <div\n        ref={ref}\n        id={id}\n        className={cx(styles.tableHeaderCell, className)}\n        data-testid={dataTestId || getTestId(ComponentDefaultTestId.TABLE_HEADER_CELL, id)}\n        role=\"columnheader\"\n        aria-sort={getAriaSort(sortState)}\n      >\n        <Flex\n          direction={Flex.directions.ROW}\n          align={Flex.align.CENTER}\n          className={styles.tableHeaderCellContent}\n          gap={Flex.gaps.XS}\n        >\n          {icon && <Icon icon={icon} iconLabel=\"Icon\" clickable={false} className={styles.icon} />}\n          {\n            <Text type={Text.types.TEXT2} weight={Text.weights.MEDIUM} color={Text.colors.SECONDARY}>\n              {title}\n            </Text>\n          }\n          {infoContent && (\n            <Tooltip content={infoContent} referenceWrapperClassName={styles.infoTooltip}>\n              <Icon icon={Info} iconLabel={infoContent} clickable={false} />\n            </Tooltip>\n          )}\n        </Flex>\n        {onSortClicked && (\n          <Flex direction={Flex.directions.ROW} align={Flex.align.CENTER} className={styles.tableHeaderCellSort}>\n            <IconButton\n              icon={getSortIcon(sortState)}\n              kind={ButtonType.TERTIARY}\n              size={IconButton.sizes.XS}\n              ariaLabel={sortButtonAriaLabel}\n              className={cx(styles.sort, { [styles.asc]: sortState === \"asc\", [styles.desc]: sortState === \"desc\" })}\n              onClick={() => onSortClicked(getNextSortState(sortState))}\n            />\n          </Flex>\n        )}\n      </div>\n    );\n  }\n);\n\nexport default TableHeaderCell;\n"],"names":["TableHeaderCell$1","forwardRef","_ref","ref","id","dataTestId","title","onSortClicked","infoContent","icon","_ref$sortState","sortState","_ref$sortButtonAriaLa","sortButtonAriaLabel","_jsxs","Object","assign","className","cx","styles","tableHeaderCell","getTestId","ComponentDefaultTestId","TABLE_HEADER_CELL","role","getAriaSort","children","Flex","direction","directions","ROW","align","CENTER","tableHeaderCellContent","gap","gaps","XS","_jsx","Icon","iconLabel","clickable","Text","type","types","TEXT2","weight","weights","MEDIUM","color","colors","SECONDARY","Tooltip","content","referenceWrapperClassName","infoTooltip","Info","tableHeaderCellSort","IconButton","getSortIcon","kind","ButtonType","TERTIARY","size","sizes","ariaLabel","sort","_defineProperty","asc","desc","onClick","getNextSortState"],"mappings":"uvBAwBA,IA2DAA,EA3D8EC,GAC5E,SAAAC,EAYEC,GACE,IAXAC,EAAEF,EAAFE,GAEeC,EAAUH,EAAzB,eACAI,EAAKJ,EAALI,MACAC,EAAaL,EAAbK,cACAC,EAAWN,EAAXM,YACAC,EAAIP,EAAJO,KAAIC,EAAAR,EACJS,UAAAA,OAAY,IAAHD,EAAG,OAAMA,EAAAE,EAAAV,EAClBW,oBAAAA,OAAsB,IAAHD,EAAG,OAAMA,EAI9B,OACEE,EAAA,MAAAC,OAAAC,OAAA,CACEb,IAAKA,EACLC,GAAIA,EACJa,UAAWC,EAAGC,EAAOC,gBAfdlB,EAATe,WAgBe,cAAAZ,GAAcgB,EAAUC,EAAuBC,kBAAmBnB,GAC/EoB,KAAK,eACM,YAAAC,EAAYd,IAAU,CAAAe,SAAA,CAEjCZ,EAACa,EACCZ,OAAAC,OAAA,CAAAY,UAAWD,EAAKE,WAAWC,IAC3BC,MAAOJ,EAAKI,MAAMC,OAClBf,UAAWE,EAAOc,uBAClBC,IAAKP,EAAKQ,KAAKC,IAEd,CAAAV,SAAA,CAAAjB,GAAQ4B,EAACC,EAAI,CAAC7B,KAAMA,EAAM8B,UAAU,OAAOC,WAAW,EAAOvB,UAAWE,EAAOV,OAE9E4B,EAACI,EAAI1B,OAAAC,OAAA,CAAC0B,KAAMD,EAAKE,MAAMC,MAAOC,OAAQJ,EAAKK,QAAQC,OAAQC,MAAOP,EAAKQ,OAAOC,WAC3E,CAAAxB,SAAApB,KAGJE,GACC6B,EAACc,EAAQpC,OAAAC,OAAA,CAAAoC,QAAS5C,EAAa6C,0BAA2BlC,EAAOmC,aAC/D,CAAA5B,SAAAW,EAACC,EAAI,CAAC7B,KAAM8C,EAAMhB,UAAW/B,EAAagC,WAAW,WAI1DjC,GACC8B,EAACV,EAAIZ,OAAAC,OAAA,CAACY,UAAWD,EAAKE,WAAWC,IAAKC,MAAOJ,EAAKI,MAAMC,OAAQf,UAAWE,EAAOqC,qBAChF,CAAA9B,SAAAW,EAACoB,EAAU,CACThD,KAAMiD,EAAY/C,GAClBgD,KAAMC,EAAWC,SACjBC,KAAML,EAAWM,MAAM3B,GACvB4B,UAAWnD,EACXI,UAAWC,EAAGC,EAAO8C,KAAIC,EAAAA,EAAA,GAAK/C,EAAOgD,IAAoB,QAAdxD,GAAsBQ,EAAOiD,KAAqB,SAAdzD,IAC/E0D,QAAS,WAAA,OAAM9D,EAAc+D,EAAiB3D,GAAW,UAMrE"}