{"version":3,"file":"Toggle.js","sources":["../../../../../src/components/Toggle/Toggle.tsx"],"sourcesContent":["import React, { forwardRef } from \"react\";\nimport cx from \"classnames\";\nimport { noop as NOOP } from \"lodash-es\";\nimport { Switch } from \"../Switch/Switch\";\nimport { MockToggle } from \"./MockToggle\";\nimport { backwardCompatibilityForProperties } from \"../../helpers/backwardCompatibilityForProperties\";\nimport { VibeComponent, VibeComponentProps } from \"../../types\";\nimport styles from \"./Toggle.module.scss\";\nimport { ComponentDefaultTestId, getTestId } from \"../../tests/test-ids-utils\";\n\ninterface ToggleProps extends VibeComponentProps {\n  /**\n   * @deprecated - use className instead\n   */\n  componentClassName?: string;\n  /**\n   * ClassName to override styles of selected toggle\n   */\n  toggleSelectedClassName?: string;\n  isDefaultSelected?: boolean;\n  isSelected?: boolean;\n  onChange?: (value: boolean) => void;\n  value?: string;\n  name?: string;\n  /**\n   * @deprecated - use disabled instead\n   */\n  isDisabled?: boolean;\n  disabled?: boolean;\n  areLabelsHidden?: boolean;\n  onOverrideText?: string;\n  offOverrideText?: string;\n  ariaLabel?: string;\n  ariaControls?: string;\n}\n\nconst Toggle: VibeComponent<ToggleProps, HTMLInputElement> = forwardRef(\n  (\n    {\n      id,\n      // Backward compatibility for props naming\n      componentClassName,\n      className,\n      toggleSelectedClassName,\n      isDefaultSelected = true,\n      isSelected,\n      onChange = NOOP,\n      value,\n      name,\n      disabled,\n      // Backward compatibility for props naming\n      isDisabled,\n      ariaLabel,\n      ariaControls,\n      areLabelsHidden = false,\n      onOverrideText = \"On\",\n      offOverrideText = \"Off\",\n      \"data-testid\": dataTestId\n    },\n    ref\n  ) => {\n    const overrideClassName = backwardCompatibilityForProperties([className, componentClassName]) as string;\n    const overrideDisabled = backwardCompatibilityForProperties([disabled, isDisabled], false) as boolean;\n    const wrapperClassName = cx(styles.wrapper);\n    const inputClassName = cx(styles.toggleInput);\n\n    return (\n      <Switch\n        defaultChecked={isDefaultSelected}\n        checked={isSelected}\n        id={id}\n        wrapperClassName={wrapperClassName}\n        onChange={onChange}\n        value={value}\n        name={name}\n        disabled={overrideDisabled}\n        ariaLabel={ariaLabel}\n        ariaControls={ariaControls}\n        inputClassName={inputClassName}\n        ref={ref}\n        data-testid={dataTestId || getTestId(ComponentDefaultTestId.TOGGLE)}\n      >\n        <MockToggle\n          areLabelsHidden={areLabelsHidden}\n          offOverrideText={offOverrideText}\n          onOverrideText={onOverrideText}\n          disabled={overrideDisabled}\n          className={overrideClassName}\n          selectedClassName={toggleSelectedClassName}\n        />\n      </Switch>\n    );\n  }\n);\n\nexport default Toggle;\n"],"names":["Toggle$1","forwardRef","_ref","ref","id","toggleSelectedClassName","_ref$isDefaultSelecte","isDefaultSelected","isSelected","_ref$onChange","onChange","NOOP","value","name","disabled","isDisabled","ariaLabel","ariaControls","_ref$areLabelsHidden","areLabelsHidden","_ref$onOverrideText","onOverrideText","_ref$offOverrideText","offOverrideText","dataTestId","overrideClassName","backwardCompatibilityForProperties","className","componentClassName","overrideDisabled","wrapperClassName","cx","styles","wrapper","inputClassName","toggleInput","_jsx","Switch","defaultChecked","checked","getTestId","ComponentDefaultTestId","TOGGLE","children","MockToggle","selectedClassName"],"mappings":"+bAoCA,IA2DAA,EA3D6DC,GAC3D,SAAAC,EAsBEC,GACE,IArBAC,EAAEF,EAAFE,GAIAC,EAAuBH,EAAvBG,wBAAuBC,EAAAJ,EACvBK,kBAAAA,OAAoB,IAAHD,GAAOA,EACxBE,EAAUN,EAAVM,WAAUC,EAAAP,EACVQ,SAAAA,OAAWC,IAAHF,EAAGE,EAAIF,EACfG,EAAKV,EAALU,MACAC,EAAIX,EAAJW,KACAC,EAAQZ,EAARY,SAEAC,EAAUb,EAAVa,WACAC,EAASd,EAATc,UACAC,EAAYf,EAAZe,aAAYC,EAAAhB,EACZiB,gBAAAA,OAAkB,IAAHD,GAAQA,EAAAE,EAAAlB,EACvBmB,eAAAA,OAAiB,IAAHD,EAAG,KAAIA,EAAAE,EAAApB,EACrBqB,gBAAAA,OAAkB,IAAHD,EAAG,MAAKA,EACRE,EAAUtB,EAAzB,eAIIuB,EAAoBC,EAAmC,CAnBlDxB,EAATyB,UADkBzB,EAAlB0B,qBAqBIC,EAAmBH,EAAmC,CAACZ,EAAUC,IAAa,GAC9Ee,EAAmBC,EAAGC,EAAOC,SAC7BC,EAAiBH,EAAGC,EAAOG,aAEjC,OACEC,EAACC,iBACCC,eAAgB/B,EAChBgC,QAAS/B,EACTJ,GAAIA,EACJ0B,iBAAkBA,EAClBpB,SAAUA,EACVE,MAAOA,EACPC,KAAMA,EACNC,SAAUe,EACVb,UAAWA,EACXC,aAAcA,EACdiB,eAAgBA,EAChB/B,IAAKA,EACQ,cAAAqB,GAAcgB,EAAUC,EAAuBC,SAE5D,CAAAC,SAAAP,EAACQ,EACC,CAAAzB,gBAAiBA,EACjBI,gBAAiBA,EACjBF,eAAgBA,EAChBP,SAAUe,EACVF,UAAWF,EACXoB,kBAAmBxC,MAI3B"}