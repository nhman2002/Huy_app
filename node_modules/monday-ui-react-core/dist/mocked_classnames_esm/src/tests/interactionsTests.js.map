{"version":3,"file":"interactionsTests.js","sources":["../../../../src/tests/interactions-utils.ts"],"sourcesContent":["import { fireEvent, queries, userEvent, within } from \"@storybook/testing-library\";\nimport { BoundFunctions, Screen, waitFor } from \"@testing-library/react\";\nimport { NavigationCommand as NavigationCommandType } from \"./constants\";\nimport { expect } from \"@storybook/jest\";\n\nexport type Canvas = HTMLElement | BoundFunctions<typeof queries>;\nexport type TestFunction = (canvas: Canvas, args: Record<string, any>) => unknown;\nexport type Coordinates = { x: number; y: number };\n\n// Internal functions\nexport const testFunctionWrapper = (testFunc: TestFunction) => {\n  return async ({ canvasElement, args }: { canvasElement: Screen; args: Record<string, any> }) => {\n    // Starts querying the component from its root element\n    const canvas = getWithin(canvasElement);\n    return testFunc(canvas, args);\n  };\n};\n\nexport const clearText = async (element: HTMLElement) => {\n  userEvent.clear(element);\n};\n\nfunction logFunctionStart(name: string) {\n  expect(` ➡️ ${name}`).toBeDefined();\n}\n\nfunction getElementClientCenter(element: HTMLElement) {\n  const { left, top, width, height } = element.getBoundingClientRect();\n  return {\n    x: left + width / 2,\n    y: top + height / 2\n  };\n}\n\nconst getCoords = ({\n  toElm,\n  toCoords,\n  delta,\n  from\n}: {\n  toElm: HTMLElement;\n  toCoords: Coordinates;\n  delta: Coordinates;\n  from: Coordinates;\n}) => {\n  if (toCoords) {\n    return { ...from, ...toCoords };\n  }\n  if (toElm) {\n    return getElementClientCenter(toElm);\n  }\n  if (delta) {\n    return {\n      x: from.x + delta.x,\n      y: from.y + delta.y\n    };\n  }\n  return {\n    x: from.x + 10,\n    y: from.y + 0\n  };\n};\n\nfunction getWithin(canvasOrValidTestElement: HTMLElement | BoundFunctions<typeof queries>) {\n  if (canvasOrValidTestElement instanceof HTMLElement) {\n    const result = within(canvasOrValidTestElement);\n    if (result instanceof Error) {\n      throw result;\n    }\n    return result;\n  } else if (canvasOrValidTestElement.getByRole) return canvasOrValidTestElement;\n}\n\n// External constants\nexport const NavigationCommand = NavigationCommandType;\n\n// External functions\nexport const interactionSuite =\n  ({\n    beforeEach = null,\n    beforeAll = null,\n    skip = false,\n    tests,\n    afterEach = null,\n    afterAll = null\n  }: {\n    beforeEach?: TestFunction;\n    beforeAll?: TestFunction;\n    skip?: boolean;\n    tests: Array<TestFunction>;\n    afterAll?: TestFunction;\n    afterEach?: TestFunction;\n  }): (({ canvasElement, args }: { canvasElement: Screen; args: Record<string, any> }) => Promise<void>) =>\n  async ({ canvasElement, args }) => {\n    if (skip) return;\n\n    if (beforeAll) {\n      logFunctionStart(\"Before all:\");\n      await testFunctionWrapper(beforeAll)({ canvasElement, args });\n    }\n\n    for (const test of tests) {\n      const fnName = test.name;\n      if (beforeEach) {\n        logFunctionStart(`Before: ${fnName}`);\n        await testFunctionWrapper(beforeEach)({ canvasElement, args });\n      }\n\n      logFunctionStart(`Running : ${fnName}`);\n      await testFunctionWrapper(test)({ canvasElement, args });\n\n      if (afterEach) {\n        logFunctionStart(`After: ${fnName}`);\n        await testFunctionWrapper(afterEach)({ canvasElement, args });\n      }\n    }\n\n    if (afterAll) {\n      logFunctionStart(\"After all:\");\n      await testFunctionWrapper(afterAll)({ canvasElement, args });\n    }\n  };\n\nexport const getByTestId = (rootElement: HTMLElement | BoundFunctions<typeof queries>, dataTestId: string) => {\n  return getWithin(rootElement).getByTestId(dataTestId);\n};\n\nexport const getAllByTestId = (rootElement: HTMLElement | BoundFunctions<typeof queries>, dataTestId: string) => {\n  return getWithin(rootElement).getAllByTestId(dataTestId);\n};\n\nexport const getByPlaceholderText = (rootElement: HTMLElement | BoundFunctions<typeof queries>, text: string) => {\n  return getWithin(rootElement).getByPlaceholderText(text);\n};\n\nexport const getAllByPlaceholderText = (rootElement: HTMLElement | BoundFunctions<typeof queries>, text: string) => {\n  return getWithin(rootElement).getAllByPlaceholderText(text);\n};\n\nexport const getByClassName = (className: string) => {\n  return document.getElementsByClassName(className);\n};\n\nexport const getFirstByClassName = (className: string) => {\n  return document.getElementsByClassName(className)[0];\n};\n\nexport const getByRole = (rootElement: HTMLElement | BoundFunctions<typeof queries>, role: string) => {\n  return getWithin(rootElement).getByRole(role);\n};\n\nexport const getAllByRole = (rootElement: HTMLElement | BoundFunctions<typeof queries>, role: string) => {\n  return getWithin(rootElement).getAllByRole(role);\n};\n\nexport const getByLabelText = (rootElement: HTMLElement | BoundFunctions<typeof queries>, text: string) => {\n  return getWithin(rootElement).getByLabelText(text);\n};\n\nexport const getAllByLabelText = (rootElement: HTMLElement, text: string) => {\n  return getWithin(rootElement).getAllByLabelText(text);\n};\n\nexport const getByText = (rootElement: HTMLElement | BoundFunctions<typeof queries>, text: string) => {\n  return getWithin(rootElement).getByText(text);\n};\n\nexport const getAllByText = (rootElement: HTMLElement | BoundFunctions<typeof queries>, text: string) => {\n  return getWithin(rootElement).getAllByText(text);\n};\n\nexport const clickElement = (element: HTMLElement) => {\n  return userEvent.click(element);\n};\n\nexport const hoverElement = (element: HTMLElement) => {\n  return userEvent.hover(element);\n};\n\nexport const typeText = async (element: HTMLElement, text: string, waitForDebounceMs = 250) => {\n  const promise = userEvent.type(element, text, {\n    delay: 50\n  });\n  const result = await promise;\n  await delay(waitForDebounceMs);\n  return result;\n};\n\nexport const expectActiveElementToHaveExactText = (text: string) => {\n  expect(document.activeElement).toHaveTextContent(new RegExp(`^${text}$`));\n};\n\nexport const expectActiveElementToHavePartialText = (text: string) => {\n  expect(document.activeElement).toHaveTextContent(text);\n};\n\nexport const pressNavigationKey = async (command = NavigationCommandType.TAB, waitForDebounceMs = 0): Promise<any> => {\n  const promise = command === NavigationCommandType.TAB ? userEvent.tab() : userEvent.keyboard(command);\n  const result = await promise;\n  await delay(waitForDebounceMs);\n  return result;\n};\n\nexport function delay(timeout: number) {\n  return new Promise((resolve: (value: unknown) => void) => {\n    if (!timeout) return resolve(undefined);\n    setTimeout(resolve, timeout);\n  });\n}\n\nexport const waitForElementVisible = (getterFunc: () => HTMLElement) => {\n  return new Promise(resolve => {\n    let element: HTMLElement;\n    waitFor(async () => {\n      element = await getterFunc();\n      expect(element).toBeVisible();\n    }).then(() => {\n      resolve(element);\n    });\n  });\n};\n\nexport const typeMultipleTimes = async (text: string, count: number, options = { delay: 70 }) => {\n  text = text.repeat(count);\n  await userEvent.keyboard(text, options);\n};\n\nexport async function drag(\n  element: HTMLElement,\n  {\n    delta = undefined,\n    toCoords = undefined,\n    toElm = undefined,\n    steps = 20,\n    duration = 100\n  }: { delta: Coordinates; toCoords: Coordinates; toElm: HTMLElement; steps: number; duration: number }\n) {\n  const from = getElementClientCenter(element);\n  const to = getCoords({ toElm, toCoords, delta, from });\n  const step = {\n    x: (to.x - from.x) / steps,\n    y: (to.y - from.y) / steps\n  };\n  const current = {\n    clientX: from.x,\n    clientY: from.y\n  };\n  userEvent.hover(element);\n  fireEvent.pointerEnter(element, current);\n  fireEvent.pointerOver(element, current);\n  fireEvent.pointerMove(element, current);\n  fireEvent.pointerDown(element, current);\n  for (let i = 0; i < steps; i++) {\n    current.clientX += step.x;\n    current.clientY += step.y;\n    await delay(duration / steps);\n    fireEvent.pointerMove(element, current);\n  }\n  fireEvent.pointerUp(element, current);\n}\n"],"names":["testFunctionWrapper","testFunc","_ref","canvasElement","args","__awaiter","_regeneratorRuntime","mark","_callee","canvas","wrap","_context","prev","next","getWithin","abrupt","stop","clearText","element","_callee2","_context2","userEvent","clear","logFunctionStart","name","expect","concat","toBeDefined","getElementClientCenter","_element$getBoundingC","getBoundingClientRect","x","left","width","y","top","height","getCoords","_ref2","toElm","toCoords","delta","from","Object","assign","canvasOrValidTestElement","HTMLElement","result","within","Error","getByRole","NavigationCommand","NavigationCommandType","interactionSuite","_ref3","_ref3$beforeEach","beforeEach","_ref3$beforeAll","beforeAll","_ref3$skip","skip","tests","_ref3$afterEach","afterEach","_ref3$afterAll","afterAll","_ref4","_callee3","_iterator","_step","test","fnName","_context3","_createForOfIteratorHelper","s","n","done","value","t0","e","f","finish","getByTestId","rootElement","dataTestId","getAllByTestId","getByPlaceholderText","text","getAllByPlaceholderText","getByClassName","className","document","getElementsByClassName","getFirstByClassName","role","getAllByRole","getByLabelText","getAllByLabelText","getByText","getAllByText","clickElement","click","hoverElement","hover","typeText","waitForDebounceMs","arguments","length","undefined","_callee4","promise","_context4","type","delay","sent","expectActiveElementToHaveExactText","activeElement","toHaveTextContent","RegExp","expectActiveElementToHavePartialText","pressNavigationKey","command","TAB","_callee5","_context5","tab","keyboard","timeout","Promise","resolve","setTimeout","waitForElementVisible","getterFunc","waitFor","_callee6","_context6","toBeVisible","then","typeMultipleTimes","count","options","_callee7","_context7","repeat","drag","_ref5","_ref5$delta","_ref5$toCoords","_ref5$toElm","_ref5$steps","steps","_ref5$duration","duration","to","step","current","clientX","clientY","fireEvent","pointerEnter","pointerOver","pointerMove","pointerDown","i","_context8","pointerUp","_callee8"],"mappings":"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"}